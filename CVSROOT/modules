# Three different line formats are valid:
#	key	-a    aliases...
#	key [options] directory
#	key [options] directory files...
#
# Where "options" are composed of:
#	-i prog		Run "prog" on "cvs commit" from top-level of module.
#	-o prog		Run "prog" on "cvs checkout" of module.
#	-e prog		Run "prog" on "cvs export" of module.
#	-t prog		Run "prog" on "cvs rtag" of module.
#	-u prog		Run "prog" on "cvs update" of module.
#	-d dir		Place module in directory "dir" instead of module name.
#	-l		Top-level directory only -- do not recurse.
#
# NOTE:  If you change any of the "Run" options above, you'll have to
# release and re-checkout any working directories of these modules.
#
# And "directory" is a path to a directory relative to $CVSROOT.
#
# The "-a" option specifies an alias.  An alias is interpreted as if
# everything on the right of the "-a" had been typed on the command line.
#
# You can encode a module within a module by using the special '&'
# character to interpose another module into the current module.  This
# can be useful for creating a module that consists of many directories
# spread out over the entire source repository.

CVSROOT      CVSROOT
modules	     CVSROOT modules

xsbemu	     -d emu 	   XSB/emu
xsbsyslib    -d syslib	   XSB/syslib
xsblib       -d lib    	   XSB/lib
xsbcmplib    -d cmplib     XSB/cmplib
xsbpackages  -d packages   XSB/packages

flora        -d flora      XSB/packages/flora

xsbdocs	     -d docs       XSB/docs
htdocs	     -d htdocs	   XSB/docs/homepage

xsbtests     -d tests      xsbtests
xsbexamples  -d examples   XSB/examples
xsbadmin     -d admin      XSB/admin

# Everything but admin, examples, docs. Note: negated part comes first!
xsbcore	     -a !XSB/admin !XSB/examples !XSB/docs XSB

# What developers need, sans tests, because of the size of the testsuite
xsbdevel     -a XSB

# This is how we'll be making releases
xsbrelease   -a !XSB/admin !XSB/docs XSB
