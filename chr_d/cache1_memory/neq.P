(:-compiler_options([singleton_warnings_off])).

(:-import install_verify_attribute_handler / 4  ','  get_attr / 3  ','  put_attr / 3  from  machine).

(:-local attr_unify_hook / 2).

(:-install_verify_attribute_handler(neq,A,B,attr_unify_hook(A,B))).

(:-import ground / 1  ','  member / 2  ','  append / 3  ','  ith / 3  from  basics).

(:-import delete_ith / 4  from  listutil).

(:-[attv_aux]).

(:-attribute neq / 2  ','  project1 / 2  ','  project2 / 2).

attr_unify_hook(v(A,B,C,D,E,F),G) :-
        (  var(G) ->
             get_neq_atts(G,H,I,J,K,L,M),
             merge_attr_lists([A,B,C,D,E,F],[H,I,J,K,L,M],[N,O,P,Q,R,S]),
             pose_all_constr([neq / 2,project1 / 2,project2 / 2],1,G,[N,O,P,Q,R,S])
        ;
             pose_all_constr([neq / 2,project1 / 2,project2 / 2],1,G,[A,B,C,D,E,F])
        ).

get_neq_atts(A,B,C,D,E,F,G) :-
        (  get_attr(A,neq,v(B,C,D,E,F,G)) ->
             true
        ;
             G = [],
             F = [],
             E = [],
             D = [],
             C = [],
             B = []
        ).

put_neq_atts(A,B,C,D,E,F,G) :-
        nf_put_atts(A,neq,v(B,C,D,E,F,G)).

check_neq(A,B) :-
        var_in_list([A,B]),
        (  var(A) ->
             get_neq_atts(A,C,D,E,F,G,H),
             var_member(attr(B),C)
        ;
             true
        ),
        (  var(B) ->
             get_neq_atts(B,I,J,K,L,M,N),
             var_member(attr(A),J)
        ;
             true
        ).

check_project1(A,B) :-
        var_in_list([A,B]),
        (  var(A) ->
             get_neq_atts(A,C,D,E,F,G,H),
             var_member(attr(B),E)
        ;
             true
        ),
        (  var(B) ->
             get_neq_atts(B,I,J,K,L,M,N),
             var_member(attr(A),L)
        ;
             true
        ).

check_project2(A,B) :-
        var_in_list([A,B]),
        (  var(A) ->
             get_neq_atts(A,C,D,E,F,G,H),
             var_member(attr(B),G)
        ;
             true
        ),
        (  var(B) ->
             get_neq_atts(B,I,J,K,L,M,N),
             var_member(attr(A),N)
        ;
             true
        ).

match_neq(A,B) :-
        var(A),
        get_neq_atts(A,C,D,E,F,G,H),
        member(attr(B),C).

match_neq(A,B) :-
        var(B),
        get_neq_atts(B,C,D,E,F,G,H),
        member(attr(A),D).

match_project1(A,B) :-
        var(A),
        get_neq_atts(A,C,D,E,F,G,H),
        member(attr(B),E).

match_project1(A,B) :-
        var(B),
        get_neq_atts(B,C,D,E,F,G,H),
        member(attr(A),F).

match_project2(A,B) :-
        var(A),
        get_neq_atts(A,C,D,E,F,G,H),
        member(attr(B),G).

match_project2(A,B) :-
        var(B),
        get_neq_atts(B,C,D,E,F,G,H),
        member(attr(A),H).

add_neq(A,B) :-
        (  check_neq(A,B) ->
             true
        ;
             add_neq_1(A,B)
        ).

add_neq_1(A,B) :-
        (  var(A) ->
             get_neq_atts(A,C,D,E,F,G,H),
             append_unique(A,C,[attr(B)],I),
             put_neq_atts(A,I,D,E,F,G,H)
        ;
             true
        ),
        (  var(B) ->
             get_neq_atts(B,J,K,L,M,N,O),
             append_unique(B,K,[attr(A)],P),
             put_neq_atts(B,J,P,L,M,N,O)
        ;
             true
        ).

add_project1(A,B) :-
        (  check_project1(A,B) ->
             true
        ;
             add_project1_1(A,B)
        ).

add_project1_1(A,B) :-
        (  var(A) ->
             get_neq_atts(A,C,D,E,F,G,H),
             append_unique(A,E,[attr(B)],I),
             put_neq_atts(A,C,D,I,F,G,H)
        ;
             true
        ),
        (  var(B) ->
             get_neq_atts(B,J,K,L,M,N,O),
             append_unique(B,M,[attr(A)],P),
             put_neq_atts(B,J,K,L,P,N,O)
        ;
             true
        ).

add_project2(A,B) :-
        (  check_project2(A,B) ->
             true
        ;
             add_project2_1(A,B)
        ).

add_project2_1(A,B) :-
        (  var(A) ->
             get_neq_atts(A,C,D,E,F,G,H),
             append_unique(A,G,[attr(B)],I),
             put_neq_atts(A,C,D,E,F,I,H)
        ;
             true
        ),
        (  var(B) ->
             get_neq_atts(B,J,K,L,M,N,O),
             append_unique(B,O,[attr(A)],P),
             put_neq_atts(B,J,K,L,M,N,P)
        ;
             true
        ).

remove_neq(A,B) :-
        (  var(A) ->
             get_neq_atts(A,C,D,E,F,G,H),
             abs_ith(I,C,attr(B)),
             delete_ith(I,C,attr(B),J),
             put_neq_atts(A,J,D,E,F,G,H)
        ;
             true
        ),
        (  var(B) ->
             get_neq_atts(B,K,L,M,N,O,P),
             abs_ith(Q,L,attr(A)),
             delete_ith(Q,L,attr(A),R),
             put_neq_atts(B,K,R,M,N,O,P)
        ;
             true
        ).

remove_project1(A,B) :-
        (  var(A) ->
             get_neq_atts(A,C,D,E,F,G,H),
             abs_ith(I,E,attr(B)),
             delete_ith(I,E,attr(B),J),
             put_neq_atts(A,C,D,J,F,G,H)
        ;
             true
        ),
        (  var(B) ->
             get_neq_atts(B,K,L,M,N,O,P),
             abs_ith(Q,N,attr(A)),
             delete_ith(Q,N,attr(A),R),
             put_neq_atts(B,K,L,M,R,O,P)
        ;
             true
        ).

remove_project2(A,B) :-
        (  var(A) ->
             get_neq_atts(A,C,D,E,F,G,H),
             abs_ith(I,G,attr(B)),
             delete_ith(I,G,attr(B),J),
             put_neq_atts(A,C,D,E,F,J,H)
        ;
             true
        ),
        (  var(B) ->
             get_neq_atts(B,K,L,M,N,O,P),
             abs_ith(Q,P,attr(A)),
             delete_ith(Q,P,attr(A),R),
             put_neq_atts(B,K,L,M,N,O,R)
        ;
             true
        ).

neq(A,B) :-
        neq_eval_1(A,B).

neq_eval_1(A,B) :-
        (
          B == A,
          true,
          true,
          true ->
             fail
        ;
             neq_eval_2(A,B)
        ).

neq_eval_2(A,B) :-
        (
          true,
          true,
          check_neq(B,A),
          true ->
             true,
             true
        ;
             neq_eval_3(A,B)
        ).

neq_eval_3(A,B) :-
        !,
        add_neq(A,B).

project1(A,B) :-
        project1_eval_1(A,B).

project1_eval_1(A,B) :-
        (
          true,
          true,
          get_nth_attr(A,neq,1,C) ->
             project1_eval_1_1(A,B,C),
             project1_eval_2(A,B)
        ;
             project1_eval_2(A,B)
        ).

project1_eval_1_1(A,B,[]).

project1_eval_1_1(A,B,[attr(C)|D]) :-
        (
          true,
          check_neq(A,C),
          \+var_member(C,B) ->
             remove_neq(A,C),
             true
        ;
             true
        ),
        project1_eval_1_1(A,B,D).

project1_eval_2(A,B) :-
        (
          true,
          true,
          true,
          true ->
             true
        ;
             project1_eval_3(A,B)
        ).

project1_eval_3(A,B) :-
        !,
        add_project1(A,B).

project2(A,B) :-
        project2_eval_1(A,B).

project2_eval_1(A,B) :-
        (
          true,
          true,
          get_nth_attr(A,neq,2,C) ->
             project2_eval_1_1(A,B,C),
             project2_eval_2(A,B)
        ;
             project2_eval_2(A,B)
        ).

project2_eval_1_1(A,B,[]).

project2_eval_1_1(A,B,[attr(C)|D]) :-
        (
          true,
          check_neq(C,A),
          \+var_member(C,B) ->
             remove_neq(C,A),
             true
        ;
             true
        ),
        project2_eval_1_1(A,B,D).

project2_eval_2(A,B) :-
        (
          true,
          true,
          true,
          true ->
             true
        ;
             project2_eval_3(A,B)
        ).

project2_eval_3(A,B) :-
        !,
        add_project2(A,B).

show_atts(A) :-
        show_atts(A,neq).

