	INSTALLATION INSTRUCTIONS FOR WINDOWS OR DOS
	--------------------------------------------


1. Check the file 

       emu\configs\config.h

   You may have to change some variables there. The variables are commented
   so hopefully it should be clear how things might need to be changed.
   The part of the file where changes are allowed is clearly marked.

2. Check the file:

   Windows:
       config\x86-pc-windows\configuration.P
   Dos:
       config\x86-pc-pcdos\configuration.P

   Again, some settings there might need to be changed.
   The file is commented and the part that might need to be changed is
   clearly marked.

3. IF YOU ARE DEBUGGING:
   Check the files in emu\debugs\ and DEFINE the appropriate debugging
   flags. In particular, the DEBUG flag in emu/debugs/debug.h must be set.

4. If you change the XSB scheduling strategy (batched to local or vice
   versa)  in 1 and 2 or if you are changing the compilation mode from
   DEBUG to optimized, then please also update the file

   Windows:
	 config\x86-pc-windows\banner.msg
   DOS:
	 config\x86-pc-pcdos\banner.msg

   The only purpose of this update is to ensure that the user doesn't get
   an incorrect banner message on startup.
   Changing this files alone won't enable debugging and/or local scheduling 
   strategy. You must also recompile XSB with these options enabled.

5. If you downloaded a precompiled version of XSB, you are done.
   If you need to recompile XSB, then read (6).

6. Compile the .\emu directory.

   Windows:
      cd emu
      NMAKE /f "MS_VC_Mfile.mak" CFG="release" (or "debug")

      Other options are DLL=yes and ORACLE=yes.
      In the latter case, you also have to specify SITE_LIBS="oracle libraries"
      where Oracle libraries (should have been specified in the Oracle manual).

[NOTES on using Microsoft Visual C++:]
To compile from the command line, you should set some environment
variables. First, the path to NMAKE should be in the PATH
env. variable. Also, you should set the following variables:

set LIB=c:\msdev\lib
set INCLUDE=c:\msdev\include

You should change c:\msdev, above, for the correct installation path
of your MS Visual C++

7. The executable will be in

     ./config/x86-pc-windows/bin/xsb.exe

8. If you compiled XSB as a DLL (with DLL=yes) then NMAKE will put the DLL in:

     ./config/x86-pc-windows/saved.o/xsb.dll

9. If you first compiled XSB as an executable and then want to compile it
   as a DLL, then you should run

        NMAKE /f "MS_VC_Mfile.mak" clean

   before producing the xsb.dll. This will wipe out the object files from
   the previous build, but it will leave xsb.exe in place, so you can use
   both xsb.dll and xsb.exe.

10. If you first compiled XSB as a release version and then decided to
    create a debug version (or vice versa), you must also run 

        NMAKE /f "MS_VC_Mfile.mak" clean

    in between. However, you should be aware of the fact that the debug
    version will replace the release executable (or the other way around).
