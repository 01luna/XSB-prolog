/* File:      socket.P
** Author(s): The XSB Group
** Contact:   xsb-contact@cs.sunysb.edu
** 
** Copyright (C) The Research Foundation of SUNY, 1986, 1993-1998
** 
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** $Id: socket.P,v 1.6 1999-09-06 17:32:28 kifer Exp $
** 
*/

:- compiler_options([xpp_on,sysmod]).
#include "io_defs.h"
#include "standard.h"
#include "socket_defs.h"

%% socket_flush:  for back compatibility
socket_flush(FileDes) :- file_function(FILE_FLUSH,FileDes,_,[],[],[],[]).

%% Socket cals with error
socket(Sockfd,Error) :-
	socket_request(SOCKET_ROOT,AF_INET,Sockfd,Error,_,_,_).
socket_bind(Sockfd,Port,Error) :-
	socket_request(SOCKET_BIND,AF_INET,Sockfd,Port,Error,_,_).
socket_listen(Sockfd,Length,Error) :-
	socket_request(SOCKET_LISTEN,Sockfd,Length,Error,_,_,_).
socket_accept(Sockfd,Sockfptr,Error) :-
	socket_request(SOCKET_ACCEPT,Sockfd,Sockfptr,Error,_,_,_).
socket_connect(Sockfd,Port,Hostname,Sockfptr,Error) :- 
	socket_request(SOCKET_CONNECT,AF_INET,Sockfd,Port,
		       Hostname,Sockfptr,Error).
socket_close(Sockfd,Error) :-
	socket_request(SOCKET_CLOSE,Sockfd,Error,_,_,_,_).
socket_recv(Sockfd, Msg,Error) :-
	socket_request(SOCKET_RECV,Sockfd,Msg,Error,_,_,_).
socket_send(Sockfd, Msg,Error) :-
	socket_request(SOCKET_SEND,Sockfd,Msg,Error,_,_,_).
socket_send_eof(Sockfd,Error) :-
	socket_request(SOCKET_SEND_EOF,Sockfd,Error,_,_,_,_).
socket_send_asci(Sockfd,Msg,Error) :-
	socket_request(SOCKET_SEND_ASCI,Sockfd,Msg,Error,_,_,_).

socket_get0(Sockfd,Char,Error) :-
	socket_request(SOCKET_GET0,Sockfd,Char,Error,_,_,_).
socket_put(Sockfd,Char,Error) :-
	socket_request(SOCKET_PUT,Sockfd, Char,Error,_,_,_).
socket_set_option(Sockfd,OptionName,Value) :-
	socket_request(SOCKET_SET_OPTION,Sockfd, OptionName, Value,_,_,_).

%% Versions without the Error argument, for backward compatibility
socket(Sockfd) :- socket(Sockfd,_).
socket_bind(Sockfd,Port) :- socket_bind(Sockfd,Port,_).
socket_listen(Sockfd,Length) :- socket_listen(Sockfd,Length,_).
socket_accept(Sockfd,Sockfptr) :- socket_accept(Sockfd,Sockfptr,_).
socket_connect(Sockfd,Port,Hostname,Sockfptr) :- 
	socket_connect(Sockfd,Port,Hostname,Sockfptr,_).
socket_close(Sockfd) :- socket_close(Sockfd,_).
socket_recv(Sockfd, Msg) :- socket_recv(Sockfd, Msg, _).
socket_send(Sockfd, Msg) :- socket_send(Sockfd, Msg, _).
socket_send_eof(Sockfd) :- socket_send_eof(Sockfd,_).
socket_send_asci(Sockfd,Msg) :- socket_send_asci(Sockfd,Msg,_).

%% socket_get0 already had Error code arg in the old days

socket_put(Sockfd,Char) :- socket_put(Sockfd,Char,_).

%% socket_set_option doesn''t need error code, so

