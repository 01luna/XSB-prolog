/* File:      flrundefhook.P
**
** Author(s): Guizhen Yang
**            Michael Kifer
**
** Contact:   xsb-contact@cs.sunysb.edu
**
** Copyright (C) The Research Foundation of SUNY, 1999-2001
**
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
** 
** 
*/


:- compiler_options([xpp_on]).

#include "flora_terms.flh"


/****************************************************************************
  flora_undefined_predicate_hook/1
****************************************************************************/
%% Case for a call to a molecule
flora_undefined_predicate_hook([PscRecord,fail]) :-
	%% Get the predicate symbol.
	psc_name(PscRecord,PredName),
	%% Decode the predicate symbol.
	flora_decode_predicate(PredName,PredicateType,ModuleName,_,PredicateSymbol,_),
	( PredicateType == (flogic) ->
	    %% an F-logic predicate
	    ( flLoadedModule(ModuleName) ->
		%% This is very unlikely to happen unless something goes wrong.
		flora_error_line('undefined F-logic molecule %s in FLORA module %S',
			         args(PredicateSymbol,ModuleName))
	    ;
	        flora_error_line('calling an F-logic molecule in an unloaded FLORA module %S',
                                 args(ModuleName))
	    )

	; PredicateType == (hilog) ->
	    %% a HiLog predicate
	    ( flLoadedModule(ModuleName) ->
		flora_error_line('undefined HiLog predicate in FLORA module %S',
				 args(ModuleName))
	    ;
	      flora_error_line('calling a HiLog literal in an unloaded FLORA module %S',
                               args(ModuleName))
	    )

	; PredicateType == (firstorder) ->
	    %% a first order Flora predicate
	    psc_arity(PscRecord,N),
	    ( flLoadedModule(ModuleName) ->
		flora_error_line('undefined first order predicate %s/%d in FLORA module %S',
			         args(PredicateSymbol,N,ModuleName))
	    ;
	      flora_error_line('calling first order predicate %s/%d in unloaded FLORA module %S',
                               args(PredicateSymbol,N,ModuleName))
	    )
	),
	abort.

%% Attempt to call a HiLog term as a predicate
flora_undefined_predicate_hook([PscRecord,fail]) :-
	psc_name(PscRecord,PredName),
	PredName = WRAP_HILOG,
	!,
	flora_error_heading,
	flora_stderr_string('Attempt to call a HiLog term as a predicate'),
	flora_stderr_nl,
	abort.
