/* File:      flrundefhook.P
**
** Author(s): Guizhen Yang 
**
** Contact:   xsb-contact@cs.sunysb.edu
**
** Copyright (C) The Research Foundation of SUNY, 1999-2001
**
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
** 
** 
*/


:- compiler_options([xpp_on]).

#include "flora_terms.flh"


/****************************************************************************
  flora_undefined_predicate_hook/1
****************************************************************************/
%% Case for a call to a molecule
flora_undefined_predicate_hook([PscRecord,fail]) :-
	psc_name(PscRecord,PredName),
	flora_flogic_predicate(PredName,WS,_WrapPrefix,_Base),
	!,
	(flModule(WS)
	-> %% This case is not possible (I think)
	    flora_error_line('undefined F-logic molecule %s in module %s',
			     args(PredName,WS))
	; flora_error_line('calling a FLORA molecule in module %s, which is not loaded', args(WS))
	),
	abort.

%% Case for a call to HiLog
flora_undefined_predicate_hook([PscRecord,fail]) :-
	psc_name(PscRecord,PredName),
	flora_hilog_predicate(PredName,Workspace),
	!,
	(flModule(Workspace)
	-> flora_error_line('undefined HiLog predicate in module %s',
			    args(Workspace))
	; flora_error_line('calling a HiLog predicate in module %s, which is not loaded', args(Workspace))
	),
	abort.

%% Call to a first order predicate
flora_undefined_predicate_hook([PscRecord,fail]) :-
	psc_name(PscRecord,PredName),
	flora_firstorder_predicate(PredName,Predicate,Workspace),
	!,
	psc_arity(PscRecord,N),
	(flModule(Workspace)
	-> flora_error_line('undefined first order predicate %s/%d in module %s',
			    args(Predicate,N,Workspace))
	; flora_error_line('calling first order predicate %s/%d in module %s, which not loaded', args(Predicate,N,Workspace))
	),
	abort.
