/* File:        flrload.P
**
** Author(s): Guizhen Yang
**
** Contact:   xsb-contact@cs.sunysb.edu
**
** Copyright (C) The Research Foundation of SUNY, 1999-2001
**
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
** 
** $Id: flrload.P,v 1.8 2001-06-17 17:49:49 kifer Exp $
** 
*/


:- compiler_options([xpp_on]).

#include "flora_terms.flh"


:- import
	flora_stderr_nl/0,
	flora_stderr_string/1,
	flora_error_line/1,
	flora_error_heading/0
   from flrprint.

:- import
	flora_load_module_internal/1,
	flora_load_module_internal/2
   from flrutils.

:- import flora_stderr_write/1 from flrdisplay.



/********************************************************************/
fllibload([]) :- !.

fllibload([T|L]) :-
	!,
	flora_load_file(T),
	fllibload(L).


/*********************************************************************
  flora_load_file(+FileName)
  flora_load_file(FL_RIGHTTO(+FileName,+Workspace))

  Note: Runtime checking of file and workspace names is needed, since
        the load list can be constructed at runtime.
*********************************************************************/
flora_load_file(T) :-
	atom(T),
	!,
	flora_load_module_internal(T).

flora_load_file(T) :-
	var(T),
	!,
	flora_stderr_nl,
	flora_error_line('file name unbound at time of loading'),
	fail.

flora_load_file(FL_RIGHTTO(FileName,Workspace)) :-
	!,
	( atom(FileName) ->
	    ( atom(Workspace) ->
		flora_load_module_internal(FileName,Workspace)
	    ;
	      flora_stderr_nl,
	      ( var(Workspace) ->
		  flora_error_line('uninstantiated module name at time of loading')
	      ;
	        flora_error_heading,
		flora_stderr_string('invalid module name: '),
		flora_stderr_write(Workspace),
		flora_stderr_nl
	      ),
	      !,
	      fail
	    )
	;
	  flora_stderr_nl,
	  flora_error_heading,
	  flora_stderr_string('file name '),
	  flora_stderr_write(FileName),
	  flora_stderr_string(' invalid for loading'),
	  flora_stderr_nl,
	  !,
	  fail
        ).

flora_load_file(X) :-
	flora_stderr_nl,
	flora_error_heading,
	flora_stderr_string('file name '),
	flora_stderr_write(X),
	flora_stderr_string(' invalid for loading'),
	flora_stderr_nl,
	!,
	fail.
