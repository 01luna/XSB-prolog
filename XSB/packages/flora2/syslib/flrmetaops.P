/* File:      flrmetaops.P
**
** Author(s): kifer
**
** Contact:   xsb-contact@cs.sunysb.edu
**
** Copyright (C) The Research Foundation of SUNY, 2001
**
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
** 
** $Id: flrmetaops.P,v 1.2 2001-09-13 05:33:41 kifer Exp $
** 
*/



:- compiler_options([xpp_on]).

:- import flora_module_predicate/4 from flrwrapper.

#include "flora_terms.flh"



%% This takes care of F-logic molecules with dynamic module specification
FL_UNIVEQFORM(fllibmodlit(Fun1,Args1,ModuleName1),
	      fllibmodlit(Fun2,Args2,ModuleName2)) :-
	!,
	Fun1 = Fun2,
	Args1 = Args2,
	ModuleName1 = ModuleName2.
FL_UNIVEQFORM(fllibmodlit(Fun,Args,ModuleName), Y) :-
	!,
	flora_module_predicate(Fun,Args,ModuleName,Literal),
	Literal = Y.
FL_UNIVEQFORM(X, fllibmodlit(Fun,Args,ModuleName)) :-
	!,
	flora_module_predicate(Fun,Args,ModuleName,Literal),
	X = Literal.

%% This takes care of first-order Flora predicates with dynamic 
%% module specification 
FL_UNIVEQFORM(fllibmodlit(FL_FIRSTORDER,Fun1,Args1,ModuleName1),
	      fllibmodlit(FL_FIRSTORDER,Fun2,Args2,ModuleName2)) :-
	!,
	Fun1 = Fun2,
	Args1 = Args2,
	ModuleName1 = ModuleName2.
FL_UNIVEQFORM(fllibmodlit(FL_FIRSTORDER,Fun,Args,ModuleName), Y) :-
	!,
	flora_module_predicate(FL_FIRSTORDER,Fun,Args,ModuleName,Literal),
	Literal = Y.
FL_UNIVEQFORM(X, fllibmodlit(FL_FIRSTORDER,Fun,Args,ModuleName)) :-
	!,
	flora_module_predicate(FL_FIRSTORDER,Fun,Args,ModuleName,Literal),
	X = Literal.


FL_UNIVEQFORM(X,Y) :- X=Y, !.
