/* File:      flrlibman.P -- Flora includes and libraries definitions
**
** Author(s): Guizhen Yang
**
** Contact:   xsb-contact@cs.sunysb.edu
**
** Copyright (C) The Research Foundation of SUNY, 1999-2001
**
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
**
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
**
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
**
*/


:- compiler_options([xpp_on]).


#include "flora_terms.flh"


/**********************************************************************
  flora_register_syslib(+LibName)
**********************************************************************/
flora_register_syslib(LibName) :-
	var(LibName),
	!,
	flora_error_line('Uninstantiated FLORA system library name! Registration aborted!'),
	abort.

flora_register_syslib(LibName) :-
	assert(flora_syslib_loaded(LibName)).


/**********************************************************************
  flora_load_library(+List)
  flora_load_library(+Atom)

  Note: This predicate always succeeds.
**********************************************************************/
flora_load_library(LibName) :-
	var(LibName),
	!,
	flora_error_line('Uninstantiated FLORA system library name! Loading aborted!'),
	abort.

flora_load_library([]) :- !.

flora_load_library([H|T]) :-
	!,
	flora_load_library(H),
	flora_load_library(T).

flora_load_library(LibID) :-
	flora_library(LibID,LibFile),
	!,
	( flora_syslib_loaded(LibID) ->
	    true
	;
	  package_configuration(dir(flora),FloraDir),
	  slash(S),
	  fmt_write_string(FullLibPath,"%s%s%s",args(FloraDir,S,LibFile)),
          consult(FullLibPath)
        ).

flora_load_library(_LibID).


/********************************************************************
  flora_include(+Atom,+FilePath)
  indicates which file to be included in the output file.
********************************************************************/
flora_include(FLLIBMIN,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflraggmin_inc.flh',arg(S)).
flora_include(FLLIBMAX,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflraggmax_inc.flh',arg(S)).
flora_include(FLLIBSUM,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflraggsum_inc.flh',arg(S)).
flora_include(FLLIBAVG,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflraggavg_inc.flh',arg(S)).
flora_include(FLLIBCOUNT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflraggcount_inc.flh',arg(S)).
flora_include(FLLIBCOLLECTSET,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrcolset_inc.flh',arg(S)).
flora_include(FLLIBCOLLECTBAG,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrcolbag_inc.flh',arg(S)).

flora_include(FLLIBLOAD,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrload_inc.flh',arg(S)).

flora_include(FLLIBANSWER,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflranswer_inc.flh',arg(S)).
flora_include(FLLIBSHELLANS,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflranswer_inc.flh',arg(S)).
flora_include(FLLIBPROGRAMANS,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflranswer_inc.flh',arg(S)).

flora_include(FLLIBINSERT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrdbop_inc.flh',arg(S)).
flora_include(FLLIBINSERTALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrdbop_inc.flh',arg(S)).
flora_include(FLLIBDELETE,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrdbop_inc.flh',arg(S)).
flora_include(FLLIBDELETEALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrdbop_inc.flh',arg(S)).
flora_include(FLLIBERASE,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrdbop_inc.flh',arg(S)).
flora_include(FLLIBERASEALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrdbop_inc.flh',arg(S)).

flora_include(FLLIBBTINSERT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrbtdbop_inc.flh',arg(S)).
flora_include(FLLIBBTINSERTALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrbtdbop_inc.flh',arg(S)).
flora_include(FLLIBBTDELETE,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrbtdbop_inc.flh',arg(S)).
flora_include(FLLIBBTDELETEALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrbtdbop_inc.flh',arg(S)).
flora_include(FLLIBBTERASE,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrbtdbop_inc.flh',arg(S)).
flora_include(FLLIBBTERASEALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrbtdbop_inc.flh',arg(S)).

flora_include(FLLIBSHDIRECT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrshdirect_inc.flh',arg(S)).

flora_include(FLLIBMODLIT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrdynmod_inc.flh',arg(S)).
flora_include(FLLIBMODOBJ,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrdynmod_inc.flh',arg(S)).

flora_include(FLLIBEQUALITY,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrequality_inc.flh',arg(S)).

flora_include(FLLIBABOLISH,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslibinc%sflrabolish_inc.flh',arg(S)).

flora_include(FLHEADER,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'headerinc%sflrheader_inc.flh',arg(S)).
flora_include(FLDBDYN,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'headerinc%sflrdbdyn_inc.flh',arg(S)).
flora_include(FLDEFINITION,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'headerinc%sflrdefinition_inc.flh',arg(S)).
flora_include(FLPATCH,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'headerinc%sflrpatch_inc.flh',arg(S)).
flora_include(FLTRAILER,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'headerinc%sflrtrailer_inc.flh',arg(S)).
flora_include(FLEQLTRAILER,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'headerinc%sflreqltrailer_inc.flh',arg(S)).
flora_include(FLSCALAREQL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'headerinc%sflrscalareql_inc.flh',arg(S)).


/********************************************************************
  flora_library(+Atom,-FilePath)
  indicates which library to be loaded.
********************************************************************/
flora_library(FLLIBMIN,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflraggmin.P',arg(S)).
flora_library(FLLIBMAX,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflraggmax.P',arg(S)).
flora_library(FLLIBSUM,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflraggsum.P',arg(S)).
flora_library(FLLIBAVG,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflraggavg.P',arg(S)).
flora_library(FLLIBCOUNT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflraggcount.P',arg(S)).
flora_library(FLLIBCOLLECTSET,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflraggcolset.P',arg(S)).
flora_library(FLLIBCOLLECTBAG,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflraggcolbag.P',arg(S)).

flora_library(FLLIBLOAD,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrload.P',arg(S)).

flora_library(FLLIBANSWER,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflranswer.P',arg(S)).
flora_library(FLLIBSHELLANS,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflranswer.P',arg(S)).
flora_library(FLLIBPROGRAMANS,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflranswer.P',arg(S)).

flora_library(FLLIBDISPLAY,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdisplay.P',arg(S)).

flora_library(FLLIBDBOP,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdbop.P',arg(S)).
flora_library(FLLIBINSERT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdbop.P',arg(S)).
flora_library(FLLIBINSERTALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdbop.P',arg(S)).
flora_library(FLLIBDELETE,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdbop.P',arg(S)).
flora_library(FLLIBDELETEALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdbop.P',arg(S)).
flora_library(FLLIBERASE,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdbop.P',arg(S)).
flora_library(FLLIBERASEALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdbop.P',arg(S)).

flora_library(FLLIBBTDBOP,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrbtdbop.P',arg(S)).
flora_library(FLLIBBTINSERT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrbtdbop.P',arg(S)).
flora_library(FLLIBBTINSERTALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrbtdbop.P',arg(S)).
flora_library(FLLIBBTDELETE,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrbtdbop.P',arg(S)).
flora_library(FLLIBBTDELETEALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrbtdbop.P',arg(S)).
flora_library(FLLIBBTERASE,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrbtdbop.P',arg(S)).
flora_library(FLLIBBTERASEALL,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrbtdbop.P',arg(S)).

flora_library(FLLIBSHDIRECT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrshdirect.P',arg(S)).

flora_library(FLLIBEQUALITY,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrequality.P',arg(S)).

flora_library(FLLIBABOLISH,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrabolish.P',arg(S)).

flora_library(FLLIBDYNMOD,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdynmod.P',arg(S)).
flora_library(FLLIBMODLIT,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdynmod.P',arg(S)).
flora_library(FLLIBMODOBJ,IncFile) :- !,
	slash(S),
	fmt_write_string(IncFile,'syslib%sflrdynmod.P',arg(S)).
