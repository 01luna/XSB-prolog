/* File:      flrlibman.P -- Flora includes and libraries definitions
**
** Author(s): Guizhen Yang
**
** Contact:   xsb-contact@cs.sunysb.edu
**
** Copyright (C) The Research Foundation of SUNY, 1999-2000
**
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
**
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
**
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
**
*/


:- compiler_options([xpp_on]).


#include "flora_terms.flh"


/**********************************************************************
  flora_register_syslib(+LibName)
**********************************************************************/
flora_register_syslib(LibName) :-
	var(LibName),
	!,
	flora_error_line('Uninstantiated FLORA system library name! Registration aborted!'),
	abort.

flora_register_syslib(LibName) :-
	assert(flora_syslib_loaded(LibName)).


/**********************************************************************
  flora_load_library(+List)
  flora_load_library(+Atom)

  Note: This predicate always succeeds.
**********************************************************************/
flora_load_library(LibName) :-
	var(LibName),
	!,
	flora_error_line('Uninstantiated FLORA system library name! Loading aborted!'),
	abort.

flora_load_library([]) :- !.

flora_load_library([H|T]) :-
	!,
	flora_load_library(H),
	flora_load_library(T).

flora_load_library(LibID) :-
	flora_library(LibID,LibFile),
	!,
	( flora_syslib_loaded(LibID) ->
	    true
	;
	  package_configuration(dir(flora),FloraDir),
	  slash(S),
	  fmt_write_string(FullLibPath,"%s%s%s",args(FloraDir,S,LibFile)),
          consult(FullLibPath)
        ).

flora_load_library(_LibID).


/********************************************************************
  flora_include(+Atom,+FilePath)
  indicates which file to be included in the output file.
********************************************************************/
flora_include(FLLIBMIN,'syslibinc/flraggmin_inc.flh') :- !.
flora_include(FLLIBMAX,'syslibinc/flraggmax_inc.flh') :- !.
flora_include(FLLIBSUM,'syslibinc/flraggsum_inc.flh') :- !.
flora_include(FLLIBAVG,'syslibinc/flraggavg_inc.flh') :- !.
flora_include(FLLIBCOUNT,'syslibinc/flraggcount_inc.flh') :- !.
flora_include(FLLIBCOLLECTSET,'syslibinc/flrcolset_inc.flh') :- !.
flora_include(FLLIBCOLLECTBAG,'syslibinc/flrcolbag_inc.flh') :- !.

flora_include(FLLIBLOAD,'syslibinc/flrload_inc.flh') :- !.

flora_include(FLLIBANSWER,'syslibinc/flranswer_inc.flh') :- !.
flora_include(FLLIBSHELLANS,'syslibinc/flranswer_inc.flh') :- !.
flora_include(FLLIBPROGRAMANS,'syslibinc/flranswer_inc.flh') :- !.

flora_include(FLLIBINSERT,'syslibinc/flrdbop_inc.flh') :- !.
flora_include(FLLIBDELETE,'syslibinc/flrdbop_inc.flh') :- !.
flora_include(FLLIBDELETEALL,'syslibinc/flrdbop_inc.flh') :- !.
flora_include(FLLIBERASE,'syslibinc/flrdbop_inc.flh') :- !.
flora_include(FLLIBERASEALL,'syslibinc/flrdbop_inc.flh') :- !.

flora_include(FLLIBBTINSERT,'syslibinc/flrbtdbop_inc.flh') :- !.
flora_include(FLLIBBTDELETE,'syslibinc/flrbtdbop_inc.flh') :- !.
flora_include(FLLIBBTDELETEALL,'syslibinc/flrbtdbop_inc.flh') :- !.
flora_include(FLLIBBTERASE,'syslibinc/flrbtdbop_inc.flh') :- !.
flora_include(FLLIBBTERASEALL,'syslibinc/flrbtdbop_inc.flh') :- !.

flora_include(FLLIBSHDIRECT,'syslibinc/flrshdirect_inc.flh') :- !.

flora_include(FLHEADER,'closureinc/flrheader_inc.flh') :- !.
flora_include(FLDBDYN,'closureinc/flrdbdyn_inc.flh') :- !.
flora_include(FLSKOLEM,'closureinc/flreqltrailer_inc.flh') :- !.
flora_include(FLOBJEQLDEF,'closureinc/flreqltrailer_inc.flh') :- !.
flora_include(FLTRAILER,'closureinc/flrtrailer_inc.flh') :- !.

flora_include(FLDEFINITION,'closureinc/flrdefinition_inc.flh') :- !.


/********************************************************************
  flora_library(+Atom,+FilePath)
  indicates which library to be loaded.
********************************************************************/
flora_library(FLLIBMIN,'syslib/flraggmin.P') :- !.
flora_library(FLLIBMAX,'syslib/flraggmax.P') :- !.
flora_library(FLLIBSUM,'syslib/flraggsum.P') :- !.
flora_library(FLLIBAVG,'syslib/flraggavg.P') :- !.
flora_library(FLLIBCOUNT,'syslib/flraggcount.P') :- !.
flora_library(FLLIBCOLLECTSET,'syslib/flraggcolset.P') :- !.
flora_library(FLLIBCOLLECTBAG,'syslib/flraggcolbag.P') :- !.

flora_library(FLLIBLOAD,'syslib/flrload.P') :- !.

flora_library(FLLIBANSWER,'syslib/flranswer.P') :- !.
flora_library(FLLIBSHELLANS,'syslib/flranswer.P') :- !.
flora_library(FLLIBPROGRAMANS,'syslib/flranswer.P') :- !.

flora_library(FLLIBDISPLAY,'syslib/flrdisplay.P') :- !.

flora_library(FLLIBDBOP,'syslib/flrdbop.P') :- !.
flora_library(FLLIBINSERT,'syslib/flrdbop.P') :- !.
flora_library(FLLIBDELETE,'syslib/flrdbop.P') :- !.
flora_library(FLLIBDELETEALL,'syslib/flrdbop.P') :- !.
flora_library(FLLIBERASE,'syslib/flrdbop.P') :- !.
flora_library(FLLIBERASEALL,'syslib/flrdbop.P') :- !.

flora_library(FLLIBDBOP,'syslib/flrbtdbop.P') :- !.
flora_library(FLLIBBTINSERT,'syslib/flrbtdbop.P') :- !.
flora_library(FLLIBBTDELETE,'syslib/flrbtdbop.P') :- !.
flora_library(FLLIBBTDELETEALL,'syslib/flrbtdbop.P') :- !.
flora_library(FLLIBBTERASE,'syslib/flrbtdbop.P') :- !.
flora_library(FLLIBBTERASEALL,'syslib/flrbtdbop.P') :- !.

flora_library(FLLIBSHDIRECT,'syslib/flrshdirect.P') :- !.
