/* File:      flora_errors.flh -- Flora errors
**
** Author(s): Guizhen Yang
**
** Contact:   flora-users@lists.sourceforge.net
**
** Copyright (C) The Research Foundation of SUNY, 1999-2001
** 
** FLORA-2 is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** FLORA-2 is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with FLORA-2; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
**
*/


#mode standard Prolog


/**************************************
  errors reported by Flora Lexer
**************************************/
#define UNEXP_UNPRINT	'unexpected unprintable character'
#define UNEXP_DEL_ISO	'unexpected DEL or ISO character'
#define UNEXP_EOF	'unexpected end of file'
#define UNEXP_PRINT	'unexpected printable character'
#define HEX_EXPECTED    'hexadecimal symbol expected in string'
#define AFTER_RADIX	'invalid symbol after radix'
#define INVALID_RADIX	'invalid radix'
#define ERROR_EXPONENT	'syntax error in exponent'


/**************************************
  warnings reported by Flora Composer
**************************************/
#define OP_AMBIGUITY	 'ambiguous operator definitions'


/**************************************
  errors reported by Flora Composer
**************************************/
#define UNKNOWN_ERROR    'internal error -- please report this problem using the bug tracking system at http://sourceforge.net/projects/flora'
#define UNEXP_EOR	 'rule delimeter expected'
#define UNEXP_OPERAND    'unexpected operand'
#define UNEXP_OPERATOR   'unexpected operator'
#define UNEXP_LEFT       'unexpected left parenthesis/brace/bracket'
#define UNEXP_RIGHT      'unexpected right parenthesis/brace/bracket'
#define UNEXP_END        'unexpected end of rule'
#define UNEXP_ENDCLAUSE	 'unexpected end of clause before the #include macro'
#define WRONG_PRECEDENCE 'precedence definitions violated'
#define WRONG_ASSOCIATE  'associativity definition violated'
#define UNMATCHED_LEFT   'unmatched left parenthesis/brace/bracket'
#define UNMATCHED_RIGHT  'unmatched right parenthesis/brace/bracket'


/**************************************
  errors reported by Flora Operator
**************************************/
#define NO_REDEFOP	'redefinition of standard operators is not allowed'


/**************************************
  errors reported by Flora Arguments directive
**************************************/
#define NO_REDEFARG	'redefinition of standard argument types is not allowed'


/**************************************
  errors reported by Flora Parser
**************************************/
#define ERROR_OPDEF	'invalid associativity definition'
#define ERROR_OPERATOR	'invalid operator'
#define ERROR_FAPAIR	'invalid functor/arity pair'

#mode save
#mode nostring "\!#'"
#define ERROR_ARGTYPE	'invalid argument type specification: FL_OID/FL_BODYFORMULA expected'
#mode restore

#define ERROR_ARGUMENTS	'invalid arguments directive'
#define ERROR_AGGREGT	'syntax error in aggregate body'
#define ERROR_BDLITERAL	'invalid literal/molecule in rule/query body'
#define ERROR_PRLGLIT	'invalid PROLOG literal'
#define ERROR_WSNAME	'invalid module name'
#define ERROR_SYSMOD	'updates of FLORA system modules are not allowed'
#define ERROR_PATHEXP	'invalid path expression'
#define ERROR_HDLITERAL 'invalid literal/molecule in rule head'
#define ERROR_EXPINHEAD 'invalid path expression in rule head'
#define ERROR_LOADLIST	'invalid list of loading commands'
#define ERROR_LOADITEM	'invalid loading command'
#define ERROR_LOADFILE	'invalid file name'
#define ERROR_INSERT	'invalid literal to insert'
#define ERROR_DELETE	'invalid literal to delete'
#define ERROR_EXPINSERT 'invalid path expression in insert'
#define ERROR_EXPDELETE 'invalid path expression in delete'
#define ERROR_INDXDIREC	'invalid trie indexing directive'
#define ERROR_NEWOID	'invalid use of anonymous oid directive'
#define ERROR_FUNCTOR	'invalid functor (atoms or variables expected)'
#define ERROR_ARITY	'invalid arity (non-negative integers or variables expected)'
#define ERROR_EQLSPEC	'invalid equality specification'
#define ERROR_UPDATEOP	'invalid use of update operator where an oid is expected'
#define ERROR_SETNOTE	'invalid use of set notation'
#define ERROR_GPP	'error while parsing the output from the gpp preprocessor'
#define EXP_POSINTEGER	'positive integer (including 0) expected'
#define EXP_VARIABLE	'variable expected'
#define EXP_ATOMICFUNCT	'atomic functor expected'
#define EXP_AGGREGVAR	'aggregate variable expected'
#define EXP_AGGRGRPVAR	'aggregate and grouping variables expected'
#define EXP_ARGS	'arguments expected'
#define NO_LISTTAIL	'list tail specification is not allowed in this context'
#define NO_DISJUNCTION	'disjunction is not allowed in rule heads and facts'
#define NO_NEGATION	'negation is not allowed in rule head'
#define NO_WORKSPACE	'invalid use of module specification'
#define NO_WSINRULEHEAD	'module specification is not allowed in rule head'
#define NO_WSNESTING	'invalid nesting of module specifications'
#define NO_REDEFINITION 'redefinition of built-ins in rule head is not allowed'
#define NO_MULTIATT	'multivalued reference is not allowed in rule head'
#define NO_AGGINHEAD	'aggregate is not allowed in rule head'
#define NO_INSERT	'insertion into a built-in is not allowed'
#define NO_DELETE	'deletion from a built-in is not allowed'
#define NO_INSERTMULATT 'multivalued reference is not allowed in insert'
#define NO_INSERTDISJUN	'disjunction is not allowed in insert'
#define NO_DELETEDISJUN	'disjunction is not allowed in delete'
#define NO_INSERTNEG	'negation is not allowed in insert'
#define NO_DELETENEG	'negation is not allowed in delete'
#define NO_PROLOGUPDATE 'updating Prolog predicates is not allowed'
#define UNKNOWN_AGGREGT 'unknown aggregate operator'
#define UNKNOWN_DIRECT	'unknown compiler directive'
#define UNREG_SYSMOD	'unregistered system module'
#define ERROR_IFHEAD	'invalid if-statement in rule head'
#define ERROR_THENHEAD	'invalid then-statement in rule head'
#define ERROR_ELSEHEAD	'invalid else-statement in rule head'
#define ERROR_THENBODY	'invalid then-statement'
#define ERROR_ELSEBODY	'invalid else-statement'
#define MISSING_THEN	'missing then-statement in if-then-else'
#define UNEXPECTED_THEN	'unexpected then-statement'
#define UNEXPECTED_ELSE	'unexpected else-statement'
#define UNEXPECTED_CONTROL 'unexpected control statement'
#define NO_UPDATEIF	'updating if-statement is not allowed'
#define NO_UPDATETHEN	'updating then-statement is not allowed'
#define NO_UPDATEELSE	'updating else-statement is not allowed'


/**************************************
  warnings reported by Flora Compiler
**************************************/
#define SINGLETON_VAR	'singleton variable'
#define UNBOUND_VAR	'unbound variable in rule head'

/****************************************
  support for numbered anon oids
*****************************************/
#define SINGLETON_OID	'singleton numbered anonymous oid in clause'


/**************************************
  errors reported by Flora Compiler
**************************************/
#define REPEATED_GVAR	'repeated grouping variable is not allowed in aggregates'
#define GVAR_NOTIN	'grouping variable not in aggregate body'
#define AVAR_NOTIN	'aggregate variable not in aggregate body'
#define ERROR_GVAR	'invalid grouping variable'
#define ERROR_AVAR	'invalid aggregate variable'
#define AVAR_ASGVAR	'aggregation variable is not allowed as grouping variable'
#define VARWSINHEAD	'unbound module name in rule head'
