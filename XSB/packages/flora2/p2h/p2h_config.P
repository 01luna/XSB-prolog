/* File:      p2h_config.P -- loader for the prolog to hilog module
** Author(s): kifer
** Contact:   xsb-contact@cs.sunysb.edu
** 
** Copyright (C) The Research Foundation of SUNY, 2000
** 
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** $Id: p2h_config.P,v 1.2 2001-07-05 23:43:03 kifer Exp $
** 
*/

%% bootstrap_flora/0 adds this directory to the library search path.
%% Loading p2h_config.P ensures that the module prolog2hilog is compiled 
%% and loaded.

:- import slash/1, str_cat/3, machine_file_exists/1 from machine.
:- import fmt_write_string/3, file_time/2 from file_io.
:- import search_module/6 from consult.
:- import xsb_configuration/2, windows_os/0 from xsb_configuration.
:- import rename/2 from shell.

:-  package_configuration(dir(flora), FloraDir),
    slash(Slash),
    Basename = prolog2hilog,
    fmt_write_string(Module,
		     '%s%sp2h%s%s', f(FloraDir, Slash, Slash,Basename)),
    (  %% avoid recompilation: check if prolog2hilog.O exists and 
       %% is newer than prolog2hilog.c.
       search_module(Basename,Dir,_Mod,_Ext,_Base,ModuleO),
       str_cat(Module, '.c', ModuleSourceFile),
       file_time(ModuleO, time(CT1,CT2)),
       file_time(ModuleSourceFile, time(ST1,ST2)),
       time(ST1,ST2) @< time(CT1,CT2)
    %% module compiled and is current, so just load
    -> [Basename]

    %% If Module isn't compiled or is old --- recompile
    ;   xsb_configuration(compiler, CC),
	xsb_configuration(config_libdir, ConfigLibdir),
	str_cat(Module, '.O', Objfile),
	consult(Module, [cc(CC), cc_opts(' ')]),
	fmt_write_string(LibObjFile,
			 '%s%s%s.O', a(ConfigLibdir,Slash,Basename)),
	rename(Objfile, LibObjFile),
	(windows_os, !
	;
	    %% Note: the .so ending is Unix-ism. I dunno what this
	    %% corresponds to in windows. - mk
	    str_cat(Module, '.so', SharedLib),
	    fmt_write_string(LibMod,
			     '%s%s%s.so',
			     a(ConfigLibdir,Slash,Basename)),
	    rename(SharedLib,LibMod)
	)
     ).
