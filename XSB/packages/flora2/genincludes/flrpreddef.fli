/***************************************************************************
  file: genincludes/flrpreddef.fli

  Author(s): Chang Zhao

  Contact:   flora-users@lists.sourceforge.net

  Copyright (C) The Research Foundation of SUNY, 2002

  This is a template file to generate the FLORA include file for
  checking undefinedness.
***************************************************************************/

#include "flora_terms.flh"
#include "flora_wrap.flh"

:- WRAP_FLOGICSTATIC
	WRAP_ISA/2,FLDEBUGPREFIX(WRAP_ISA)/2,check_isa/2,defined_isa/2,
	WRAP_SUB/2,FLDEBUGPREFIX(WRAP_SUB)/2,check_sub/2,defined_sub/2,
	WRAP_METH/2,FLDEBUGPREFIX(WRAP_METH)/2,check_meth/2,defined_meth/2,
	WRAP_IMETH/2,FLDEBUGPREFIX(WRAP_IMETH)/2,check_imeth/2,defined_imeth/2,
	WRAP_FD/3,FLDEBUGPREFIX(WRAP_FD)/3,check_fd/3,defined_fd/3,
	WRAP_IFD/3,FLDEBUGPREFIX(WRAP_IFD)/3,check_ifd/3,defined_ifd/3,
	WRAP_FDSIG/3,FLDEBUGPREFIX(WRAP_FDSIG)/3,check_fdsig/3,defined_fdsig/3,
	WRAP_IFDSIG/3,FLDEBUGPREFIX(WRAP_IFDSIG)/3,check_ifdsig/3,defined_ifdsig/3,
	WRAP_FDDEF/2,FLDEBUGPREFIX(WRAP_FDDEF)/2,
	WRAP_IFDDEF/2,FLDEBUGPREFIX(WRAP_IFDDEF)/2,
	WRAP_MVD/3,FLDEBUGPREFIX(WRAP_MVD)/3,check_mvd/3,defined_mvd/3,
	WRAP_IMVD/3,FLDEBUGPREFIX(WRAP_IMVD)/3,check_imvd/3,defined_imvd/3,
	WRAP_MVDSIG/3,FLDEBUGPREFIX(WRAP_MVDSIG)/3,check_mvdsig/3,defined_mvdsig/3,
	WRAP_IMVDSIG/3,FLDEBUGPREFIX(WRAP_IMVDSIG)/3,check_imvdsig/3,defined_imvdsig/3,
	WRAP_MVDDEF/2,FLDEBUGPREFIX(WRAP_MVDDEF)/2,check_mvddef/2,defined_mvddef/2,
	WRAP_IMVDDEF/2,FLDEBUGPREFIX(WRAP_IMVDDEF)/2,check_imvddef/2,defined_imvddef/2,
	WRAP_TRAN/2,FLDEBUGPREFIX(WRAP_TRAN)/2,check_tran/2,defined_tran/2,
	WRAP_MVDINC/3,FLDEBUGPREFIX(WRAP_MVDINC)/3,
	WRAP_IMVDINC/3,FLDEBUGPREFIX(WRAP_IMVDINC)/3,
	WRAP_MVDTOLIST/3,FLDEBUGPREFIX(WRAP_MVDTOLIST)/3,
	WRAP_IMVDTOLIST/3,FLDEBUGPREFIX(WRAP_IMVDTOLIST)/3.

:- WRAP_FLOGICSTATIC debugging/0.

:- WRAP_MODULE(rule( debugging/0,flora_debug_module_registry)).

FLDEBUGPREFIX(WRAP_ISA)(X,Y) :- 
	debugging,
	check_isa(X,Y),
	check_sub(X,Y),
	flora_error_undefined(WRAP_ISA(X,Y)).

FLDEBUGPREFIX(WRAP_ISA)(X,Y) :- 
	WRAP_ISA(X,Y).
	    
FLDEBUGPREFIX(WRAP_SUB)(X,Y) :- 
	debugging,
	check_sub(X,Y),
	flora_error_undefined(WRAP_SUB(X,Y)).

FLDEBUGPREFIX(WRAP_SUB)(X,Y) :- 
	WRAP_SUB(X,Y).

FLDEBUGPREFIX(WRAP_METH)(X,Y) :-
	debugging,
	check_meth(X,Y),
	check_imeth(X,Y),
	flora_error_undefined(WRAP_METH(X,Y)).

FLDEBUGPREFIX(WRAP_METH)(X,Y) :-
	WRAP_METH(X,Y).

FLDEBUGPREFIX(WRAP_IMETH)(X,Y) :-
	debugging,
	check_imeth(X,Y),
	flora_error_undefined(WRAP_IMETH(X,Y)).

FLDEBUGPREFIX(WRAP_IMETH)(X,Y) :-
	WRAP_IMETH(X,Y).

FLDEBUGPREFIX(WRAP_FD)(X,Y,Z) :-
	debugging,
	check_fd(X,Y,Z),
	check_ifd(X,Y,Z),
	flora_error_undefined(WRAP_FD(X,Y,Z)).

FLDEBUGPREFIX(WRAP_FD)(X,Y,Z) :-
	WRAP_FD(X,Y,Z).
	    
FLDEBUGPREFIX(WRAP_IFD)(X,Y,Z) :-
	debugging,
	check_ifd(X,Y,Z),
	flora_error_undefined(WRAP_IFD(X,Y,Z)).

FLDEBUGPREFIX(WRAP_IFD)(X,Y,Z) :-
	WRAP_IFD(X,Y,Z).

FLDEBUGPREFIX(WRAP_FDDEF)(X,Y) :-
	debugging,
	check_fd(X,Y,Z),
	check_ifd(X,Y,Z),
	flora_error_undefined(WRAP_FDDEF(X,Y)).

FLDEBUGPREFIX(WRAP_FDDEF)(X,Y) :-
	WRAP_FDDEF(X,Y).
	    
FLDEBUGPREFIX(WRAP_IFDDEF)(X,Y) :-
	debugging,
	check_ifd(X,Y,Z),
	flora_error_undefined(WRAP_IFDDEF(X,Y)).

FLDEBUGPREFIX(WRAP_IFDDEF)(X,Y) :-
	WRAP_IFDDEF(X,Y).
	    
FLDEBUGPREFIX(WRAP_FDSIG)(X,Y,Z) :-
	debugging,
	check_fdsig(X,Y,Z),
	check_ifdsig(X,Y,Z),
	flora_error_undefined(WRAP_FDSIG(X,Y,Z)).

FLDEBUGPREFIX(WRAP_FDSIG)(X,Y,Z) :-
	WRAP_FDSIG(X,Y,Z).
	    
FLDEBUGPREFIX(WRAP_IFDSIG)(X,Y,Z) :-
	debugging,
	check_ifdsig(X,Y,Z),
	flora_error_undefined(WRAP_IFDSIG(X,Y,Z)).

FLDEBUGPREFIX(WRAP_IFDSIG)(X,Y,Z) :-
	WRAP_IFDSIG(X,Y,Z).
	    
FLDEBUGPREFIX(WRAP_MVD)(X,Y,Z) :-
	debugging,
	check_mvd(X,Y,Z),
	check_imvd(X,Y,Z),
	check_mvddef(X,Y),
	check_imvddef(X,Y),
	flora_error_undefined(WRAP_MVD(X,Y,Z)).

FLDEBUGPREFIX(WRAP_MVD)(X,Y,Z) :-
	WRAP_MVD(X,Y,Z).
	    
FLDEBUGPREFIX(WRAP_IMVD)(X,Y,Z) :-
	debugging,
	check_imvd(X,Y,Z),
	check_imvddef(X,Y),
	flora_error_undefined(WRAP_IMVD(X,Y,Z)).

FLDEBUGPREFIX(WRAP_IMVD)(X,Y,Z) :-
	WRAP_IMVD(X,Y,Z).
	    

FLDEBUGPREFIX(WRAP_MVDDEF)(X,Y) :-
	debugging,
	check_mvddef(X,Y),
	check_imvddef(X,Y),
	check_mvd(X,Y,Z),
	check_imvd(X,Y,Z),
	flora_error_undefined(WRAP_MVDDEF(X,Y)).

FLDEBUGPREFIX(WRAP_MVDDEF)(X,Y) :-
	WRAP_MVDDEF(X,Y).
	    
FLDEBUGPREFIX(WRAP_IMVDDEF)(X,Y) :-
	debugging,
	check_imvddef(X,Y),
	check_imvd(X,Y,Z),
	flora_error_undefined(WRAP_IMVDDEF(X,Y)).

FLDEBUGPREFIX(WRAP_IMVDDEF)(X,Y) :-
	WRAP_IMVDDEF(X,Y).
	    
FLDEBUGPREFIX(WRAP_MVDSIG)(X,Y,Z) :-
	debugging,
	check_mvdsig(X,Y,Z),
	check_imvdsig(X,Y,Z),
	flora_error_undefined(WRAP_MVDSIG(X,Y,Z)).

FLDEBUGPREFIX(WRAP_MVDSIG)(X,Y,Z) :-
	WRAP_MVDSIG(X,Y,Z).
	    
FLDEBUGPREFIX(WRAP_IMVDSIG)(X,Y,Z) :-
	debugging,
	check_imvdsig(X,Y,Z),
	flora_error_undefined(WRAP_IMVDSIG(X,Y,Z)).

FLDEBUGPREFIX(WRAP_IMVDSIG)(X,Y,Z) :-
	WRAP_IMVDSIG(X,Y,Z).

FLDEBUGPREFIX(WRAP_MVDINC)(X,Y,Z) :-
	debugging,
	check_mvd(X,Y,Z),
	check_imvd(X,Y,Z),
	flora_error_undefined(WRAP_MVD(X,Y,Z)).

FLDEBUGPREFIX(WRAP_MVDINC)(X,Y,Z) :-
	WRAP_MVDINC(X,Y,Z).
	    
FLDEBUGPREFIX(WRAP_IMVDINC)(X,Y,Z) :-
	debugging,
	check_imvd(X,Y,Z),
	flora_error_undefined(WRAP_IMVD(X,Y,Z)).

FLDEBUGPREFIX(WRAP_IMVDINC)(X,Y,Z) :-
	WRAP_IMVDINC(X,Y,Z).
	    
FLDEBUGPREFIX(WRAP_MVDTOLIST)(X,Y,Z) :-
	debugging,
	check_mvd(X,Y,Z),
	check_imvd(X,Y,Z),
	flora_error_undefined(WRAP_MVD(X,Y,Z)).

FLDEBUGPREFIX(WRAP_MVDTOLIST)(X,Y,Z) :-
	WRAP_MVDTOLIST(X,Y,Z).
	    
FLDEBUGPREFIX(WRAP_IMVDTOLIST)(X,Y,Z) :-
	debugging,
	check_imvd(X,Y,Z),
	flora_error_undefined(WRAP_IMVD(X,Y,Z)).

FLDEBUGPREFIX(WRAP_IMVDTOLIST)(X,Y,Z) :-
	WRAP_IMVDTOLIST(X,Y,Z).
	    
FLDEBUGPREFIX(WRAP_TRAN)(X,Y) :-
	debugging,
	check_tran(X,Y),
	flora_error_undefined(WRAP_TRAN(X,Y)).

FLDEBUGPREFIX(WRAP_TRAN)(X,Y) :-
	WRAP_TRAN(X,Y).
	    
check_isa(X,Y) :- defined_isa(X,Y), !, fail.
check_isa(X,Y).

check_sub(X,Y) :- defined_sub(X,Y), !, fail.
check_sub(X,Y).

check_meth(X,Y) :- defined_meth(X,Y), !, fail.
check_meth(X,Y).

check_imeth(X,Y) :- defined_imeth(X,Y), !, fail.
check_imeth(X,Y).

check_fd(X,Y,Z) :- defined_fd(X,Y,Z), !, fail.
check_fd(X,Y,Z).

check_ifd(X,Y,Z) :- defined_ifd(X,Y,Z), !, fail.
check_ifd(X,Y,Z).

check_fdsig(X,Y,Z) :- defined_fdsig(X,Y,Z), !, fail.
check_fdsig(X,Y,Z).

check_ifdsig(X,Y,Z) :- defined_ifdsig(X,Y,Z), !, fail.
check_ifdsig(X,Y,Z).

check_mvd(X,Y,Z) :- defined_mvd(X,Y,Z), !, fail.
check_mvd(X,Y,Z).

check_imvd(X,Y,Z) :- defined_imvd(X,Y,Z), !, fail.
check_imvd(X,Y,Z).

check_mvdsig(X,Y,Z) :- defined_mvdsig(X,Y,Z), !, fail.
check_mvdsig(X,Y,Z).

check_imvdsig(X,Y,Z) :- defined_imvdsig(X,Y,Z), !, fail.
check_imvdsig(X,Y,Z).

check_mvddef(X,Y) :- defined_mvddef(X,Y), !, fail.
check_mvddef(X,Y).

check_imvddef(X,Y) :- defined_imvddef(X,Y), !, fail.
check_imvddef(X,Y).

check_tran(X,Y) :- defined_tran(X,Y), !, fail.
check_tran(X,Y).

:- WRAP_STORAGE(rule(defined_isa/2,WRAP_ISA,fld)).
:- WRAP_STORAGE(rule(defined_sub/2,WRAP_SUB,fld)).
:- WRAP_STORAGE(rule(defined_meth/2,WRAP_METH,fld)).
:- WRAP_STORAGE(rule(defined_imeth/2,WRAP_IMETH,fld)).
:- WRAP_STORAGE(rule(defined_fd/3,WRAP_FD,fld)).
:- WRAP_STORAGE(rule(defined_ifd/3,WRAP_IFD,fld)).
:- WRAP_STORAGE(rule(defined_fdsig/3,WRAP_FDSIG,fld)).
:- WRAP_STORAGE(rule(defined_ifdsig/3,WRAP_IFDSIG,fld)).
:- WRAP_STORAGE(rule(defined_mvd/3,WRAP_MVD,fld)).
:- WRAP_STORAGE(rule(defined_imvd/3,WRAP_IMVD,fld)).
:- WRAP_STORAGE(rule(defined_mvdsig/3,WRAP_MVDSIG,fld)).
:- WRAP_STORAGE(rule(defined_imvdsig/3,WRAP_IMVDSIG,fld)).
:- WRAP_STORAGE(rule(defined_mvddef/2,WRAP_MVDDEF,fld)).
:- WRAP_STORAGE(rule(defined_imvddef/2,WRAP_IMVDDEF,fld)).
:- WRAP_STORAGE(rule(defined_tran/2,WRAP_TRAN,fld)).

:- WRAP_FLOGICSTATIC
	WRAP_HILOG/1, defined_flapply/1,
	WRAP_HILOG/2, defined_flapply/2,
	WRAP_HILOG/3, defined_flapply/3,
	WRAP_HILOG/4, defined_flapply/4,
	WRAP_HILOG/5, defined_flapply/5,
	WRAP_HILOG/6, defined_flapply/6,
	WRAP_HILOG/7, defined_flapply/7,
	WRAP_HILOG/8, defined_flapply/8,
	WRAP_HILOG/9, defined_flapply/9,
	WRAP_HILOG/10, defined_flapply/10,
	WRAP_HILOG/11, defined_flapply/11,
	WRAP_HILOG/12, defined_flapply/12,
	WRAP_HILOG/13, defined_flapply/13,
	WRAP_HILOG/14, defined_flapply/14,
	WRAP_HILOG/15, defined_flapply/15,
	WRAP_HILOG/16, defined_flapply/16,
	WRAP_HILOG/17, defined_flapply/17,
	WRAP_HILOG/18, defined_flapply/18,
	WRAP_HILOG/19, defined_flapply/19,
	WRAP_HILOG/20, defined_flapply/20,
	WRAP_HILOG/21, defined_flapply/21.

WRAP_HILOG(X01) :-
	debugging,
	defined_flapply(X01),
	!,
	fail.

WRAP_HILOG(X01) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01)).

WRAP_HILOG(X01,X02) :-
	debugging,
	defined_flapply(X01,X02),
	!,
	fail.

WRAP_HILOG(X01,X02) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02)).

WRAP_HILOG(X01,X02,X03) :-
	debugging,
	defined_flapply(X01,X02,X03),
	!,
	fail.

WRAP_HILOG(X01,X02,X03) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03)).

WRAP_HILOG(X01,X02,X03,X04) :-
	debugging,
	defined_flapply(X01,X02,X03,X04),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04)).

WRAP_HILOG(X01,X02,X03,X04,X05) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11,X12)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12,X13),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11,X12,X13)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12,X13,X14),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11,X12,X13,X14)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12,X13,X14,X15),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11,X12,X13,X14,X15)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12,X13,X14,X15,X16),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11,X12,X13,X14,X15,X16)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12,X13,X14,X15,X16,X17),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11,X12,X13,X14,X15,X16,X17)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17,X18) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12,X13,X14,X15,X16,X17,X18),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17,X18) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11,X12,X13,X14,X15,X16,X17,X18)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17,X18,X19) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12,X13,X14,X15,X16,X17,X18,X19),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17,X18,X19) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11,X12,X13,X14,X15,X16,X17,X18,X19)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17,X18,X19,X20) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12,X13,X14,X15,X16,X17,X18,X19,X20),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17,X18,X19,X20) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
				      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20)).

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21) :-
	debugging,
	defined_flapply(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21),
	!,
	fail.

WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
	X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21) :-
	debugging,
	flora_error_undefined(WRAP_HILOG(X01,X02,X03,X04,X05,X06,X07,X08,X09,X10,
			 	      X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21)).

:- WRAP_STORAGE(rule(defined_flapply/1,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/2,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/3,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/4,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/5,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/6,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/7,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/8,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/9,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/10,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/11,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/12,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/13,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/14,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/15,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/16,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/17,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/18,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/19,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/20,WRAP_HILOG,fld)).
:- WRAP_STORAGE(rule(defined_flapply/21,WRAP_HILOG,fld)).
