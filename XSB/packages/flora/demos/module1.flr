
:- import flcompile/1 from flrutils.

?- flcompile(module2).

:- import employee[salary@(number) => number] from module2.

john:employee.

john[salary@(1990) -> 20].
john[salary@(1991) -> 40].
john[salary@(1992) -> 60].
john[salary@(1993) -> 70].
john[salary@(1994) -> 70].
john[salary@(1995) -> 80].
john[salary@(1996) -> 70].
john[salary@(1997) -> 50].
john[salary@(1998) -> 80].


?- Z := max {X; john[salary@(Year)->X] }.

?- Z := max{X ; john[salary@(Year) ->X], Year < 1996}.

// It is strange that Florid will report an error saying invalid
// aggregate expression for the following query.

?- Z=count{Year; john.salary@(Year) < max{X; john[salary@(Y2)->X], Y2<Year} }.

?- Z=count{Year; john.salary@(Year) < mary.salary@(Year)}.

?- Z= avg{X [Who]; Who[salary@(Year)->X]}.

