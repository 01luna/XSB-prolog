/* This simple program traverses a binary tree and sums up
** the values in each node.
*/
n1[val->50;
   left->n2;
   right->n3 ].
n2[val->40;
   left->n4;
   right->n5 ].
n4[val->20;
   left->leaf;
   right->leaf ].
n5[val->30;
   left->leaf;
   right->leaf ].
n3[val->40;
   left->n6;
   right->n7 ].
n6[val->30;
   left->leaf;
   right->leaf ].
n7[val->30;
   left->leaf;
   right->leaf ].

X[dfs -> ValLeft + ValRight + ValSelf] :-
	X[val->ValSelf; left->L; right->R],
	L[dfs->ValLeft],
	R[dfs->ValRight].
leaf[dfs->0].

%% This one measures cpu time for method M.
X[cpu(M)->T1-T0] :-
	cputime(T0), X[M->V], cputime(T1),
	write('Value of '),
	write(X),
	write('.'),
	writeln(M),
	write('is: '),
	writeln(V).

?- n1[dfs->V].
?- n1[cpu(dfs)->Cpu].
