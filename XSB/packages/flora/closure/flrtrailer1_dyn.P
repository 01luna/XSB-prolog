/* closure/flrtrailer1_dyn.P: appended automatically by the FLORA compiler  */


/*****************************************************************************
  closure rules for X::Y
*****************************************************************************/
:- table '_$_$_flora_subclass_dyn'/2.

'_$_$_flora_subclass_dyn'(X,X) :- '_$_$_flora_sub_dyn'(X,_).
'_$_$_flora_subclass_dyn'(X,X) :- '_$_$_flora_sub_dyn'(_,X).
'_$_$_flora_subclass_dyn'(X,Y) :- '_$_$_flora_sub_dyn'(X,Y).

'_$_$_flora_subclass_dyn'(X,Y) :-
	'_$_$_flora_subclass_dyn'(X,Z), 
	'_$_$_flora_subclass_dyn'(Z,Y),
	(X \= Z -> true ; Z\=Y),
	( X = Y ->
	    write('*** Warning: cyclic subclass hierarchy: '),
	    write(X), write('::'), write(Z), write('::'), write(Y), nl
	  ;
	    true
	).


/*****************************************************************************
  closure rules for X:Y
*****************************************************************************/
:- table '_$_$_flora_isa_dyn'/2.

'_$_$_flora_isa_dyn'(O,C) :-
	'_$_$_flora_subclass_dyn'(C1,C),
	'_$_$_flora_isa_dyn'(O,C1).


/*****************************************************************************
  rules for monotonic behavior inheritance
*****************************************************************************/
:- table '_$_$_flora_fd_dyn'/3.
:- table '_$_$_flora_mvd_dyn'/3.
:- table '_$_$_flora_ifd_dyn'/3.
:- table '_$_$_flora_imvd_dyn'/3.

'_$_$_flora_fd_dyn'(O,MethodArgs,R) :-
	'_$_$_flora_ifd_dyn'(Class,MethodArgs,R),
	( '_$_$_flora_isa_dyn'(O,Class)
	  ;
	  '_$_$_flora_eql_dyn'(Class,C), '_$_$_flora_isa_dyn'(O,C)
	).

'_$_$_flora_mvd_dyn'(O,MethodArgs,R) :-
	'_$_$_flora_imvd_dyn'(Class,MethodArgs,R),
	( '_$_$_flora_isa_dyn'(O,Class)
	  ;
	  '_$_$_flora_eql_dyn'(Class,C), '_$_$_flora_isa_dyn'(O,C)
	).

'_$_$_flora_ifd_dyn'(Sub,MethodArgs,R) :-
	'_$_$_flora_ifd_dyn'(Class,MethodArgs,R),
	( '_$_$_flora_subclass_dyn'(Sub,Class)
	  ;
	  '_$_$_flora_eql_dyn'(Class,S), '_$_$_flora_subclass_dyn'(Sub,S)
	).

'_$_$_flora_imvd_dyn'(Sub,MethodArgs,R) :-
	'_$_$_flora_imvd_dyn'(Class,MethodArgs,R),
	( '_$_$_flora_subclass_dyn'(Sub,Class)
	  ;
	  '_$_$_flora_eql_dyn'(Class,S), '_$_$_flora_subclass_dyn'(Sub,S)
	).


/*****************************************************************************
  rules for congruence due to single-valued methods
*****************************************************************************/
:- table '_$_$_flora_eql_dyn'/2.
:- table '_$_$_flora_metheql_dyn'/2.

'_$_$_flora_eql_dyn'(X,Y) :-
	'_$_$_flora_fd_dyn'(O,M1,X),
	(M1=M2 ; '_$_$_flora_metheql_dyn'(M1,M2)),
	'_$_$_flora_fd_dyn'(O,M2,Y),
	not X=Y.

'_$_$_flora_eql_dyn'(X,Y) :-
	'_$_$_flora_eql_dyn'(O1,O2),
	'_$_$_flora_fd_dyn'(O1,M1,X),
	(M1=M2 ; '_$_$_flora_metheql_dyn'(M1,M2)),
	'_$_$_flora_fd_dyn'(O2,M2,Y),
	not X=Y.

'_$_$_flora_eql_dyn'(X,Y) :-
	'_$_$_flora_eql_dyn'(X,Z),
	'_$_$_flora_eql_dyn'(Z,Y),
	not X=Y.


'_$_$_flora_metheql_dyn'(X,Y) :-
	( nonvar(X) ->
	    functor(X,'_$_$_flora_@',N), N >= 1,
	    functor(Y,'_$_$_flora_@',N)

	  ; nonvar(Y) ->
	    functor(Y,'_$_$_flora_@',N), N >= 1,
	    functor(X,'_$_$_flora_@',N)
	),
	'_$_$_flora_argeql_dyn'(X,Y,N),
	not X=Y.


'_$_$_flora_argeql_dyn'(_,_,0).

'_$_$_flora_argeql_dyn'(X,Y,N) :-
	N >= 1,
	arg(N,X,Xn),
	arg(N,Y,Yn),
	(Xn=Yn ; '_$_$_flora_eql_dyn'(Xn,Yn)),
	M is N-1,
	'_$_$_flora_argeql_dyn'(X,Y,M).


/*****************************************************************************
  rules for object existence and empty result sets
*****************************************************************************/
:- table '_$_$_flora_exists_dyn'/1.
:- table '_$_$_flora_mvd_dyn'/2.
:- table '_$_$_flora_imvd_dyn'/2.

'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_fd_dyn'(X,_,_).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_fd_dyn'(_,_,X).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_mvd_dyn'(X,_,_).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_mvd_dyn'(_,_,X).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_ifd_dyn'(X,_,_).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_ifd_dyn'(_,_,X).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_imvd_dyn'(X,_,_).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_imvd_dyn'(_,_,X).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_isa_dyn'(X,_).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_isa_dyn'(_,X).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_sub_dyn'(X,_).
'_$_$_flora_exists_dyn'(X) :- '_$_$_flora_sub_dyn'(_,X).

'_$_$_flora_exists_dyn'(X) :-
	'_$_$_flora_fd_dyn'(_,M,_),
	M =.. [_|L],
	member(X,L).

'_$_$_flora_exists_dyn'(X) :-
	'_$_$_flora_mvd_dyn'(_,M,_),
	M =.. [_|L],
	member(X,L).

'_$_$_flora_exists_dyn'(X) :-
	'_$_$_flora_ifd_dyn'(_,M,_),
	M =.. [_|L],
	member(X,L).

'_$_$_flora_exists_dyn'(X) :-
	'_$_$_flora_imvd_dyn'(_,M,_),
	M =.. [_|L],
	member(X,L).


'_$_$_flora_mvd_dyn'(O,M) :- '_$_$_flora_mvd_dyn'(O,M,_).

'_$_$_flora_imvd_dyn'(O,M) :- '_$_$_flora_imvd_dyn'(O,M,_).


/*****************************************************************************
  rules for flattened path expressions on RHS
*****************************************************************************/
:- table '_$_$_flora_fd_rhs_dyn'/3.
:- table '_$_$_flora_mvd_rhs_dyn'/3.
:- table '_$_$_flora_ifd_rhs_dyn'/3.
:- table '_$_$_flora_imvd_rhs_dyn'/3.
:- table '_$_$_flora_mvd_rhs_dyn'/2.
:- table '_$_$_flora_imvd_rhs_dyn'/2.
:- table '_$_$_flora_isa_rhs_dyn'/2.
:- table '_$_$_flora_sub_rhs_dyn'/2.
:- table '_$_$_flora_fs_rhs_dyn'/3.
:- table '_$_$_flora_mvs_rhs_dyn'/3.


/****************************************************************************/
'_$_$_flora_fd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_fd_dyn'(Object,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_fd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_fd_dyn'(O,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_fd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_fd_dyn'(Object,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_fd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_fd_dyn'(O,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

/****************************************************************************/
'_$_$_flora_mvd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_mvd_dyn'(Object,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_mvd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_mvd_dyn'(O,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_mvd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_mvd_dyn'(Object,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_mvd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_mvd_dyn'(O,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

/****************************************************************************/
'_$_$_flora_ifd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_ifd_dyn'(Object,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_ifd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_ifd_dyn'(O,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_ifd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_ifd_dyn'(Object,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_ifd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_ifd_dyn'(O,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

/****************************************************************************/
'_$_$_flora_imvd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_imvd_dyn'(Object,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_imvd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_imvd_dyn'(O,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_imvd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_imvd_dyn'(Object,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_imvd_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_imvd_dyn'(O,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

/****************************************************************************/
'_$_$_flora_mvd_rhs_dyn'(Object,Method) :-
	'_$_$_flora_mvd_dyn'(Object,M),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_mvd_rhs_dyn'(Object,Method) :-
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_mvd_dyn'(O,M),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

/****************************************************************************/
'_$_$_flora_imvd_rhs_dyn'(Object,Method) :-
	'_$_$_flora_imvd_dyn'(Object,M),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_imvd_rhs_dyn'(Object,Method) :-
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_imvd_dyn'(O,M),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

/****************************************************************************/
'_$_$_flora_isa_rhs_dyn'(Object1,Object2) :-
	'_$_$_flora_isa_dyn'(Object1,Object2).

'_$_$_flora_isa_rhs_dyn'(Object1,Object2) :-
	'_$_$_flora_eql_dyn'(Object1,O1),
	'_$_$_flora_isa_dyn'(O1,Object2).

'_$_$_flora_isa_rhs_dyn'(Object1,Object2) :-
	'_$_$_flora_eql_dyn'(Object2,O2),
	'_$_$_flora_isa_dyn'(Object1,O2).

'_$_$_flora_isa_rhs_dyn'(Object1,Object2) :-
	'_$_$_flora_eql_dyn'(Object1,O1),
	'_$_$_flora_eql_dyn'(Object2,O2),
	'_$_$_flora_isa_dyn'(O1,O2).

/****************************************************************************/
'_$_$_flora_sub_rhs_dyn'(Object1,Object2) :-
	'_$_$_flora_subclass_dyn'(Object1,Object2).

'_$_$_flora_sub_rhs_dyn'(Object1,Object2) :-
	'_$_$_flora_eql_dyn'(Object1,O1),
	'_$_$_flora_subclass_dyn'(O1,Object2).

'_$_$_flora_sub_rhs_dyn'(Object1,Object2) :-
	'_$_$_flora_eql_dyn'(Object2,O2),
	'_$_$_flora_subclass_dyn'(Object1,O2).

'_$_$_flora_sub_rhs_dyn'(Object1,Object2) :-
	'_$_$_flora_eql_dyn'(Object1,O1),
	'_$_$_flora_eql_dyn'(Object2,O2),
	'_$_$_flora_subclass_dyn'(O1,O2).

/****************************************************************************/
'_$_$_flora_fs_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_fs_dyn'(Object,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_fs_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_fs_dyn'(O,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_fs_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_fs_dyn'(Object,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_fs_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_fs_dyn'(O,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

/****************************************************************************/
'_$_$_flora_mvs_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_mvs_dyn'(Object,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_mvs_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_mvs_dyn'(O,M,Result),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_mvs_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_mvs_dyn'(Object,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).

'_$_$_flora_mvs_rhs_dyn'(Object,Method,Result) :-
	'_$_$_flora_eql_dyn'(Result,R),
	'_$_$_flora_eql_dyn'(Object,O),
	'_$_$_flora_mvs_dyn'(O,M,R),
	(M=Method ; '_$_$_flora_metheql_dyn'(M,Method)).


/****************************  End of Trailer  ******************************/

