/* File:      odbc_driver_config.P -- loader for the ODBC driver
** Author(s): Saikat Mukherjee
** Contact:   saikat@cs.sunysb.edu
** 
*/


:- import slash/1, str_cat/3, machine_file_exists/1 from machine.
:- import fmt_write_string/3, file_time/2 from file_io.
:- import search_module/6 from consult.
:- import xsb_configuration/2 from xsb_configuration.
:- import odbc_info/2 from odbc_init.
:- import rename/2 from shell.
:- import compile_so/3, runtime_loader_flag/3 from foreign.
:- import path_sysop/3, path_sysop/2 from file_io.

make_odbc_driverH(CC, CC_opts) :-
   	slash(Slash),
	xsb_configuration(compiler, XCC),
	xsb_configuration(configuration, XSBconfiguration),
	odbc_info(libdir, ODBC_libdir),
	(ODBC_libdir == ''
	-> ODBC_libdir_flag = ''
	;  str_cat('-L', ODBC_libdir, ODBC_libdir_flag)
	),
	%% Creates something like -Wl,-rpath,<libdir>
	runtime_loader_flag(XCC, ODBC_libdir, OdbcRunpathFlag),
	(dbdrivers_running_under(cygwin) ->
	% cygwin specific stuff

	xsb_configuration(config_bindir, ConfigBindir),
	package_configuration(dir(odbc_driver), ODBCDriverDir),
	fmt_write_string(ODBCDriverO, '%s%scc%sodbc_driver.o', 
		f(ODBCDriverDir, Slash, Slash)),
	
	%% change the path here if visual studio is installed in a different dir
	
	fmt_write_string(LD_flags,
		' %s%sdriver_manager.dll "C:\program files\microsoft visual studio\vc98\lib\odbc32.lib" "C:\program files\microsoft visual studio\vc98\lib\odbccp32.lib" ',f(ConfigBindir, Slash))
	;
	dbdrivers_running_under(windows) -> true
	% windows specific stuff
	;
	% unix specific stuff
	
	xsb_configuration(config_libdir, ConfigLibdir),
	fmt_write_string(LD_flags,
		' %s %s %s%sdriver_manager.so %s%sodbc_driver.so -lodbc -ldl',
		f(OdbcRunpathFlag, ODBC_libdir_flag, 
		ConfigLibdir, Slash, ConfigLibdir, Slash))
	),
	package_configuration(dir(odbc_driver), ODBCDriverDir),
	fmt_write_string(LD_directives_file,
		'%s%scc%sodbc_driver.H', f(ODBCDriverDir, 
		Slash, Slash)),
	telling(OldTell),
	tell(LD_directives_file),
	writeln('%% This file is generated on-the-fly by odbc_driver_config.P'),
	writeln('%% Do not edit--any changes will be written over.'),
	write('%% XSB config:    '), writeln(XSBconfiguration),
	write('%% XSB CC:        '), writeln(XCC),
	write('%% CC:       '), writeln(CC),
	write('%% CC Opts: '), writeln(CC_opts), 
	writeln(':- export driverODBC_register/0.'),
	writeln(':- export driverODBC_initialise/0.'),
	write(':- ldoption('''),
	write(LD_flags),
	writeln(''').'),
	told,
	tell(OldTell).
    

:-  package_configuration(dir(odbc_driver), ODBCDriverDir),
    slash(Slash),
    Basename = odbc_driver,
    fmt_write_string(Module,
		     '%s%scc%s%s', f(ODBCDriverDir, Slash, Slash, Basename)),
    (   %% avoid recompilation: check if odbc_driver.H exists and 
	%% is newer than odbc_driver.c.
	str_cat(Module, '.c', ModuleSourceFile),
	str_cat(Module, '.H', ModuleH),
	machine_file_exists(ModuleH),
	file_time(ModuleH, time(CT1,CT2)),
	file_time(ModuleSourceFile, time(ST1,ST2)),
	time(ST1,ST2) @< time(CT1,CT2)
    %% module compiled and is current, so just load
    -> [Basename]
    ;  
	(dbdrivers_running_under(cygwin) ->
	% cygwin specific stuff

	xsb_configuration(compiler, CC),
	odbc_info(ccflags, CCflags),
	odbc_info(ldflags, LDflags),
	xsb_configuration(config_dir, ConfigDir),
	xsb_configuration(config_bindir, ConfigBinDir),
	xsb_configuration(packagesdir, PackagesDir),
	fmt_write_string(DBDriversDir, '%s%sdbdrivers%scc', 
		f(PackagesDir, Slash, Slash)),
	fmt_write_string(CC_opts,
		' %s -I %s -I %s',
		f(CCflags, ConfigDir, DBDriversDir)),
	str_cat(Module, '.dll', SharedLib),
	make_odbc_driverH(CC, CC_opts),
	consult(Module, [cc(CC), cc_opts(CC_opts)]),
	fmt_write_string(ConfigDll,
		'%s%s%s.dll', f(ConfigBinDir, Slash, Basename)),
	rename(SharedLib, ConfigDll),
	str_cat(Module, '.xwam', ObjfileX),
	fmt_write_string(LibObjFileX,
		'%s%s%s.xwam', f(ConfigBinDir, Slash, Basename)),
	rename(ObjfileX, LibObjFileX),
	str_cat(Module, '.o', ObjfileO),
	fmt_write_string(LibObjFileO,
		'%s%s%s.o', f(ConfigBinDir, Slash, Basename)),
	rename(ObjfileO, LibObjFileO),
	str_cat(Module, '.a', ObjfileA),
	fmt_write_string(LibObjFileA,
		'%s%s%s.a', f(ConfigBinDir, Slash, Basename)),
	rename(ObjfileA, LibObjFileA),
	str_cat(Module, '.def', ObjfileDef),
	fmt_write_string(LibObjFileDef,
		'%s%s%s.def', f(ConfigBinDir, Slash, Basename)),
	rename(ObjfileDef, LibObjFileDef)
	;
	dbdrivers_running_under(windows) ->
	% windows specific stuff
	make_odbc_driverH(CC, ''),
	[Basename]
	;
	% else unix specific stuff

	xsb_configuration(compiler, CC),
	odbc_info(ccflags, CCflags),
	odbc_info(ldflags, LDflags),
	xsb_configuration(config_dir, ConfigDir),
	xsb_configuration(config_libdir, ConfigLibDir),
	xsb_configuration(packagesdir, PackagesDir),
	fmt_write_string(DBDriversDir, '%s%sdbdrivers%scc', 
		f(PackagesDir, Slash, Slash)),
	fmt_write_string(CC_opts,
		' %s -I %s -I %s',
		f(CCflags, ConfigDir, DBDriversDir)),
	compile_so(Module, [cc(CC), cc_opts(CC_opts)], LDflags),
	str_cat(Module, '.so', SharedLib),
	fmt_write_string(LibMod, '%s%s%s.so', f(ConfigLibDir, Slash, Basename)),
	rename(SharedLib, LibMod),
	make_odbc_driverH(CC, CC_opts),
	consult(Module, [cc(CC), cc_opts(CC_opts)]),
	fmt_write_string(LibSharedObjFile,
		'%s%s%s.so', a(ConfigLibDir, Slash, Basename)),
	rename(SharedLib, LibSharedObjFile),
	str_cat(Module, '.xwam', ObjfileX),
	fmt_write_string(LibObjFileX,
		'%s%s%s.xwam', a(ConfigLibDir, Slash, Basename)),
	rename(ObjfileX, LibObjFileX)
	)
     ).
	

dbdrivers_running_under(cygwin) :-
	xsb_configuration(architecture, A),
	str_sub(cygwin, A),
	!.

dbdrivers_running_under(windows) :-
	xsb_configuration(architecture, A),
	str_sub(windows, A),
	!.

dbdrivers_running_under(unix).


