% TLS: keep all this in usermod.

/* cdf flags: 
caching
logging
*/

% keep a table with all possible flags here.
cdf_flag(dirty).
cdf_flag(check_implication).
cdf_flag(check_types).
cdf_flag(classify_if_necessary).


% initial_cdf_flag/2 facts can be overridden by declaring
% corresponding user_cdf_flag/2 facts in $(HOME)/.xsb/xsbrc.P

%initial_cdf_flag(dirty,<component>).
%initial_cdf_flag(check_implication,<context>).
initial_cdf_flag(check_types,term_update).
initial_cdf_flag(classify_if_necessary,component_load).

:- dynamic cdf_flags/2.
:- index(cdf_flags/2,trie).

:- dynamic caching_cdf/1.
:- dynamic cdf_dirty/1.
:- dynamic using_xj/0.

component_table_ext(isa_ext(_,_),1,[2]).
component_table_ext(hasAttr_ext(_,_,_),2,[1,3]).
component_table_ext(allAttr_ext(_,_,_),2,[1,3]).
component_table_ext(classHasAttr_ext(_,_,_),2,[1,3]).

component_table_int(isa_int(_,_),1,[arg(2,warn)]).
component_table_int(hasAttr_int(_,_,_),2,[arg(1,warn),arg(3,no_warn)]).
component_table_int(allAttr_int(_,_,_),2,[arg(1,warn),arg(3,no_warn)]).
component_table_int(classHasAttr_int(_,_,_),2,[arg(1,warn),arg(3,no_warn)]).

component_table_int(assert_cdf_int(_),null,[]).
component_table_int(retractall_cdf_int(_),null,[]).

