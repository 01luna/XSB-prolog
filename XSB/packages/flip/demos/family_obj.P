/*** lib/header:    Prepended automatically using etc/header.P   ************/

%:- table_all.  
%:- auto_table.
%:- ti_all.

/************************* End of Header ************************************/

%%% male::person.
sub_(male,person).

%%% female::person.
sub_(female,person).

%%% person[mother=>person;father=>person;spouse=>person;husband=>person;son=>>person;daughter=>>person;brother=>>person;sister=>>person;uncle=>>person;aunt=>>person;ancestor=>>person;parent=>>person].
fs_(person,@(mother),person).
fs_(person,@(father),person).
fs_(person,@(spouse),person).
fs_(person,@(husband),person).
mvs_(person,@(son),person).
mvs_(person,@(daughter),person).
mvs_(person,@(brother),person).
mvs_(person,@(sister),person).
mvs_(person,@(uncle),person).
mvs_(person,@(aunt),person).
mvs_(person,@(ancestor),person).
mvs_(person,@(parent),person).

%%% wilhelm:male[spouse->rita].
isa_(wilhelm,male).
fd_(wilhelm,@(spouse),rita).

%%% rita:female.
isa_(rita,female).

%%% franz:male[mother->rita;father->wilhelm].
isa_(franz,male).
fd_(franz,@(mother),rita).
fd_(franz,@(father),wilhelm).

%%% heinz:male[mother->rita;father->wilhelm].
isa_(heinz,male).
fd_(heinz,@(mother),rita).
fd_(heinz,@(father),wilhelm).

%%% hermann:male[mother->rita;father->wilhelm;spouse->johanna].
isa_(hermann,male).
fd_(hermann,@(mother),rita).
fd_(hermann,@(father),wilhelm).
fd_(hermann,@(spouse),johanna).

%%% johanna:female.
isa_(johanna,female).

%%% monique:female.
isa_(monique,female).

%%% bernhard:male[mother->johanna;father->hermann].
isa_(bernhard,male).
fd_(bernhard,@(mother),johanna).
fd_(bernhard,@(father),hermann).

%%% karl:male[mother->johanna;father->hermann;spouse->christina].
isa_(karl,male).
fd_(karl,@(mother),johanna).
fd_(karl,@(father),hermann).
fd_(karl,@(spouse),christina).

%%% christina:female.
isa_(christina,female).

%%% kati:female[mother->johanna;father->hermann].
isa_(kati,female).
fd_(kati,@(mother),johanna).
fd_(kati,@(father),hermann).

%%% albert:male[mother->monique;father->bernhard].
isa_(albert,male).
fd_(albert,@(mother),monique).
fd_(albert,@(father),bernhard).

%%% eva:female[mother->kati].
isa_(eva,female).
fd_(eva,@(mother),kati).

%%% X[spouse->Y]:-Y[spouse->X].
fd_(_X,@(spouse),_Y) :-
	fd_(_Y,@(spouse),_X).

%%% X[parent->>{Y}]:-X[father->Y].
mvd_(_X,@(parent),_Y) :-
	fd_(_X,@(father),_Y).

%%% X[parent->>{Y}]:-X[mother->Y].
mvd_(_X,@(parent),_Y) :-
	fd_(_X,@(mother),_Y).

%%% X[son->>{Y}]:-Y[parent->>{X}],Y:male.
mvd_(_X,@(son),_Y) :-
	mvd_(_Y,@(parent),_X),isa_(_Y,male).

%%% X[daughter->>{Y}]:-Y[parent->>{X}],Y:female.
mvd_(_X,@(daughter),_Y) :-
	mvd_(_Y,@(parent),_X),isa_(_Y,female).

%%% X[brother->>{Y}]:-X..parent[son->>{Y}],notX=Y.
mvd_(_X,@(brother),_Y) :-
	mvd_(_X,@(parent),_P_2),mvd_(_P_2,@(son),_Y),not _X = _Y.

%%% X[sister->>{Y}]:-X..parent[daughter->>{Y}],notX=Y.
mvd_(_X,@(sister),_Y) :-
	mvd_(_X,@(parent),_P_3),mvd_(_P_3,@(daughter),_Y),not _X = _Y.

%%% X[brother_in_law->>{Y}]:-X..sister[spouse->Y].
mvd_(_X,@(brother_in_law),_Y) :-
	mvd_(_X,@(sister),_P_4),fd_(_P_4,@(spouse),_Y).

%%% X[brother_in_law->>{Y}]:-X.spouse[brother->>{Y}].
mvd_(_X,@(brother_in_law),_Y) :-
	fd_(_X,@(spouse),_P_5),mvd_(_P_5,@(brother),_Y).

%%% X[sister_in_law->>{Y}]:-X..brother[spouse->Y].
mvd_(_X,@(sister_in_law),_Y) :-
	mvd_(_X,@(brother),_P_6),fd_(_P_6,@(spouse),_Y).

%%% X[sister_in_law->>{Y}]:-X.spouse[sister->>{Y}].
mvd_(_X,@(sister_in_law),_Y) :-
	fd_(_X,@(spouse),_P_7),mvd_(_P_7,@(sister),_Y).

%%% X[uncle->>{Y}]:-X..parent[brother->>{Y}].
mvd_(_X,@(uncle),_Y) :-
	mvd_(_X,@(parent),_P_8),mvd_(_P_8,@(brother),_Y).

%%% X[uncle->>{Y}]:-X..parent[brother_in_law->>{Y}].
mvd_(_X,@(uncle),_Y) :-
	mvd_(_X,@(parent),_P_9),mvd_(_P_9,@(brother_in_law),_Y).

%%% X[aunt->>{Y}]:-X..parent[sister->>{Y}].
mvd_(_X,@(aunt),_Y) :-
	mvd_(_X,@(parent),_P_10),mvd_(_P_10,@(sister),_Y).

%%% X[aunt->>{Y}]:-X..parent[sister_in_law->>{Y}].
mvd_(_X,@(aunt),_Y) :-
	mvd_(_X,@(parent),_P_11),mvd_(_P_11,@(sister_in_law),_Y).

%%% X[ancestor->>{Y}]:-X[parent->>{Y}].
mvd_(_X,@(ancestor),_Y) :-
	mvd_(_X,@(parent),_Y).

%%% X[ancestor->>{Y}]:-X..ancestor[ancestor->>{Y}].
mvd_(_X,@(ancestor),_Y) :-
	mvd_(_X,@(ancestor),_P_12),mvd_(_P_12,@(ancestor),_Y).

%%% X:illegitimate:-X[father->F;mother->M],notM.spouse=F.
isa_(_X,illegitimate) :-
	fd_(_X,@(father),_F),fd_(_X,@(mother),_M),not (fd_(_M,@(spouse),_P_13)  ','  _P_13 = _F).

%%% ?-albert:C.
 :- print_all([isa_(albert,_h36232)],[[67] = _h36232]).

%%% ?-albert[M->X].
 :- print_all([fd_(albert,@(_h36416),_h36407)],[[77] = _h36416,[88] = _h36407]).

%%% ?-albert[M->>{X}].
 :- print_all([mvd_(albert,@(_h36614),_h36605)],[[77] = _h36614,[88] = _h36605]).

%%% ?-_.S[].
 :- print_all([fd_(_h36786,@(_h36799),_h36788)],[[83] = _h36799]).

%%% ?-_..M[].
 :- print_all([mvd_(_h36976,@(_h36989),_h36978)],[[77] = _h36989]).

%%% ?-_:C[].
 :- print_all([isa_(_h37125,_h37126)],[[67] = _h37126]).

%%% ?-albert..parent..uncle[sister_in_law->>{Y}].
 :- print_all([mvd_(albert,@(parent),_h37544),mvd_(_h37544,@(uncle),_h37522),mvd_(_h37522,@(sister_in_law),_h37524)],[[89] = _h37524]).

%%% ?-X[sister_in_law->>{Y}].
 :- print_all([mvd_(_h37787,@(sister_in_law),_h37789)],[[88] = _h37787,[89] = _h37789]).

