%% ISO and CIAO syntax files

:- compiler_options([ciao_directives]).

:- export xsbdoc/1,test/0,shell_stuff/1,make_bibfiles/1.

:- import format/3 from format.

:- import usage_message/1,
	  xsbdoc_bibfile/1,
	  xsbdoc_component/1,
	  xsbdoc_index/1, 
	  xsbdoc_main/1,
	  xsbdoc_option/1, 
	  xsbdoc_papertype/1,
	  xsbdoc_startpage/1
	from usermod.

:- import index_comment/2,option_comment/2 from autodocformats.
:- import corrected_search_module/5 from xsbdoc_term_proc.

:- import concat_atom/2 from string.
:- import flatten/2,member/2 from basics.
:- import xsb_configuration/2 from xsb_configuration.

:- import autodoc/7 from autodoc.

:- load_dync(usage_message).

:- comment(author, "Facultad de Inform@'{a}tica").
:- comment(author, "Universidad Polit@'{e}cnica de Madrid").

:- comment(copyright,"
Copyright @copyright{} 1996-99 Manuel Hermenegildo/The CLIP Group.

@include{Copyright.Manuals}
").

:- comment(summary,"@include{README.lpdoc}").

:- comment(module,"@include{Intro.lpdoc}

@section{lpdoc usage}

The following provides the different command line options available
when invoking @apl{lpdoc}. This description is intended only for
advanced users which might like to use @apl{lpdoc} in custom
applications. Note that the normal way to use @apl{lpdoc} is by
setting parameters in a @file{SETTINGS} file (see @ref{Generating a
manual}), and @apl{lpdoc} will be invoked automatically with the
correct options by the @file{Makefile} provided with the distribution.

@begin{verbatim}
@includefact{usage_message/1}
@end{verbatim}

").

:- dynamic xsbdoc_option/1.
:- dynamic xsbdoc_index/1.
:- dynamic xsbdoc_bibfile/1.
:- dynamic xsbdoc_papertype/1.
:- dynamic xsbdoc_startpage/1.
:- dynamic xsbdoc_component/1.
:- dynamic xsbdoc_main/1.

%% ---------------------------------------------------------------------------
%% Body
%% ---------------------------------------------------------------------------
test:- xsbdoc(xformat).

xsbdoc(Format_file):- 
	clear_the_decks,
	display_version,
	throw_load_dyn(Format_file),
	get_options(StartPage,PaperType,Opts),
	get_components(Components),
	component_texic(Components,Texics),
	xsbdoc_main(Main),
	corrected_search_module(Main,_Dir,Base,_Src,_Isl), 
	findall(Index,xsbdoc_index(Index),Indices),
        autodoc(texinfo,Main,Indices,Texics,
	             StartPage,PaperType,['-main'|Opts]),
	xsbdoc_components(Components,Indices,Opts),
	make_bibfiles(Base),	/* dont want main.P */
	shell_list(['tex \\\nonstopmode\\\input ',Base,'.texic']),
	shell_list(['texindex ',Base,'.?? ']),
	shell_list(['tex \\\nonstopmode\\\input ',Base,'.texic']),
	shell_list(['dvips ',Base,'.dvi',' -o ',Base,'.ps']),
	!.
xsbdoc(Format_file):- 
	format(user_error,"~nCould not process: ~w",[Format_file]),
	report_usage.

component_texic([],[]).
component_texic([P|Prest],[Texic|Trest]):- 
	corrected_search_module(P,_Dir,Base,_Src,_Isl), 
	concat_atom([Base,'.texic'],Texic),
	component_texic(Prest,Trest).

xsbdoc_components(Components,Indices,Opts):- 
	member(Comp,Components),
	autodoc(texinfo,Comp,Indices,[],
	             _StartPage,_PaperType,['-component'|Opts]),
	fail.
xsbdoc_components(_,_,_).

throw_load_dyn(File):- 
	load_dyn(File) -> true ; abort(('file not found ',File)).

clear_the_decks:- 
	retractall(xsbdoc_main(_)),
	retractall(xsbdoc_component(_)),
	retractall(xsbdoc_option(_)),
	retractall(xsbdoc_index(_)),
	retractall(xsbdoc_bibfile(_)),
	retractall(xsbdoc_papertype(_)),
	retractall(xsbdoc_startpage(_)),
	
	retractall(refs_stream(_)).

get_options(StartPage,PaperType,Opts):- 
	(xsbdoc_papertype(Paptype) -> 
	    PaperType = Paptype 
	  ; PaperType = letterpaper),
	(xsbdoc_startpage(Start) -> 
	    StartPage = Start
	  ; StartPage = 1),
	findall(X,(xsbdoc_option(X),
                   option_comment(X,_)),Opts).

display_version:- 
	xsbdoc_version(Version),
	format(user,"xsbdoc ~s ",[Version]),
	format(user,"Using code from CLIP Group, T.U. of Madrid (UPM)~n",[]).

xsbdoc_version("0.1").

get_components(Vals):- 
	findall(Val,xsbdoc_component(Val),Vals).

report_usage :-
	format(user,"Usage:~n~n",[]),
	usage_message(Text), 
	format(user,Text,[]),
	format(user,"~nAcceptable index names:~n",[]),
	( index_comment(Index,IText),
          format(user,"    ~w~n    ~s~n~n",[Index,IText]),
	  fail
	; true ),
	format(user,"~nAdditional options (MiscOpts):~n",[]),
	( option_comment(Option,OText),
          write((Option,OText)),nl,nl,
	  fail
	; true ).

%% This is in narrow format because that way it looks nicer in a man page.

shell_list(List):- 
	flatten(List,List1),
	concat_atom(List1,Command),
	shell(Command).

make_bibfiles(Main):- 
	shell_list(['chmod 664 ',Main,'.texic']),
	shell_list(['chmod 664 ',Main,'.texic']),
	shell('chmod 664 auto*.eps'),
	findall(Bib,xsbdoc_bibfile(Bib),Bibs),
	( Bibs \== [] -> 
	    xsb_configuration(install_dir,Dir),
	    concat_atom([Dir,'/packages/xsbdoc/'],XSBDoc),
	    concat_atom([Main,'.refs.aux'],MainRefsAux),
	    writeln('*** ---------------------------------------------------'),
	    writeln('*** Generating refs.texic, resolving refs...'),
	    writeln('*** ---------------------------------------------------'),
      	    shell_list(['cat *.refs  > ',MainRefsAux]),
	    open(MainRefsAux,append,MainStr),
	    concat_atom(['\bibstyle{',XSBDoc,'lpdoc} '],C1),
	    writeln(MainStr,C1),
	    concat_atom(['\bibdata{'|Bibs],C2),
	    concat_atom([C2,'} '],C3),
	    writeln(MainStr,C3),
	    close(MainStr),
	    shell_list(['bibtex ',Main,'.refs']),
	    shell_list(['mv ',Main,'.refs.bbl ',Main,'refs.texic'])
	  ; writeln('No Bibfiles found')).

end_of_file.

      	    shell_list(['cat *.refs > ',MainRefsAux]),
	    shell_list(['cat \bibstyle{',XSBDoc,'lpdoc} >> ',MainRefsAux]),
	    shell_list(['cat \bibdata{',Bibs,'} >> ',MainRefsAux]),

required(Type,Vals):- 
	findall(Val,xsbdoc_option(Type,Val),Vals),Vals \== [].

/*
parse_args:- 
 	misc_opts(Opts),
	xsbdoc_option('-htmlindex',[Main]),
	!,  generate_description(html,Main,Opts) .
parse_args:- 
 	misc_opts(Opts),
	xsbdoc_option('-man',[Main]),
	!,  generate_man_page(Main,Opts) .
parse_args:- 
 	misc_opts(Opts),
	xsbdoc_option('-infoindex',[Main]),
	!,  generate_info_dir_entry(Main,Opts) .
*/
	
option(Type,Vals):- 
	findall(Val,(xsbdoc_option(Type,Val),
		     option_comment(Val,_)),Vals).

$(BASEMAIN).texic texic: $(MAIN) $(COMPTEXI) $(SETTINGS)
	@$(ECHO) "*** --------------------------------------------------------"
	@$(ECHO) "*** Converting $(BASEMAIN).P to $(BASEMAIN).texic ... (main)"
	@$(ECHO) "*** --------------------------------------------------------"
	@$(ECHO) ../xsbdoc.sh $(EMU) $(BASEMAIN) 
	@../xsbdoc.sh $(EMU) $(BASEMAIN) -main
	-@chmod $(DATAMODE) $(BASEMAIN).texic
	-@chmod $(DATAMODE) $(BASEMAIN).refs
	-@chmod $(DATAMODE) auto*.eps
ifeq (,$(findstring norefs,$(MAINOPTS)))
	@$(ECHO) "*** --------------------------------------------------------"
	@$(ECHO) "*** Generating $(BASEMAIN)refs.texic, resolving refs..."
	@$(ECHO) "*** --------------------------------------------------------"
	-@$(ECHO) "*** Gathering all references from .refs files..."
	-@cat *.refs > $*refs.aux
	-@$(ECHO) "\\\bibstyle{$(LIBDIR)/alist}"    >> $*refs.aux
	-@$(ECHO) "\\\bibdata{$(BIBFILES)}"         >> $*refs.aux
	-@$(ECHO) "*** Building citation string database using BiBTeX..."
	-@$(BIBTEX) $*refs
	-@mv $*refs.bbl $*refs.el
	-@$(ECHO) "*** Resolving citations in main and all components..."
	-@$(REFSUPD) -file $*.texic -refsfile $*refs.el \
                     -components $(COMPTEXI) 
	-@chmod $(DATAMODE) *.texic
	-@$(ECHO) "*** Gathering again all references from .refs files..."
	-@cat *.refs > $*refs.aux
	-@$(ECHO) "\\\bibstyle{$(LIBDIR)/lpdoc}"  >> $*refs.aux
	-@$(ECHO) "\\\bibdata{$(BIBFILES)}"         >> $*refs.aux
	-@$(ECHO) "*** Building references chapter using BiBTeX..."
	-@$(BIBTEX) $*refs
	-@mv $*refs.bbl $*refs.texic
	-@chmod $(DATAMODE) $*refs.aux $*refs.blg 
	-@chmod $(DATAMODE) $*refs.texic $*refs.el
	-@$(ECHO) "Done."
endif
