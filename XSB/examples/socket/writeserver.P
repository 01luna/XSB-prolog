:- compiler_options([xpp_on]).
#include "socket_defs_xsb.h"
#include "timer_defs_xsb.h"
#include "char_defs.h"

#define Q_LENGTH  10


:- import 
     socket/2, socket_bind/3, socket_listen/3, socket_accept/3, 
     socket_set_option/3, socket_close/2, socket_get0/3,
     socket_put/3 from socket.

:- import file_close/1, fmt_write/3 from file_io.
:- import ground/1 from basics.


%% Port on which the server is listening
xsb_port(6026).

server :-
  socket(Sockfd0, ErrCode),
  writeln(socket(Sockfd0, ErrCode)),
  (ErrCode == SOCK_OK
  ->  socket_set_option(Sockfd0,linger,SOCK_NOLINGER),
      xsb_port(XSBPort),
      socket_bind(Sockfd0, XSBPort, ErrBind),
      writeln(socket_bind(Sockfd0, XSBPort, ErrBind)),
      (ErrBind == SOCK_OK
      -> socket_listen(Sockfd0,Q_LENGTH, ErrListen),
	   writeln(socket_listen(Sockfd0,Q_LENGTH, ErrListen))
      ;  writeln('Cannot bind'),
	   socket_close(Sockfd0,_),
	   fail
      ),
   	socket_accept(Sockfd0, Sockfd0_out1, ErrorCode),
      writeln(socket_accept(Sockfd0, Sockfd0_out1, ErrorCode)),

	server_loop(Sockfd0_out1)

  ;   writeln('Cannot open socket'), fail
  ).

server_loop(Sockfd) :-
    socket_get0(Sockfd,Char,Ecode),
    writeln(socket_get0(Sockfd, Char, Ecode)),
	(Char==CH_EOF_C -> 
	  writeln('Client quits...'),
	  socket_close(Sockfd,_),
	  true
    ; ground(Char) ->
	  fmt_write('%c', f(Char)),nl,fail
    ; fail
    ).
	  
server_loop(Sockfd_orig) :-
  server_loop(Sockfd_orig).

