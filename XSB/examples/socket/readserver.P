:- compiler_options([xpp_on]).
#include "socket_defs_xsb.h"
#include "timer_defs_xsb.h"
#include "char_defs.h"

#define Q_LENGTH  10


:- import 
     socket/2, socket_bind/3, socket_listen/3, socket_accept/3, 
     socket_set_option/3, socket_close/2, socket_get0/3,
     socket_put/3, socket_set_select/4,
     socket_select/6, socket_select_destroy/1 from socket.

:- import file_close/1, fmt_write/3 from file_io.
:- import ground/1 from basics.


%% Port on which the server is listening
xsb_port(6025).

server :-
  socket(Sockfd0, ErrCode),
  writeln(socket(Sockfd0, ErrCode)),
  (ErrCode == SOCK_OK
  ->  socket_set_option(Sockfd0,linger,SOCK_NOLINGER),
      xsb_port(XSBPort),
      socket_bind(Sockfd0, XSBPort, ErrBind),
      writeln(socket_bind(Sockfd0, XSBPort, ErrBind)),
      (ErrBind == SOCK_OK
      -> socket_listen(Sockfd0,Q_LENGTH, ErrListen),
	     writeln(socket_listen(Sockfd0,Q_LENGTH, ErrListen))
      ;  writeln('Cannot bind'),
	     socket_close(Sockfd0,_),
	     fail
      ),
      socket_set_select('mytest', [Sockfd0],[Sockfd0],[Sockfd0]),
      writeln(socket_set_select(mytest,[Sockfd0],[Sockfd0],[Sockfd0])),

      socket_select('mytest', _, Availr, Availw, Availe, Error),
      writeln(socket_select('mytest', _, Availr, Availw, Availe,Error)),
	  (Availr == [] ->
        writeln('no available read socket...'), fail; 

		socket_accept(Sockfd0, Sockfd0_out1, ErrorCode),
        writeln(socket_accept(Sockfd0, Sockfd0_out1, ErrorCode)),

   	    (ErrorCode == SOCK_OK
		 ->
		  socket_set_select('consock', [Sockfd0_out1],[],[Sockfd0_out1]),
          writeln(socket_set_select(consock,[Sockfd0_out1],[],[Sockfd0_out1])),
		  server_loop(Sockfd0_out1);
		  writeln('cannot accept'),fail
        ) 
      ),

      socket_select_destroy('mytest'),
	  socket_select_destroy('consock'),
      writeln('socket_select_destroyed...')
  ;   writeln('Cannot open socket'), fail
  ).

server_loop(Sockfd0_out1) :-
    socket_select('consock', _, Availr, Availw, Availe, Error),
    writeln(socket_select('consock', _, Availr, Availw, Availe,Error)),

    (Availr == [] ->
      writeln('no available read socket...'), fail; 
	  socket_get0(Sockfd0_out1,Char,Ecode),
	  writeln(socket_get0(Sockfd0_out1, Char, Ecode))
	),

	(Char==CH_EOF_C -> 
	  writeln('Client quits...'),
	  socket_close(Sockfd0_out1,_),
	  true
    ; ground(Char) ->
	  fmt_write('%c', f(Char)),nl,fail
    ; fail
    ).
	  
server_loop(Sockfd_orig) :-
  server_loop(Sockfd_orig).

