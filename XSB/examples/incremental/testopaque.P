/* Testing opaque feature */

/* 
Opaque predicates are non-incremental. Defining a predicate opaque
informs to the engine that an incremental table can be dependent on
opaque table (should not throw a abort) and tables that are dependent
on opaque table. Here opaque tables can be changed or abolished
without affecting any incrementally maintained tables. 

Assumption: I am assuming that opaque predicates should also be
defined as tabled.

*/

:- import incr_assert/1 from increval.

:- table p/1.
:- incr p/1.

:- table q/1.
:- incr q/1.

:- incrdynamic f1/1.
:- dynamic f1/1.

:- opaque o/1.
:- table o/1.

:- table t/1.


p(X):- q(X).
p(X):- o(X).

o(X):- t(X).

q(X):-  f1(X).
t(X):- f2(X).


:- dynamic f2/1.

:- incr_assert(f1(a)).
:- incr_assert(f1(b)).
:- incr_assert(f1(c)).

:- assert(f2(d)).
:- assert(f2(e)).


/*

Say we call p(X) then p(X)-->o(X) call edge is not there.

*/