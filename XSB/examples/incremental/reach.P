/* Transitive Closure: definite datalog example */

:- import incr_assert/1, incr_retract/1, update/1 from increval.

:- incrdynamic edge/2.
:- dynamic edge/2.

:- table reach/2.
:- incr reach/2.


:- assert(edge(1,2)).
:- assert(edge(2,4)).
:- assert(edge(1,3)).
:- assert(edge(3,4)).


reach(X,Y):- edge(X,Y).
reach(X,Y):- edge(X,Z),reach(Z,Y).


:- reach(1,X).

:- incr_retract(edge(1,2)).
:- update(_X).


:- incr_assert(edge(1,2)).
:- update(_X).
:- incr_retract(edge(1,2)).
:- update(X).
:- incr_assert(edge(1,2)).
:- update(X).
:- incr_retract(edge(1,2)).
:- update(X).
:- incr_assert(edge(1,2)).
:- update(X).
:- incr_retract(edge(1,2)).
:- update(X).
:- incr_assert(edge(1,2)).
:- update(X).
:- incr_retract(edge(1,2)).
:- update(X).
:- incr_assert(edge(1,2)).
:- update(X).

:- incr_retract(edge(2,4)).
:- update(X).
:- incr_assert(edge(2,4)).
:- update(X).
:- incr_retract(edge(2,4)).
:- update(X).
:- incr_assert(edge(2,4)).
:- update(X).
:- incr_retract(edge(2,4)).
:- update(X).
:- incr_assert(edge(2,4)).
:- update(X).
:- incr_retract(edge(2,4)).
:- update(X).
:- incr_assert(edge(2,4)).
:- update(X).
:- incr_retract(edge(2,4)).
:- update(X).
:- incr_assert(edge(2,4)).
:- update(X).




/* Sample Run 



XSB Version 2.7.1+ (CVS) of March 5, 2005
[i686-pc-linux-gnu; mode: optimal; engine: slg-wam; gc: indirection; scheduling: local]

| ?- [reach].
[Compiling ./reach]
[reach compiled, cpu time used: 0.0480 seconds]
[reach loaded]

yes
| ?- reach(1,X).

X = 4;

X = 3;

X = 2;

no
| ?- import incr_assert/1, incr_retract/1, update/1 from increval.

yes
| ?- incr_assert(edge(4,5)), incr_assert(edge(5,6)).

yes
| ?- update(X). 

X = [reach(1,_h192),reach(3,_h204),reach(2,_h216),reach(4,_h228),reach(5,_h240),reach(6,_h252)];

no
| ?- reach(1,X).

X = 6;

X = 5;

X = 4;

X = 3;

X = 2;

no
| ?- incr_retract(edge(1,3)).

yes
| ?- update(X).

X = [reach(1,_h156)];

no

| ?- reach(1,X).

X = 6;

X = 5;

X = 4;

X = 2;

no
| ?- halt.

End XSB (cputime 0.06 secs, elapsetime 62.64 secs)
dsaha@187-dhcp:~/y06/spring/cvsxsb/XSBv3/XSB/examples/incremental$ 


*/

/*
Update(X) returns the calls that are changed in X. 


*/