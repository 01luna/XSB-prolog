/* File:      machine.P
** Author(s): Jiyang Xu, Kostis Sagonas, Terrance Swift, David S. Warren,
**    	      Ernie Johnson 
** Contact:   xsb-contact@cs.sunysb.edu
** 
** Copyright (C) The Research Foundation of SUNY, 1986, 1993-1999
** Copyright (C) ECRC, Germany, 1990
** 
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** $Id: machine.P,v 1.26 1999/08/10 12:17:56 kostis Exp $
** 
*/

/*----------------------------------------------------------------------*/
/* NOTE: This file BETTER be always compiled with the "sysmod" option.	*/
/*----------------------------------------------------------------------*/

:- compiler_options([sysmod,cpp_on]).

#include "builtin.h"
#include "celltags.h"
#include "flag_defs.h"
#include "msyscall.h"


/*======================================================================*/
/* This file contains definitions for predicates implemented by the	*/
/* underlying machine (hard builtins).					*/
/*======================================================================*/

psc_name(_PSC, _String) :- '_$builtin'(PSC_NAME).
psc_arity(_PSC, _Arity) :- '_$builtin'(PSC_ARITY).
psc_type(_PSC, _Type) :- '_$builtin'(PSC_TYPE).
psc_prop(_PSC, _Term) :- '_$builtin'(PSC_PROP).
psc_set_type(_PSC, _Type) :- '_$builtin'(PSC_SET_TYPE).
psc_set_prop(_PSC, _Term) :- '_$builtin'(PSC_SET_PROP).

term_psc(_Term, _PSC) :- '_$builtin'(TERM_PSC).
term_type(_Term, _Type) :- '_$builtin'(TERM_TYPE).
term_compare(_Term1, _Term2, _Res) :- '_$builtin'(TERM_COMPARE).
term_new(_PSC, _Term) :- '_$builtin'(TERM_NEW).
term_arg(_Term, _Index, _Arg) :- '_$builtin'(TERM_ARG).
term_set_arg(_Term, _Index, _Arg, _Perm) :- '_$builtin'(TERM_SET_ARG).
stat_flag(_Flag, _Value) :- '_$builtin'(STAT_FLAG).
stat_set_flag(_Flag, _Value) :- '_$builtin'(STAT_SET_FLAG).
buff_alloc(_Size, _Buffer) :- '_$builtin'(BUFF_ALLOC).
buff_word(_Buffer, _Disp, _Value) :- '_$builtin'(BUFF_WORD).
buff_set_word(_Buffer, _Disp, _Value) :- '_$builtin'(BUFF_SET_WORD).
buff_byte(_Buffer, _Disp, _Value) :- '_$builtin'(BUFF_BYTE).
buff_set_byte(_Buffer, _Disp, _Value) :- '_$builtin'(BUFF_SET_BYTE).
code_call(_CodeAddr, _Term, _Type) :- '_$builtin'(CODE_CALL).
str_len(_String, _Length) :- '_$builtin'(STR_LEN).

str_cat(_String1, _String2, _String3) :- '_$builtin'(STR_CAT).
str_cmp(_String1, _String2, _Res) :- '_$builtin'(STR_CMP).
str_hsh(_String, _Arity, _Size, _Res) :- '_$builtin'(STR_HSH).

call0(_Term) :- '_$builtin'(CALL0).
stat_sta(_X) :- '_$builtin'(STAT_STA).
stat_cputime(_X) :- '_$builtin'(STAT_CPUTIME).
code_load(_ByteCodeFileName, _InitAddr, _Exp) :- '_$builtin'(CODE_LOAD).
buff_set_var(_Buff, _Disp, _BufSize, _Var) :- '_$builtin'(BUFF_SET_VAR).
buff_dealloc(_Buff, _OldSize, _NewSize) :- '_$builtin'(BUFF_DEALLOC).
buff_cell(_Buff, _Disp, _Cell) :- '_$builtin'(BUFF_CELL).
buff_set_cell(_Buff, _Disp, _Tag, _Value) :- '_$builtin'(BUFF_SET_CELL).
copy_term0(_Term, _Result) :- '_$builtin'(COPY_TERM).
/* check if Sub is a substring in Str */
str_sub(_Sub, _Str, _Pos) :- '_$builtin'(STR_SUB).
%% If file is a directory, add slash, if needed, or strip extra slashes
dirname_canonic(_File, _Canonic) :- '_$builtin'(DIRNAME_CANONIC).
/* for efficiency reasons, the following predicates are also implemented */
psc_insert(_Name, _Arity, _PSC, _MName) :- '_$builtin'(PSC_INSERT).
psc_import(_Pname, _Arity, _MName) :- '_$builtin'(PSC_IMPORT).

psc_insertmod(_ModName, _Def, _PSC) :- '_$builtin'(PSC_INSERTMOD).
load_seg(_SegNo, _TextBytes, _IndexBytes, _File, _InitAddr) :- '_$builtin'(LOAD_SEG).
file_gettoken(_File, _PrevCh, _Type, _Value, _NextCh) :- '_$builtin'(FILE_GETTOKEN).
file_puttoken(_File, _Type, _Value) :- '_$builtin'(FILE_PUTTOKEN).
term_hash(_Term, _Size, _Value) :- '_$builtin'(TERM_HASH).
unload_seg(_CodeSeg) :- '_$builtin'(UNLOAD_SEG).
load_obj(_FileName, _Mod, _LdOption, _InitAddr) :- '_$builtin'(LOAD_OBJ).

getenv(_EnvVar, _Value) :- '_$builtin'(GETENV).

sys_syscall(_CallNo, _Res, _A1, _A2) :- '_$builtin'(SYS_SYSCALL).
sys_system(_CallNo, _Command, _Arg1,_Arg2,_Arg3,_Arg4,_Arg5) :- '_$builtin'(SYS_SYSTEM).
sys_gethost(_Name, _Buffer) :- '_$builtin'(SYS_GETHOST).
sys_errno(_Errno) :- '_$builtin'(SYS_ERRNO).

file_stat(_File, _Which, _RetVal) :- '_$builtin'(FILE_STAT).
file_writequoted(_File, _Term) :- '_$builtin'(FILE_WRITEQUOTED).
fast_ground(_Term) :- '_$builtin'(FAST_GROUND).

intern_string(_Str,_InternedStr) :- '_$builtin'(INTERN_STRING).
expand_filename(_FileName, _ExpandedFileName) :- '_$builtin'(EXPAND_FILENAME).
tilde_expand_filename(_FileName,_ExpandedFileName) :- '_$builtin'(TILDE_EXPAND_FILENAME).
is_absolute_filename(_FileName) :- '_$builtin'(IS_ABSOLUTE_FILENAME).
parse_filename(_FileName, _Dir, _Basename, _Extension) :- '_$builtin'(PARSE_FILENAME).

psc_env(_PSC, _Env) :- '_$builtin'(PSC_ENV).
psc_spy(_PSC, _Spy) :- '_$builtin'(PSC_SPY).
psc_tabled(_PSC, _Tabled) :- '_$builtin'(PSC_TABLED).

is_incomplete(_Tab,_SubgoalPtr,_PTCP,_SubgoalFrame):- '_$builtin'(IS_INCOMPLETE).
get_osp_breg(_Osp,_Breg):- '_$builtin'(GET_OSP_BREG).
cut_if_leader(_Call,_Osp,_Breg):- '_$builtin'(CUT_IF_LEADER).
get_ptcp(_PTCP) :- '_$builtin'(GET_PTCP).
get_subgoal_ptr(_Term, _SubgoalPtr) :- '_$builtin'(GET_SUBGOAL_PTR).
dereference_the_bucket(_Pair_Pointer, _Pair) :- '_$builtin'(DEREFERENCE_THE_BUCKET).
pair_psc(_Pair, _PSC) :- '_$builtin'(PAIR_PSC).
pair_next(_Pair, _Next_Pair) :- '_$builtin'(PAIR_NEXT).
next_bucket(_Bucket, _Next_Bucket) :- '_$builtin'(NEXT_BUCKET).

slg_not(_SubgoalPtr) :- '_$builtin'(SLG_NOT).

is_xwammode(_Flag) :- '_$builtin'(IS_XWAMMODE).
close_open_tables :- '_$builtin'(CLOSE_OPEN_TABLES).

file_function(_Function, _A, _B, _C, _D, _E, _F) :- '_$builtin'(FILE_FUNCTION).
slash(_Slash) :- '_$builtin'(SLASH_BUILTIN).

abolish_table_info :- '_$builtin'(ABOLISH_TABLE_INFO).
zero_out_profile :- '_$builtin'(ZERO_OUT_PROFILE).
write_out_profile :- '_$builtin'(WRITE_OUT_PROFILE).
assert_code_to_buff(_Clause,_Size) :- '_$builtin'(ASSERT_CODE_TO_BUFF).
assert_buff_to_clref(_Head,_NAri,_Prref,_AZ,_RInd,_HashTabSize,_Clref) :-
	'_$builtin'(ASSERT_BUFF_TO_CLREF).

file_read_canonical(_File,_Var,_Ret) :- '_$builtin'(FILE_READ_CANONICAL).
gen_retract_all(_Buff) :- '_$builtin'(GEN_RETRACT_ALL).
compiled_to_dynamic(_PSC,_NewPred) :- '_$builtin'(COMPILED_TO_DYNAMIC).
db_retract0(_Clause,_DontReclaim) :- '_$builtin'(DB_RETRACT0).
db_get_clause(_CC0,_CI,_CIL,_PrRef,_Head,_Failed,_Clause,_Type,_Entry) :- 
	'_$builtin'(DB_GET_CLAUSE).
db_build_prref(_PSC,_Tabled,_PrRef) :- '_$builtin'(DB_BUILD_PRREF).
db_remove_prref(_Prref) :- '_$builtin'(DB_REMOVE_PRREF).
db_reclaim0(_Clause,_Type) :- '_$builtin'(DB_RECLAIM0).

formatted_io(_OPnumber, _FileOrString,_Format,_ArgTerm,_RetCode) :-
	'_$builtin'(FORMATTED_IO).

trimcore :- '_$builtin'(TRIMCORE).

/* This is the builtin where people should put their private, experimental
   builtin code. SEE THE EXAMPLE IN emu/private_builtin.c to UNDERSTAND HOW 
   TO DO IT. Note: even though this is a single builtin, YOU CAN SIMULATE 
   ANY NUMBER OF BUILTINS WITH IT. */
private_builtin(_OpCode,_A1,_A2,_A3,_A4,_A5,_A6,_A7,_A8,_A9,_A10) :-
	'_$builtin'(PRIVATE_BUILTIN).

is_charlist(_List, _Size) :- '_$builtin'(IS_CHARLIST).
is_charlist(List) :- is_charlist(List, _).

oracle_query(_A, _B, _C, _D, _E, _F, _G) :- '_$builtin'(ORACLE_QUERY).
odbc_exec_query(_A, _B, _C, _D, _E) :- '_$builtin'(ODBC_EXEC_QUERY).

print_chat :- '_$builtin'(PRINT_CHAT).
print_ls :- '_$builtin'(PRINT_LS).
print_tr :- '_$builtin'(PRINT_TR).
print_heap(_X,_Y) :-'_$builtin'(PRINT_HEAP).
print_cp :- '_$builtin'(PRINT_CP).
print_regs :- '_$builtin'(PRINT_REGS).
print_all_stacks :- '_$builtin'(PRINT_ALL_STACKS).
expand_heap :- '_$builtin'(EXP_HEAP).
mark_heap(_) :- '_$builtin'(MARK_HEAP).
gc_heap :- '_$builtin'(GC_HEAP).
'$$findall_init'(_I,_C) :- '_$builtin'(FINDALL_INIT).
'$$findall_add'(_T,_I,_C) :- '_$builtin'(FINDALL_ADD).
'$$findall_get_solutions'(_L,_T,_I,_C) :- '_$builtin'(FINDALL_GET_SOLS).
socket_request(_ReqNumber,_Domain,_Sockfd,_Port,_Hostname,_Sockfptr,_Error) :-
	'_$builtin'(SOCKET_REQUEST).

/*======================================================================*/

conname(Con, Name) :-
	term_type(Con, Type),
	( Type =:= CS -> term_psc(Con, Psc), psc_name(Psc, Name)
	; Type =:= STRING -> Name = Con
	).

conpsc(Con, Psc) :-
	term_type(Con, Type),
	( Type =:= CS -> term_psc(Con, Psc)
	; Type =:= STRING -> psc_insert(Con, 0, Psc, 0)
	).

machine_file_exists(File) :- 
	sys_syscall(SYS_access, Res, File, 0), Res =:= 0.

/*======================================================================*/
/* Some other stuff for convenience here; in my opinion they should be  */
/* deleted from the system - kostis.                                    */
/*======================================================================*/

set_pil_on :- stat_set_flag(PIL_TRACE,1).
set_pil_off :- stat_set_flag(PIL_TRACE,0).
set_prof_off :- stat_set_flag(PROFFLAG,0).
set_prof_on(Level) :- stat_set_flag(PROFFLAG,Level).

/*********************************************************************/
/* The following predicates are not builtins.  	       	       	     */
/* Perhaps, we should find a better place for them -mk	      	     */
/*********************************************************************/


/* The following is extremely DIRTY and should be used very very	*/
/* cautiously!.  For the moment it is only used in symtab.P when the	*/
/* symbol that was inserted into the symbol table may be retracted and	*/
/* the count of the symbols has to remain the same.			*/

backtrackable_buff_set_word(Buff, Bytes, NewValue, _) :- 
	buff_set_word(Buff, Bytes, NewValue). 
backtrackable_buff_set_word(Buff, Bytes, _, OldValue) :- 
	buff_set_word(Buff, Bytes, OldValue), fail.


/* --------------------- end of file machine.P ------------------------ */

