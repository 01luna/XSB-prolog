/* File:      xcallxsb.P
** Author(s): David Warren, Ernie Johnson
** Contact:   xsb-contact@cs.sunysb.edu
** 
** Copyright (C) The Research Foundation of SUNY, 1997-1998
** 
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** $Id: xcallxsb.P,v 1.4 1999/03/30 16:25:52 kifer Exp $
** 
*/


:- c_callloop.



c_callloop :-
	repeat,
	'_$savecp'(Cp),			% to set abort cut point
	conset('_$abort_cutpoint', Cp),
	get_from_caller(Par,VarTerm,Command),
	(\+integer(Command)
	 ->	file_write(2,'C command error; must be an integer; is '),
		file_write(2,Command),
		file_nl(2),
		!,
		fail
	 ; Command =:= 0		/* call */
	 ->	excess_vars(Par, [], [], VarList),
		VarTerm =.. [ret|VarList],
		do_pcall(Par,VarTerm)
	 ; Command =:= 2	/* string_call */
	 ->	string_to_term(Par,Goal),
		excess_vars(Goal,[],[],VarList),
		VarTerm =.. [ret|VarList],
		do_pcall(Goal,VarTerm)
	 ; Command =:= 1	/* quit */
	 ->	!,fail
	 ; fail
	).

get_from_caller(_,_,_) :- halt.		% halt returns to caller

do_pcall(Call,VarTerm) :-
	'_$call'(Call),
	get_from_caller(Call,VarTerm,Command),
	(Command =:= 0		/* next */
	 ->	fail
	 ; Command =:= 1	/* close query */
	 ->	close_open_tables,
		!,fail
	).

% hidden version of call
'_$call'(Y) :- 
	'_$savecp'(C), 
	goal_cut_trans(Y,X,C),
	call_expose(X).

string_to_term(Atom,Goal) :-
	file_close(Atom),
	file_read_foe(Fp,Goal,_),
	file_close(Fp).
