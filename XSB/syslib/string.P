/* File:      string.P
** Author(s): Kostis Sagonas, Jiyang Xu
** Contact:   xsb-contact@cs.sunysb.edu
** 
** Copyright (C) The Research Foundation of SUNY, 1986, 1993-1998
** Copyright (C) ECRC, Germany, 1990
** 
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** $Id: string.P,v 1.13 1999/08/28 09:10:02 kostis Exp $
** 
*/

/*----------------------------------------------------------------------*/
/* NOTE: This file HAS TO be compiled with the "sysmod" option.		*/
/*----------------------------------------------------------------------*/

:- compiler_options([sysmod]).


%--- 
/* 
TLS 7/99 This version is linear rather than quadratic and seems
much faster than the old one (which I must confess to writing).  Also,
this is well-behaved for memory management since it no longer uses
str_cat or str_len.
*/
 
concat_atom(Atomlist,Atom):-
	atom_to_charlist(Atomlist,Charlist1),
	flatten(Charlist1,Charlist),
	atom_codes(Atom,Charlist).

atom_to_charlist([],[]).
atom_to_charlist([Atom|Rest],[List|Lrest]):- 
	atom(Atom),
	atom_codes(Atom,List),
	atom_to_charlist(Rest,Lrest).

%---
concat_atom(Atomlist,Sep,Atom):-
	atom(Sep),
	atom_codes(Sep,Slist),
	atom_to_charlist(Atomlist,Slist,Charlist1),
	flatten(Charlist1,Charlist),
	atom_codes(Atom,Charlist).

atom_to_charlist([],_,[]).
atom_to_charlist([Atom],_,[List]):- !,
	atom(Atom),
	atom_codes(Atom,List).
atom_to_charlist([Atom|Rest],Slist,[List,Slist|Lrest]):- 
	atom(Atom),
	atom_codes(Atom,List),
	atom_to_charlist(Rest,Slist,Lrest).

substring(String,From,To,Subst) :- substring(String,From,To,Subst).
string_substitute(String,SubstSpec,SubstList,ResultStr) :-
	string_substitute(String,SubstSpec,SubstList,ResultStr).
str_length(Str, Len) :- str_len(Str, Len).

str_cat(S1, S2, S3) :- str_cat(S1, S2, S3).
%% Only checks the first match
str_sub(S1, S2, Pos) :- str_sub(S1, S2, Pos).
str_sub(S1, S2) :- str_sub(S1, S2, _Pos).

/* ---------------------- end of file string.P ------------------------ */
