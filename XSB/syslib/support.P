/* File:      support.P
** Author(s): Spyros Hadjichristodoulou, Yury Puzis
** Contact:   xsb-contact@cs.sunysb.edu
** 
** Copyright (C) The Research Foundation of SUNY, 1993-1998, 2010
** 
** XSB is free software; you can redistribute it and/or modify it under the
** terms of the GNU Library General Public License as published by the Free
** Software Foundation; either version 2 of the License, or (at your option)
** any later version.
** 
** XSB is distributed in the hope that it will be useful, but WITHOUT ANY
** WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
** FOR A PARTICULAR PURPOSE.  See the GNU Library General Public License for
** more details.
** 
** You should have received a copy of the GNU Library General Public License
** along with XSB; if not, write to the Free Software Foundation,
** Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
**
** 
*/

/* The 'sysmod' flag NEEDS to be turned on for support.P to be
 * compiled successfully
 */
 
:- compiler_options([sysmod,xpp_on]).
#include "builtin.h"
#include "support_builtin.h"

/*======================================================================*/
/*                      Support Graph Builtin                           */
/*======================================================================*/

support_builtin(_OpCode,_A1,_A2,_A3,_A4,_A5,_A6,_A7,_A8,_A9,_A10) :-
	'_$builtin'(SUPPORT_BUILTIN).

increm_assert(Term) :- incr_t_assert(Term, _Flag).
return_e(ICall,X):- support_builtin(RETURN_E,ICall,X,_,_,_,_,_,_,_,_).
set_mode(X):- support_builtin(SET_MODE,X,_,_,_,_,_,_,_,_,_).
get_dirty_count(Call,DC):- support_builtin(GET_DIRTY_COUNT,Call,DC,_,_,_,_,_,_,_,_).
update(X) :- support_builtin(UPDATE,X,_,_,_,_,_,_,_,_,_).
enter_delta_minus(SF):- support_builtin(ENTER_DELTA_MINUS,SF,_,_,_,_,_,_,_,_,_).
get_mode(X,Y,Z):- support_builtin(INCR_TRIE_DISPOSE,X,Y,Z,_,_,_,_,_,_,_).

/*======================================================================*/
/*                         Helper Predicates                            */
/*======================================================================*/
incr_t_assert_exit(Clause) :- abort(('Illegal Term in trie_assert:',Clause)).


incr_t_assert(Clause, Flag) :- check_assert(Clause,'increm_assert/1'),
	incr_t_assert_1(Clause, Flag).

incr_t_assert_1((Head :- Body), _Flag) :- incr_t_assert_exit((Head :- Body)).
incr_t_assert_1(Clause, Flag) :- 
	conpsc(Clause, PSC),
	psc_arity(PSC, Arity),
	convert_to_dyna(Clause,Prref,'increm_assert/1'),
	incr_trie_assert_builtin(Clause,PSC,Arity,Prref,Flag).

incr_trie_assert_builtin(_Clause,_PSC,_Arity,_Prref,_Flag) :-
	support_builtin(INCR_ASSERT,_Clause,_PSC,_Arity,_Prref,_Flag,_,_,_,_,_).

/* ---------------------- end of file support.P  ------------------------ */

/* Make sure to also do the following changes:
 * 1. define "support_builtin" as inlined in cmplib/builtin.P,
 * 2. define all the pseudo-builtins as "standard_symbol"s in
 * syslib/std_xsb.P
 * 3. don't forget to make the appropriate changes in syslib/Makefile
 */