:- import incr_assert/1,incr_retractall/1,incr_assert_inval/1,
	  incr_table_update/0,incr_retract_inval/1 from increval.

test:- test1.
test:- test2.

% direct dependency
test1:- p(X,Y),writeln(first_p(X,Y)),fail.
test1:- incr_assert(q(d,4)),fail.
test1:- p(X,Y),writeln(second_p(X,Y)),fail.
test1:- incr_retractall(q(a,_X)),fail.
test1:- p(X,Y),writeln(third_p(X,Y)),fail.
test1:- incr_retract_inval(q(b,_X)),fail.
test1:- get_residual(p(X,Y),_),writeln(fourth_p(X,Y)),fail.
test1:- incr_table_update,get_residual(p(X,Y),_),writeln(fifth_p(X,Y)),fail.
test1:- incr_assert_inval(q(e,2)),fail.
test1:- get_residual(p(X,Y),_),writeln(sixth_p(X,Y)),fail.
test1:- incr_table_update,get_residual(p(X,Y),_),writeln(seventh_p(X,Y)),fail.
test1.

% transitive dependency
test2:- n(X,Y),writeln(first_n(X,Y)),fail.
test2:- incr_assert(q(d,4)),fail.
test2:- n(X,Y),writeln(second_n(X,Y)),fail.
test2:- incr_retractall(q(a,_X)),fail.
test2:- n(X,Y),writeln(third_n(X,Y)),fail.
test2:- incr_retract_inval(q(b,_X)),fail.
test2:- get_residual(n(X,Y),_),writeln(fourth_n(X,Y)),fail.
test2:- incr_table_update,get_residual(n(X,Y),_),writeln(fifth_n(X,Y)),fail.
test2:- incr_assert_inval(q(e,2)),fail.
test2:- get_residual(n(X,Y),_),writeln(sixth_n(X,Y)),fail.
test2:- incr_table_update,get_residual(n(X,Y),_),writeln(seventh_n(X,Y)),fail.
test2.


%:- table p/2 as incremental.
:- table p/2.
:- use_incremental_tabling p/2.

p(X,Y) :- q(X,Y),Y =< 5.

:- table n/2.
:- use_incremental_tabling n/2.
n(X,Y) :- p(X,Y),Y < 5.

:- use_incremental_dynamic q/2.
:- dynamic q/2.
q(a,1).
q(b,3).
q(c,5).
q(d,7).


end_of_file.
