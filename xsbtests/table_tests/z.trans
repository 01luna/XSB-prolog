:- import set_unify/2 from set_unify.
:- import set_reduce/2 from set_reduce.
:- import numbervars/1 from numbervars.


%---------------- Transformed program ----------------------

qsort__1([list],[list]).
qsort__1(_h463,_h465) :- 
        [list|_h137] = _h467, _h155 = _h469, 
        partition(_h137,_h193,_h207,_h221),
        qsort(_h207,_h259),
        qsort(_h221,_h297),
        append(_h259,[list|_h297],_h155),
        ArgsOut = [_h463,_h465],
        set_reduce([_h467,_h469], ArgsOut),
        valid_types(ArgsOut).
partition__1([list],[_h141],[list],[list]).
partition__1(_h375,_h377,_h379,_h381) :- 
        [list|_h137] = _h383, _h155 = _h385, [list|_h181] = _h387, _h199 = _h389, 
        'my =<'(_h217,_h155),
        partition(_h137,_h155,_h181,_h199),
        ArgsOut = [_h375,_h377,_h379,_h381],
        set_reduce([_h383,_h385,_h387,_h389], ArgsOut),
        valid_types(ArgsOut).
partition__1(_h375,_h377,_h379,_h381) :- 
        [list|_h137] = _h383, _h155 = _h385, _h169 = _h387, [list|_h195] = _h389, 
        'my >'(_h217,_h155),
        partition(_h137,_h155,_h169,_h195),
        ArgsOut = [_h375,_h377,_h379,_h381],
        set_reduce([_h383,_h385,_h387,_h389], ArgsOut),
        valid_types(ArgsOut).
append__1([list],[_h141],[_h141]).
append__1(_h298,_h300,_h302) :- 
        [list|_h137] = _h304, _h155 = _h306, [list|_h181] = _h308, 
        append(_h137,_h155,_h181),
        ArgsOut = [_h298,_h300,_h302],
        set_reduce([_h304,_h306,_h308], ArgsOut),
        valid_types(ArgsOut).
test :- abolish_all_tables, fail.
test :- cputime(T0), tp, cputime(T1), T is T1-T0, nl,
   write('Iterate Tp without meta-interpretation took: '),
   write(T), writeln(' secs'), nl, fail.
test :- writeln('=========== Result is ================'),
        nl, show_facts.

unify_sets([],[]).
unify_sets([A|As],[B|Bs]) :- 
       set_unify(A,B), unify_sets(As,Bs).

valid_types([]).
valid_types([T|Ts]) :- T\==[], valid_types(Ts).


%---------------- Definitions of tabled preds --------------

:- table append__1/3.
:- table partition__1/4.
:- table qsort__1/2.

append(_h120,_h122,_h124) :- 
        append__1(_h126,_h128,_h130),
        unify_sets([_h120,_h122,_h124], [_h126,_h128,_h130]).
partition(_h120,_h122,_h124,_h126) :- 
        partition__1(_h128,_h130,_h132,_h134),
        unify_sets([_h120,_h122,_h124,_h126], [_h128,_h130,_h132,_h134]).
qsort(_h120,_h122) :- 
        qsort__1(_h124,_h126),
        unify_sets([_h120,_h122], [_h124,_h126]).

%---------------- Tp ---------------------------------------

tp :- append__1(_h121,_h123,_h125), fail.
tp :- partition__1(_h121,_h123,_h125,_h127), fail.
tp :- qsort__1(_h121,_h123), fail.
tp.


%---------------- Builtin Preds ----------------------------

'my ='(X1,X2) :- 'my =_1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my \=='(X1,X2) :- 'my \==__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my is'(X1,X2) :- 'my is__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my <'(X1,X2) :- 'my <__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my >'(X1,X2) :- 'my >__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my >='(X1,X2) :- 'my >=__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my =<'(X1,X2) :- 'my =<__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my =:='(X1,X2) :- 'my =:=__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my =\='(X1,X2) :- 'my =\=__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).

:- table 'my =_1'/2, 'my \==__1'/2, 'my is__1'/2.
:- table 'my <__1'/2, 'my >__1'/2, 'my >__1'/2.
:- table 'my =<__1'/2, 'my =:=__1'/2, 'my =\=__1'/2.
'my =_1'(X,X).
'my \==__1'(_,_).
'my is__1'(num,num).
'my <__1'(num,num).
'my >__1'(num,num).
'my >=__1'(num,num).
'my =<__1'(num,num).
'my =:=__1'(num,num).
'my =\=__1'(num,num).


%---------------- Show Result ------------------------------

show_facts :- append__1(_h122,_h123,_h124),
              numbervars(append__1(_h122,_h123,_h124)),
              write(append__1(_h122,_h123,_h124)), nl, fail.
show_facts :- partition__1(_h122,_h123,_h124,_h125),
              numbervars(partition__1(_h122,_h123,_h124,_h125)),
              write(partition__1(_h122,_h123,_h124,_h125)), nl, fail.
show_facts :- qsort__1(_h122,_h123),
              numbervars(qsort__1(_h122,_h123)),
              write(qsort__1(_h122,_h123)), nl, fail.
show_facts.
