:- import set_unify/2 from set_unify.
:- import set_reduce/2 from set_reduce.
:- import numbervars/1 from numbervars.


%---------------- Transformed program ----------------------

qsort__1([list],[list]).
qsort__1(_h460,_h462) :- 
        [list|_h134] = _h464, _h152 = _h466, 
        partition(_h134,_h190,_h204,_h218),
        qsort(_h204,_h256),
        qsort(_h218,_h294),
        append(_h256,[list|_h294],_h152),
        ArgsOut = [_h460,_h462],
        set_reduce([_h464,_h466], ArgsOut),
        valid_types(ArgsOut).
partition__1([list],[_h138],[list],[list]).
partition__1(_h372,_h374,_h376,_h378) :- 
        [list|_h134] = _h380, _h152 = _h382, [list|_h178] = _h384, _h196 = _h386, 
        'my =<'(_h214,_h152),
        partition(_h134,_h152,_h178,_h196),
        ArgsOut = [_h372,_h374,_h376,_h378],
        set_reduce([_h380,_h382,_h384,_h386], ArgsOut),
        valid_types(ArgsOut).
partition__1(_h372,_h374,_h376,_h378) :- 
        [list|_h134] = _h380, _h152 = _h382, _h166 = _h384, [list|_h192] = _h386, 
        'my >'(_h214,_h152),
        partition(_h134,_h152,_h166,_h192),
        ArgsOut = [_h372,_h374,_h376,_h378],
        set_reduce([_h380,_h382,_h384,_h386], ArgsOut),
        valid_types(ArgsOut).
append__1([list],[_h138],[_h138]).
append__1(_h295,_h297,_h299) :- 
        [list|_h134] = _h301, _h152 = _h303, [list|_h178] = _h305, 
        append(_h134,_h152,_h178),
        ArgsOut = [_h295,_h297,_h299],
        set_reduce([_h301,_h303,_h305], ArgsOut),
        valid_types(ArgsOut).
test :- abolish_all_tables, fail.
test :- cputime(T0), tp, cputime(T1), T is T1-T0, nl,
   write('Iterate Tp without meta-interpretation took: '),
   write(T), writeln(' secs'), nl, fail.
test :- writeln('=========== Result is ================'),
        nl, show_facts.

unify_sets([],[]).
unify_sets([A|As],[B|Bs]) :- 
       set_unify(A,B), unify_sets(As,Bs).

valid_types([]).
valid_types([T|Ts]) :- T\==[], valid_types(Ts).


%---------------- Definitions of tabled preds --------------

:- table append__1/3.
:- table partition__1/4.
:- table qsort__1/2.

append(_h117,_h119,_h121) :- 
        append__1(_h123,_h125,_h127),
        unify_sets([_h117,_h119,_h121], [_h123,_h125,_h127]).
partition(_h117,_h119,_h121,_h123) :- 
        partition__1(_h125,_h127,_h129,_h131),
        unify_sets([_h117,_h119,_h121,_h123], [_h125,_h127,_h129,_h131]).
qsort(_h117,_h119) :- 
        qsort__1(_h121,_h123),
        unify_sets([_h117,_h119], [_h121,_h123]).

%---------------- Tp ---------------------------------------

tp :- append__1(_h118,_h120,_h122), fail.
tp :- partition__1(_h118,_h120,_h122,_h124), fail.
tp :- qsort__1(_h118,_h120), fail.
tp.


%---------------- Builtin Preds ----------------------------

'my ='(X1,X2) :- 'my =_1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my \=='(X1,X2) :- 'my \==__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my is'(X1,X2) :- 'my is__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my <'(X1,X2) :- 'my <__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my >'(X1,X2) :- 'my >__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my >='(X1,X2) :- 'my >=__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my =<'(X1,X2) :- 'my =<__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my =:='(X1,X2) :- 'my =:=__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my =\='(X1,X2) :- 'my =\=__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).

:- table 'my =_1'/2, 'my \==__1'/2, 'my is__1'/2.
:- table 'my <__1'/2, 'my >__1'/2, 'my >__1'/2.
:- table 'my =<__1'/2, 'my =:=__1'/2, 'my =\=__1'/2.
'my =_1'(X,X).
'my \==__1'(_,_).
'my is__1'(num,num).
'my <__1'(num,num).
'my >__1'(num,num).
'my >=__1'(num,num).
'my =<__1'(num,num).
'my =:=__1'(num,num).
'my =\=__1'(num,num).


%---------------- Show Result ------------------------------

show_facts :- append__1(_h119,_h120,_h121),
              numbervars(append__1(_h119,_h120,_h121)),
              write(append__1(_h119,_h120,_h121)), nl, fail.
show_facts :- partition__1(_h119,_h120,_h121,_h122),
              numbervars(partition__1(_h119,_h120,_h121,_h122)),
              write(partition__1(_h119,_h120,_h121,_h122)), nl, fail.
show_facts :- qsort__1(_h119,_h120),
              numbervars(qsort__1(_h119,_h120)),
              write(qsort__1(_h119,_h120)), nl, fail.
show_facts.
