:- import set_unify/2 from set_unify.
:- import set_reduce/2 from set_reduce.
:- import numbervars/1 from numbervars.


%---------------- Transformed program ----------------------

qsort__1([list],[list]).
qsort__1(_h449,_h451) :- 
        [list|_h126] = _h453, _h144 = _h455, 
        partition(_h126,_h182,_h196,_h210),
        qsort(_h196,_h248),
        qsort(_h210,_h286),
        append(_h248,[list|_h286],_h144),
        ArgsOut = [_h449,_h451],
        set_reduce([_h453,_h455], ArgsOut),
        valid_types(ArgsOut).
partition__1([list],[_h130],[list],[list]).
partition__1(_h364,_h366,_h368,_h370) :- 
        [list|_h126] = _h372, _h144 = _h374, [list|_h170] = _h376, _h188 = _h378, 
        'my =<'(_h206,_h144),
        partition(_h126,_h144,_h170,_h188),
        ArgsOut = [_h364,_h366,_h368,_h370],
        set_reduce([_h372,_h374,_h376,_h378], ArgsOut),
        valid_types(ArgsOut).
partition__1(_h364,_h366,_h368,_h370) :- 
        [list|_h126] = _h372, _h144 = _h374, _h158 = _h376, [list|_h184] = _h378, 
        'my >'(_h206,_h144),
        partition(_h126,_h144,_h158,_h184),
        ArgsOut = [_h364,_h366,_h368,_h370],
        set_reduce([_h372,_h374,_h376,_h378], ArgsOut),
        valid_types(ArgsOut).
append__1([list],[_h130],[_h130]).
append__1(_h287,_h289,_h291) :- 
        [list|_h126] = _h293, _h144 = _h295, [list|_h170] = _h297, 
        append(_h126,_h144,_h170),
        ArgsOut = [_h287,_h289,_h291],
        set_reduce([_h293,_h295,_h297], ArgsOut),
        valid_types(ArgsOut).
test :- abolish_all_tables, fail.
test :- cputime(T0), tp, cputime(T1), T is T1-T0, nl,
   write('Iterate Tp without meta-interpretation took: '),
   write(T), writeln(' secs'), nl, fail.
test :- writeln('=========== Result is ================'),
        nl, show_facts.

unify_sets([],[]).
unify_sets([A|As],[B|Bs]) :- 
       set_unify(A,B), unify_sets(As,Bs).

valid_types([]).
valid_types([T|Ts]) :- T\==[], valid_types(Ts).


%---------------- Definitions of tabled preds --------------

:- table append__1/3.
:- table partition__1/4.
:- table qsort__1/2.

append(_h109,_h111,_h113) :- 
        append__1(_h115,_h117,_h119),
        unify_sets([_h109,_h111,_h113], [_h115,_h117,_h119]).
partition(_h109,_h111,_h113,_h115) :- 
        partition__1(_h117,_h119,_h121,_h123),
        unify_sets([_h109,_h111,_h113,_h115], [_h117,_h119,_h121,_h123]).
qsort(_h109,_h111) :- 
        qsort__1(_h113,_h115),
        unify_sets([_h109,_h111], [_h113,_h115]).

%---------------- Tp ---------------------------------------

tp :- append__1(_h110,_h112,_h114), fail.
tp :- partition__1(_h110,_h112,_h114,_h116), fail.
tp :- qsort__1(_h110,_h112), fail.
tp.


%---------------- Builtin Preds ----------------------------

'my ='(X1,X2) :- 'my =_1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my \=='(X1,X2) :- 'my \==__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my is'(X1,X2) :- 'my is__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my <'(X1,X2) :- 'my <__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my >'(X1,X2) :- 'my >__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my >='(X1,X2) :- 'my >=__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my =<'(X1,X2) :- 'my =<__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my =:='(X1,X2) :- 'my =:=__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).
'my =\='(X1,X2) :- 'my =\=__1'(Y1,Y2), unify_sets([X1,X2],[Y1,Y2]).

:- table 'my =_1'/2, 'my \==__1'/2, 'my is__1'/2.
:- table 'my <__1'/2, 'my >__1'/2, 'my >__1'/2.
:- table 'my =<__1'/2, 'my =:=__1'/2, 'my =\=__1'/2.
'my =_1'(X,X).
'my \==__1'(_,_).
'my is__1'(num,num).
'my <__1'(num,num).
'my >__1'(num,num).
'my >=__1'(num,num).
'my =<__1'(num,num).
'my =:=__1'(num,num).
'my =\=__1'(num,num).


%---------------- Show Result ------------------------------

show_facts :- append__1(_h111,_h112,_h113),
              numbervars(append__1(_h111,_h112,_h113)),
              write(append__1(_h111,_h112,_h113)), nl, fail.
show_facts :- partition__1(_h111,_h112,_h113,_h114),
              numbervars(partition__1(_h111,_h112,_h113,_h114)),
              write(partition__1(_h111,_h112,_h113,_h114)), nl, fail.
show_facts :- qsort__1(_h111,_h112),
              numbervars(qsort__1(_h111,_h112)),
              write(qsort__1(_h111,_h112)), nl, fail.
show_facts.
