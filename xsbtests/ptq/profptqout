-------------------------------------------------------
 running testptq.csh 
-------------------------------------------------------
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^about(^\B.\C.Ex D(*B(D) /\ *C(D))(^unicorn))(^\E.talk*(*E)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.about(^\G.*G(F))(^\H.talk*(*H))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^about(^\H.*H(F))(^\I.talk*(*I)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^about(^\H.*H(D))(^\I.talk*(*I)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^about(^\D.\E.Ex F(*D(F) /\ *E(F))(^unicorn))(^\G.talk*(*G))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.about(^\I.*I(H))(^\J.talk*(*J))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^about(^\F.*F(D))(^\G.talk*(*G))))
CPU Time: 0.589

yes
| ?- getpvar 0 14673 
getpval 1 725 
getstrv 2 12 
gettval 3 252 
getcon 4 463 
getnil 5 517 
getstr 6 1639 
getlist 7 656 
unipvar 8 401 
unipval 9 57 
unitvar a 814 
unitval b 208 
unicon c 45 
uninil d 21 
getnumcon e 307 
putnumcon f 7307 
putpvar 10 6623 
putpval 11 8033 
puttvar 12 106 
putstrv 13 16 
putcon 14 672 
putnil 15 8 
putstr 16 564 
putlist 17 23 
bldpvar 18 85 
bldpval 19 149 
bldtvar 1a 134 
bldtval 1b 566 
bldcon 1c 52 
bldnil 1d 21 
uninumcon 1e 0 
bldnumcon 1f 19 
getlist_tvar_tvar 48 86 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 894 
retrymeelse a1 34 
trustmeelsefail a2 635 
try a3 1839 
retry a4 2421 
trust a5 1430 
getpbreg a6 278 
gettbreg a7 1655 
putpbreg a8 311 
puttbreg a9 367 
jumptbreg aa 224 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 312 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 666 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 21 
tabletry be 39 
addtotable bf 36 
tabletrust c1 9 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 25 
return_solution c8 44 
check_complete c9 9 
return_completion ca 0 
complete_execute cb 0 
use_table cd 36 
movreg d1 1331 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 900 
subreg d8 5538 
mulreg d9 131 
divreg da 2 
idivreg db 234 
putdval e0 15205 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 3256 
allocate e9 6846 
deallocate ea 3649 
proceed eb 2482 
execute ec 2448 
unexeci ed 0 
executev ee 0 
calld ef 876 
jump f0 67 
jumpz f1 19 
jumpnz f2 4325 
jumplt f3 24 
jumple f4 860 
jumpgt f5 133 
jumpge f6 0 
cases f7 0 
fail f8 2636 
noop f9 308 
halt fa 0 
builtin fb 6192 
unifunc fc 0 
userfunc fd 0 
Total insts 114015
_______________builtins_______________
0 0 
1 35 
2 670 
3 22 
4 15 
5 1 
6 4 
7 0 
8 0 
9 0 
10 127 
11 681 
12 2802 
13 55 
14 1 
15 500 
16 0 
17 537 
18 11 
19 8 
20 26 
21 111 
22 32 
23 98 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 396 
50 6 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 21
	 number of use_tables 45
	 number of new_lookups 46
	 number of return_solutions 44
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 36
	 number of variant checks 117

yes
| ?- 
End XSB (Beta) (cputime 1.54s, elapsetime 3.96s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^m)(^\B.\C.believe_that*(B)(C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^unicorn)(^\G.\H.*H(^j)(^\I.\J.*J(I)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(G))) /\ \O.*O(I)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(G)))))))
top level solution\A.*A(^m)(^\B.\C.believe_that*(B)(C)(^\D.*D(^j)(^\E.\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn)(^\I.\J.*J(E)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(I))) /\ \O.*O(E)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(I)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.believe_that*(E)(F)(^\G.\H.Ex I(*G(I) /\ *H(I))(^unicorn)(^\J.\K.*K(D)(^\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(J))) /\ \P.*P(D)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(J)))))(B)))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(^j)(^\J.\K.*K(J)(^\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(F))) /\ \P.*P(J)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(F)))))(B)))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.*H(^j)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(I)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))) /\ \Q.*Q(I)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))(G))(B)))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(I))) /\ \Q.*Q(D)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(I))))(E))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F)))))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(F)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D)))))) /\ \Q.*Q(F)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.believe_that*(H)(I)(^\J.*J(B)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(F))) /\ \O.*O(B)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(F)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.believe_that*(H)(I)(^\J.*J(F)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(D))) /\ \O.*O(F)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(D)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(B)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^unicorn)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(D)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(J))) /\ \R.*R(D)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(J))))(F)))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^unicorn)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(B)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(J))) /\ \R.*R(B)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(J))))(F)))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.*I(^j)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(F))) /\ \R.*R(J)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(F))))(H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(F)(^\H.\I.*I(^j)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(D))) /\ \R.*R(J)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(D))))(H)))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^unicorn)(^\K.\L.*L(D)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(K))) /\ \Q.*Q(D)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(K))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^unicorn)(^\K.\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(K))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(K))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.believe_that*(H)(I)(^\J.*J(^j)(^\K.\L.*L(K)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))) /\ \Q.*Q(K)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(F)(^\H.\I.believe_that*(H)(I)(^\J.*J(^j)(^\K.\L.*L(K)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))) /\ \Q.*Q(K)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(H))) /\ \Q.*Q(D)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(H))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(D)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(H))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(H))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))) /\ \Q.*Q(H)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(F)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))) /\ \Q.*Q(H)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(F)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))) /\ \Q.*Q(F)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(H))))) /\ \Q.*Q(D)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(H))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(D)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(H))))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(H))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))))) /\ \Q.*Q(H)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(F)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))))) /\ \Q.*Q(H)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(F)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))))) /\ \Q.*Q(F)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.believe_that*(H)(I)(^\J.*J(B)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(F))))) /\ \O.*O(B)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.believe_that*(H)(I)(^\J.*J(F)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(D))))) /\ \O.*O(F)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(D)))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn)(^\I.\J.*J(^j)(^\K.\L.*L(K)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(I))) /\ \Q.*Q(K)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(I))))))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^j)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^unicorn)(^\K.\L.*L(G)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(K))) /\ \Q.*Q(G)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(K))))))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.*E(^j)(^\F.\G.\H.believe_that*(G)(H)(^\I.\J.Ex K(*I(K) /\ *J(K))(^unicorn)(^\L.\M.*M(F)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(L))) /\ \R.*R(F)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(L)))))(D))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(^j)(^\L.\M.*M(L)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(H))) /\ \R.*R(L)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(H)))))(D))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.*J(^j)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(K)(^\O.\P.*O(^\Q.find*(*Q)(*P))(^\R.*R(H))) /\ \S.*S(K)(^\T.\U.*T(^\V.eat*(*V)(*U))(^\W.*W(H))))(I))(D))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.*E(^j)(^\F.\G.\H.\I.Ex J(*H(J) /\ *I(J))(^unicorn)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(F)(^\O.\P.*O(^\Q.find*(*Q)(*P))(^\R.*R(K))) /\ \S.*S(F)(^\T.\U.*T(^\V.eat*(*V)(*U))(^\W.*W(K))))(G))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.believe_that*(F)(G)(^\H.*H(^j)(^\I.\J.*J(I)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(D))) /\ \O.*O(I)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(D)))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn)(^\I.\J.*J(B)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(I))) /\ \O.*O(B)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(I)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(H)(^\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(D))) /\ \P.*P(H)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(D))))(F))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(B)(^\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(H))) /\ \P.*P(B)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(H))))(D))))
CPU Time: 8.72

yes
| ?- getpvar 0 200156 
getpval 1 9398 
getstrv 2 22 
gettval 3 1712 
getcon 4 4122 
getnil 5 6390 
getstr 6 21586 
getlist 7 7197 
unipvar 8 4386 
unipval 9 874 
unitvar a 8073 
unitval b 1735 
unicon c 123 
uninil d 36 
getnumcon e 3678 
putnumcon f 99911 
putpvar 10 91337 
putpval 11 102191 
puttvar 12 865 
putstrv 13 271 
putcon 14 7930 
putnil 15 13 
putstr 16 4766 
putlist 17 38 
bldpvar 18 1089 
bldpval 19 1496 
bldtvar 1a 1300 
bldtval 1b 4823 
bldcon 1c 369 
bldnil 1d 36 
uninumcon 1e 0 
bldnumcon 1f 34 
getlist_tvar_tvar 48 1198 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 12732 
retrymeelse a1 330 
trustmeelsefail a2 9852 
try a3 25569 
retry a4 34614 
trust a5 19952 
getpbreg a6 2881 
gettbreg a7 25401 
putpbreg a8 3397 
puttbreg a9 5969 
jumptbreg aa 2080 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 2641 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 6289 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 203 
tableretry bd 155 
tabletry be 519 
addtotable bf 376 
tabletrust c1 53 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 283 
return_solution c8 725 
check_complete c9 53 
return_completion ca 0 
complete_execute cb 0 
use_table cd 472 
movreg d1 14781 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 9619 
subreg d8 80543 
mulreg d9 1894 
divreg da 2 
idivreg db 3740 
putdval e0 211180 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 43082 
allocate e9 96826 
deallocate ea 48877 
proceed eb 30947 
execute ec 33354 
unexeci ed 0 
executev ee 0 
calld ef 12525 
jump f0 134 
jumpz f1 24 
jumpnz f2 64062 
jumplt f3 24 
jumple f4 12059 
jumpgt f5 1241 
jumpge f6 0 
cases f7 0 
fail f8 38037 
noop f9 3418 
halt fa 0 
builtin fb 86649 
unifunc fc 0 
userfunc fd 0 
Total insts 1534719
_______________builtins_______________
0 0 
1 613 
2 10510 
3 27 
4 20 
5 1 
6 4 
7 0 
8 0 
9 0 
10 1915 
11 10526 
12 40344 
13 1498 
14 1 
15 7497 
16 0 
17 7535 
18 11 
19 13 
20 52 
21 181 
22 58 
23 172 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 5606 
50 11 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 151
	 number of use_tables 491
	 number of new_lookups 434
	 number of return_solutions 725
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 376
	 number of variant checks 10323

yes
| ?- 
End XSB (Beta) (cputime 9.70s, elapsetime 13.22s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^m)(^\B.\C.believe_that*(B)(C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^unicorn)(^\G.\H.*H(^j)(^\I.\J.*J(I)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(G))) /\ \O.*O(I)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(G)))))))
top level solution\A.*A(^m)(^\B.\C.believe_that*(B)(C)(^\D.*D(^j)(^\E.\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn)(^\I.\J.*J(E)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(I))) /\ \O.*O(E)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(I)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.believe_that*(E)(F)(^\G.\H.Ex I(*G(I) /\ *H(I))(^unicorn)(^\J.\K.*K(D)(^\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(J))) /\ \P.*P(D)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(J)))))(B)))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(^j)(^\J.\K.*K(J)(^\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(F))) /\ \P.*P(J)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(F)))))(B)))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.*H(^j)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(I)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))) /\ \Q.*Q(I)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))(G))(B)))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(I))) /\ \Q.*Q(D)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(I))))(E))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F)))))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(F)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D)))))) /\ \Q.*Q(F)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.believe_that*(H)(I)(^\J.*J(B)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(F))) /\ \O.*O(B)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(F)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.believe_that*(H)(I)(^\J.*J(F)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(D))) /\ \O.*O(F)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(D)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(B)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^unicorn)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(D)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(J))) /\ \R.*R(D)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(J))))(F)))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^unicorn)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(B)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(J))) /\ \R.*R(B)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(J))))(F)))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.*I(^j)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(F))) /\ \R.*R(J)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(F))))(H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(F)(^\H.\I.*I(^j)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(D))) /\ \R.*R(J)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(D))))(H)))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^unicorn)(^\K.\L.*L(D)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(K))) /\ \Q.*Q(D)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(K))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^unicorn)(^\K.\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(K))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(K))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.believe_that*(H)(I)(^\J.*J(^j)(^\K.\L.*L(K)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))) /\ \Q.*Q(K)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(F)(^\H.\I.believe_that*(H)(I)(^\J.*J(^j)(^\K.\L.*L(K)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))) /\ \Q.*Q(K)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(H))) /\ \Q.*Q(D)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(H))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(D)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(H))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(H))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))) /\ \Q.*Q(H)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(F)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))) /\ \Q.*Q(H)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(F)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))) /\ \Q.*Q(F)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(H))))) /\ \Q.*Q(D)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(H))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(D)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(H))))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(H))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))))) /\ \Q.*Q(H)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(F)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))))) /\ \Q.*Q(H)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(F))))) /\ \Q.*Q(B)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(F))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(F)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(D))))) /\ \Q.*Q(F)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(D))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.believe_that*(H)(I)(^\J.*J(B)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(F))))) /\ \O.*O(B)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.believe_that*(H)(I)(^\J.*J(F)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(D))))) /\ \O.*O(F)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(D)))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn)(^\I.\J.*J(^j)(^\K.\L.*L(K)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(I))) /\ \Q.*Q(K)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(I))))))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^j)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^unicorn)(^\K.\L.*L(G)(^\M.\N.*M(^\O.find*(*O)(*N))(^\P.*P(K))) /\ \Q.*Q(G)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(K))))))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.*E(^j)(^\F.\G.\H.believe_that*(G)(H)(^\I.\J.Ex K(*I(K) /\ *J(K))(^unicorn)(^\L.\M.*M(F)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(L))) /\ \R.*R(F)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(L)))))(D))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(^j)(^\L.\M.*M(L)(^\N.\O.*N(^\P.find*(*P)(*O))(^\Q.*Q(H))) /\ \R.*R(L)(^\S.\T.*S(^\U.eat*(*U)(*T))(^\V.*V(H)))))(D))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.*J(^j)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(K)(^\O.\P.*O(^\Q.find*(*Q)(*P))(^\R.*R(H))) /\ \S.*S(K)(^\T.\U.*T(^\V.eat*(*V)(*U))(^\W.*W(H))))(I))(D))))
top level solution\A.*A(^m)(^\B.\C.*C(B)(^\D.\E.*E(^j)(^\F.\G.\H.\I.Ex J(*H(J) /\ *I(J))(^unicorn)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(F)(^\O.\P.*O(^\Q.find*(*Q)(*P))(^\R.*R(K))) /\ \S.*S(F)(^\T.\U.*T(^\V.eat*(*V)(*U))(^\W.*W(K))))(G))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.believe_that*(F)(G)(^\H.*H(^j)(^\I.\J.*J(I)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(D))) /\ \O.*O(I)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(D)))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn)(^\I.\J.*J(B)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(I))) /\ \O.*O(B)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(I)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(H)(^\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(D))) /\ \P.*P(H)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(D))))(F))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(B)(^\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(H))) /\ \P.*P(B)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(H))))(D))))
CPU Time: 8.611

yes
| ?- getpvar 0 200156 
getpval 1 9398 
getstrv 2 22 
gettval 3 1712 
getcon 4 4122 
getnil 5 6390 
getstr 6 21586 
getlist 7 7197 
unipvar 8 4386 
unipval 9 874 
unitvar a 8073 
unitval b 1735 
unicon c 123 
uninil d 36 
getnumcon e 3678 
putnumcon f 99911 
putpvar 10 91337 
putpval 11 102191 
puttvar 12 865 
putstrv 13 271 
putcon 14 7930 
putnil 15 13 
putstr 16 4766 
putlist 17 38 
bldpvar 18 1089 
bldpval 19 1496 
bldtvar 1a 1300 
bldtval 1b 4823 
bldcon 1c 369 
bldnil 1d 36 
uninumcon 1e 0 
bldnumcon 1f 34 
getlist_tvar_tvar 48 1198 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 12732 
retrymeelse a1 330 
trustmeelsefail a2 9852 
try a3 25569 
retry a4 34614 
trust a5 19952 
getpbreg a6 2881 
gettbreg a7 25401 
putpbreg a8 3397 
puttbreg a9 5969 
jumptbreg aa 2080 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 2641 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 6289 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 203 
tableretry bd 155 
tabletry be 519 
addtotable bf 376 
tabletrust c1 53 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 283 
return_solution c8 725 
check_complete c9 53 
return_completion ca 0 
complete_execute cb 0 
use_table cd 472 
movreg d1 14781 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 9619 
subreg d8 80543 
mulreg d9 1894 
divreg da 2 
idivreg db 3740 
putdval e0 211180 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 43082 
allocate e9 96826 
deallocate ea 48877 
proceed eb 30947 
execute ec 33354 
unexeci ed 0 
executev ee 0 
calld ef 12525 
jump f0 134 
jumpz f1 24 
jumpnz f2 64062 
jumplt f3 24 
jumple f4 12059 
jumpgt f5 1241 
jumpge f6 0 
cases f7 0 
fail f8 38037 
noop f9 3418 
halt fa 0 
builtin fb 86649 
unifunc fc 0 
userfunc fd 0 
Total insts 1534719
_______________builtins_______________
0 0 
1 613 
2 10510 
3 27 
4 20 
5 1 
6 4 
7 0 
8 0 
9 0 
10 1915 
11 10526 
12 40344 
13 1498 
14 1 
15 7497 
16 0 
17 7535 
18 11 
19 13 
20 52 
21 181 
22 58 
23 172 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 5606 
50 11 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 151
	 number of use_tables 491
	 number of new_lookups 434
	 number of return_solutions 725
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 376
	 number of variant checks 10323

yes
| ?- 
End XSB (Beta) (cputime 9.53s, elapsetime 13.35s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^about(^\B.\C.Ex D(*B(D) /\ *C(D))(^unicorn))(^\E.talk*(*E)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.about(^\G.*G(F))(^\H.talk*(*H))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^about(^\H.*H(F))(^\I.talk*(*I)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^about(^\H.*H(D))(^\I.talk*(*I)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^about(^\D.\E.Ex F(*D(F) /\ *E(F))(^unicorn))(^\G.talk*(*G))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.about(^\I.*I(H))(^\J.talk*(*J))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^about(^\F.*F(D))(^\G.talk*(*G))))
CPU Time: 0.59

yes
| ?- getpvar 0 14673 
getpval 1 725 
getstrv 2 12 
gettval 3 252 
getcon 4 463 
getnil 5 517 
getstr 6 1639 
getlist 7 656 
unipvar 8 401 
unipval 9 57 
unitvar a 814 
unitval b 208 
unicon c 45 
uninil d 21 
getnumcon e 307 
putnumcon f 7307 
putpvar 10 6623 
putpval 11 8033 
puttvar 12 106 
putstrv 13 16 
putcon 14 672 
putnil 15 8 
putstr 16 564 
putlist 17 23 
bldpvar 18 85 
bldpval 19 149 
bldtvar 1a 134 
bldtval 1b 566 
bldcon 1c 52 
bldnil 1d 21 
uninumcon 1e 0 
bldnumcon 1f 19 
getlist_tvar_tvar 48 86 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 894 
retrymeelse a1 34 
trustmeelsefail a2 635 
try a3 1839 
retry a4 2421 
trust a5 1430 
getpbreg a6 278 
gettbreg a7 1655 
putpbreg a8 311 
puttbreg a9 367 
jumptbreg aa 224 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 312 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 666 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 21 
tabletry be 39 
addtotable bf 36 
tabletrust c1 9 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 25 
return_solution c8 44 
check_complete c9 9 
return_completion ca 0 
complete_execute cb 0 
use_table cd 36 
movreg d1 1331 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 900 
subreg d8 5538 
mulreg d9 131 
divreg da 2 
idivreg db 234 
putdval e0 15205 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 3256 
allocate e9 6846 
deallocate ea 3649 
proceed eb 2482 
execute ec 2448 
unexeci ed 0 
executev ee 0 
calld ef 876 
jump f0 67 
jumpz f1 19 
jumpnz f2 4325 
jumplt f3 24 
jumple f4 860 
jumpgt f5 133 
jumpge f6 0 
cases f7 0 
fail f8 2636 
noop f9 308 
halt fa 0 
builtin fb 6192 
unifunc fc 0 
userfunc fd 0 
Total insts 114015
_______________builtins_______________
0 0 
1 35 
2 670 
3 22 
4 15 
5 1 
6 4 
7 0 
8 0 
9 0 
10 127 
11 681 
12 2802 
13 55 
14 1 
15 500 
16 0 
17 537 
18 11 
19 8 
20 26 
21 111 
22 32 
23 98 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 396 
50 6 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 21
	 number of use_tables 45
	 number of new_lookups 46
	 number of return_solutions 44
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 36
	 number of variant checks 117

yes
| ?- 
End XSB (Beta) (cputime 1.48s, elapsetime 3.50s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.*B(^\D.date*(*D)(*C))(^\E.*E(^m)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.*E(^\G.date*(*G)(*F))(^\H.*H(D))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.*F(^\H.date*(*H)(*G))(^\I.*I(D)))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.*F(^\H.date*(*H)(*G))(^\I.*I(B)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*D(^\F.date*(*F)(*E))(^\G.*G(^m))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.*G(^\I.date*(*I)(*H))(^\J.*J(F))(D))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*D(^\F.date*(*F)(*E))(^\G.*G(B))))
CPU Time: 0.539

yes
| ?- getpvar 0 13182 
getpval 1 610 
getstrv 2 8 
gettval 3 180 
getcon 4 349 
getnil 5 460 
getstr 6 1516 
getlist 7 559 
unipvar 8 360 
unipval 9 57 
unitvar a 682 
unitval b 182 
unicon c 33 
uninil d 15 
getnumcon e 212 
putnumcon f 6523 
putpvar 10 5815 
putpval 11 6858 
puttvar 12 76 
putstrv 13 14 
putcon 14 588 
putnil 15 6 
putstr 16 471 
putlist 17 17 
bldpvar 18 65 
bldpval 19 109 
bldtvar 1a 118 
bldtval 1b 481 
bldcon 1c 48 
bldnil 1d 15 
uninumcon 1e 0 
bldnumcon 1f 13 
getlist_tvar_tvar 48 71 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 801 
retrymeelse a1 18 
trustmeelsefail a2 559 
try a3 1641 
retry a4 2229 
trust a5 1287 
getpbreg a6 235 
gettbreg a7 1474 
putpbreg a8 264 
puttbreg a9 327 
jumptbreg aa 178 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 226 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 556 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 29 
tableretry bd 19 
tabletry be 33 
addtotable bf 29 
tabletrust c1 7 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 23 
return_solution c8 29 
check_complete c9 7 
return_completion ca 0 
complete_execute cb 0 
use_table cd 28 
movreg d1 1119 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 777 
subreg d8 4925 
mulreg d9 120 
divreg da 2 
idivreg db 220 
putdval e0 13628 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 2834 
allocate e9 6196 
deallocate ea 3257 
proceed eb 2153 
execute ec 2186 
unexeci ed 0 
executev ee 0 
calld ef 768 
jump f0 53 
jumpz f1 17 
jumpnz f2 3872 
jumplt f3 24 
jumple f4 769 
jumpgt f5 90 
jumpge f6 0 
cases f7 0 
fail f8 2388 
noop f9 209 
halt fa 0 
builtin fb 5523 
unifunc fc 0 
userfunc fd 0 
Total insts 100822
_______________builtins_______________
0 0 
1 25 
2 592 
3 20 
4 13 
5 1 
6 4 
7 0 
8 0 
9 0 
10 120 
11 601 
12 2517 
13 42 
14 1 
15 445 
16 0 
17 502 
18 11 
19 6 
20 17 
21 83 
22 23 
23 74 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 368 
50 4 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 17
	 number of use_tables 37
	 number of new_lookups 40
	 number of return_solutions 29
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 29
	 number of variant checks 109

yes
| ?- 
End XSB (Beta) (cputime 1.42s, elapsetime 3.53s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^price)(^rise)
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^price)(^\D.\E.*E(D)(^rise))
CPU Time: 0.21

yes
| ?- getpvar 0 3318 
getpval 1 211 
getstrv 2 8 
gettval 3 130 
getcon 4 247 
getnil 5 134 
getstr 6 389 
getlist 7 201 
unipvar 8 127 
unipval 9 10 
unitvar a 359 
unitval b 117 
unicon c 33 
uninil d 15 
getnumcon e 155 
putnumcon f 1800 
putpvar 10 1697 
putpval 11 2374 
puttvar 12 57 
putstrv 13 2 
putcon 14 190 
putnil 15 6 
putstr 16 272 
putlist 17 17 
bldpvar 18 19 
bldpval 19 45 
bldtvar 1a 65 
bldtval 1b 275 
bldcon 1c 36 
bldnil 1d 15 
uninumcon 1e 0 
bldnumcon 1f 13 
getlist_tvar_tvar 48 26 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 234 
retrymeelse a1 14 
trustmeelsefail a2 136 
try a3 416 
retry a4 446 
trust a5 299 
getpbreg a6 130 
gettbreg a7 321 
putpbreg a8 106 
puttbreg a9 66 
jumptbreg aa 93 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 173 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 254 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 10 
tableretry bd 18 
tabletry be 28 
addtotable bf 9 
tabletrust c1 6 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 3 
return_solution c8 3 
check_complete c9 6 
return_completion ca 0 
complete_execute cb 0 
use_table cd 4 
movreg d1 508 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 307 
subreg d8 1238 
mulreg d9 28 
divreg da 2 
idivreg db 36 
putdval e0 3490 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 891 
allocate e9 1442 
deallocate ea 888 
proceed eb 712 
execute ec 575 
unexeci ed 0 
executev ee 0 
calld ef 220 
jump f0 49 
jumpz f1 17 
jumpnz f2 897 
jumplt f3 24 
jumple f4 189 
jumpgt f5 72 
jumpge f6 0 
cases f7 0 
fail f8 530 
noop f9 112 
halt fa 0 
builtin fb 1454 
unifunc fc 0 
userfunc fd 0 
Total insts 28819
_______________builtins_______________
0 0 
1 15 
2 135 
3 20 
4 13 
5 1 
6 4 
7 0 
8 0 
9 0 
10 23 
11 144 
12 571 
13 8 
14 1 
15 96 
16 0 
17 97 
18 11 
19 6 
20 16 
21 83 
22 22 
23 70 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 60 
50 4 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 15
	 number of use_tables 11
	 number of new_lookups 18
	 number of return_solutions 3
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 9
	 number of variant checks 36

yes
| ?- 
End XSB (Beta) (cputime 1.07s, elapsetime 3.03s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*D(^\F.date*(*F)(*E))(^\G.*G(B))))
CPU Time: 0.209

yes
| ?- getpvar 0 3079 
getpval 1 201 
getstrv 2 8 
gettval 3 126 
getcon 4 260 
getnil 5 124 
getstr 6 390 
getlist 7 193 
unipvar 8 127 
unipval 9 9 
unitvar a 379 
unitval b 149 
unicon c 33 
uninil d 15 
getnumcon e 171 
putnumcon f 1672 
putpvar 10 1599 
putpval 11 2252 
puttvar 12 58 
putstrv 13 2 
putcon 14 178 
putnil 15 6 
putstr 16 315 
putlist 17 17 
bldpvar 18 15 
bldpval 19 45 
bldtvar 1a 76 
bldtval 1b 322 
bldcon 1c 43 
bldnil 1d 15 
uninumcon 1e 0 
bldnumcon 1f 13 
getlist_tvar_tvar 48 32 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 226 
retrymeelse a1 18 
trustmeelsefail a2 129 
try a3 387 
retry a4 394 
trust a5 276 
getpbreg a6 130 
gettbreg a7 293 
putpbreg a8 99 
puttbreg a9 59 
jumptbreg aa 91 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 168 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 255 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 19 
tabletry be 33 
addtotable bf 5 
tabletrust c1 7 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 0 
return_solution c8 3 
check_complete c9 7 
return_completion ca 0 
complete_execute cb 0 
use_table cd 2 
movreg d1 500 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 294 
subreg d8 1146 
mulreg d9 25 
divreg da 2 
idivreg db 30 
putdval e0 3232 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 845 
allocate e9 1321 
deallocate ea 820 
proceed eb 671 
execute ec 539 
unexeci ed 0 
executev ee 0 
calld ef 208 
jump f0 53 
jumpz f1 17 
jumpnz f2 822 
jumplt f3 24 
jumple f4 175 
jumpgt f5 72 
jumpge f6 0 
cases f7 0 
fail f8 469 
noop f9 130 
halt fa 0 
builtin fb 1346 
unifunc fc 0 
userfunc fd 0 
Total insts 27280
_______________builtins_______________
0 0 
1 15 
2 127 
3 20 
4 13 
5 1 
6 4 
7 0 
8 0 
9 0 
10 19 
11 136 
12 516 
13 8 
14 1 
15 87 
16 0 
17 83 
18 11 
19 6 
20 16 
21 83 
22 22 
23 70 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 50 
50 4 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 17
	 number of use_tables 8
	 number of new_lookups 17
	 number of return_solutions 3
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 5
	 number of variant checks 50

yes
| ?- 
End XSB (Beta) (cputime 1.10s, elapsetime 3.16s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.\D.*B(^\E.in*(*E)(C)(D))(^\F.\G.Ex H(*F(H) /\ *G(H))(^park))(^\I.walk*(*I)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.*K(F))(^\L.walk*(*L))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.walk*(*M)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.walk*(*M)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.walk*(*K))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.walk*(*N))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.*J(D))(^\K.walk*(*K))))
CPU Time: 0.72

yes
| ?- getpvar 0 18992 
getpval 1 886 
getstrv 2 12 
gettval 3 252 
getcon 4 467 
getnil 5 650 
getstr 6 2115 
getlist 7 789 
unipvar 8 506 
unipval 9 85 
unitvar a 926 
unitval b 208 
unicon c 45 
uninil d 21 
getnumcon e 307 
putnumcon f 9393 
putpvar 10 8324 
putpval 11 9853 
puttvar 12 106 
putstrv 13 16 
putcon 14 805 
putnil 15 8 
putstr 16 564 
putlist 17 23 
bldpvar 18 85 
bldpval 19 149 
bldtvar 1a 134 
bldtval 1b 566 
bldcon 1c 52 
bldnil 1d 21 
uninumcon 1e 0 
bldnumcon 1f 19 
getlist_tvar_tvar 48 86 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 1104 
retrymeelse a1 34 
trustmeelsefail a2 789 
try a3 2350 
retry a4 3163 
trust a5 1829 
getpbreg a6 334 
gettbreg a7 2103 
putpbreg a8 367 
puttbreg a9 507 
jumptbreg aa 224 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 312 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 743 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 21 
tabletry be 39 
addtotable bf 36 
tabletrust c1 9 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 25 
return_solution c8 44 
check_complete c9 9 
return_completion ca 0 
complete_execute cb 0 
use_table cd 36 
movreg d1 1604 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 1145 
subreg d8 7106 
mulreg d9 187 
divreg da 2 
idivreg db 346 
putdval e0 19671 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 4005 
allocate e9 8869 
deallocate ea 4664 
proceed eb 3077 
execute ec 3141 
unexeci ed 0 
executev ee 0 
calld ef 1086 
jump f0 67 
jumpz f1 19 
jumpnz f2 5571 
jumplt f3 24 
jumple f4 1126 
jumpgt f5 133 
jumpge f6 0 
cases f7 0 
fail f8 3374 
noop f9 312 
halt fa 0 
builtin fb 7921 
unifunc fc 0 
userfunc fd 0 
Total insts 144007
_______________builtins_______________
0 0 
1 35 
2 852 
3 22 
4 15 
5 1 
6 4 
7 0 
8 0 
9 0 
10 183 
11 863 
12 3628 
13 55 
14 1 
15 661 
16 0 
17 726 
18 11 
19 8 
20 26 
21 111 
22 32 
23 98 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 529 
50 6 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 21
	 number of use_tables 45
	 number of new_lookups 46
	 number of return_solutions 44
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 36
	 number of variant checks 117

yes
| ?- 
End XSB (Beta) (cputime 1.61s, elapsetime 3.66s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.*B(^\D.find*(*D)(*C))(^\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.*G(^\I.find*(*I)(*H))(^\J.*J(F))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.*H(^\J.find*(*J)(*I))(^\K.*K(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.*H(^\J.find*(*J)(*I))(^\K.*K(D)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*D(^\F.find*(*F)(*E))(^\G.\H.Ex I(*G(I) /\ *H(I))(^unicorn))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.*I(^\K.find*(*K)(*J))(^\L.*L(H))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*F(^\H.find*(*H)(*G))(^\I.*I(D))))
CPU Time: 0.66

yes
| ?- getpvar 0 16179 
getpval 1 759 
getstrv 2 10 
gettval 3 208 
getcon 4 391 
getnil 5 548 
getstr 6 1809 
getlist 7 665 
unipvar 8 433 
unipval 9 71 
unitvar a 798 
unitval b 191 
unicon c 39 
uninil d 18 
getnumcon e 265 
putnumcon f 8043 
putpvar 10 7150 
putpval 11 8423 
puttvar 12 94 
putstrv 13 14 
putcon 14 688 
putnil 15 7 
putstr 16 494 
putlist 17 20 
bldpvar 18 69 
bldpval 19 120 
bldtvar 1a 120 
bldtval 1b 500 
bldcon 1c 49 
bldnil 1d 18 
uninumcon 1e 0 
bldnumcon 1f 16 
getlist_tvar_tvar 48 74 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 959 
retrymeelse a1 26 
trustmeelsefail a2 689 
try a3 1996 
retry a4 2692 
trust a5 1554 
getpbreg a6 294 
gettbreg a7 1809 
putpbreg a8 310 
puttbreg a9 426 
jumptbreg aa 196 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 268 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 641 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 21 
tabletry be 39 
addtotable bf 31 
tabletrust c1 9 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 23 
return_solution c8 29 
check_complete c9 9 
return_completion ca 0 
complete_execute cb 0 
use_table cd 28 
movreg d1 1391 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 968 
subreg d8 6103 
mulreg d9 157 
divreg da 2 
idivreg db 290 
putdval e0 16821 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 3431 
allocate e9 7571 
deallocate ea 3980 
proceed eb 2614 
execute ec 2685 
unexeci ed 0 
executev ee 0 
calld ef 941 
jump f0 60 
jumpz f1 18 
jumpnz f2 4782 
jumplt f3 24 
jumple f4 960 
jumpgt f5 117 
jumpge f6 0 
cases f7 0 
fail f8 2910 
noop f9 252 
halt fa 0 
builtin fb 6793 
unifunc fc 0 
userfunc fd 0 
Total insts 123216
_______________builtins_______________
0 0 
1 33 
2 740 
3 21 
4 14 
5 1 
6 4 
7 0 
8 0 
9 0 
10 155 
11 750 
12 3094 
13 53 
14 1 
15 562 
16 0 
17 614 
18 11 
19 7 
20 21 
21 97 
22 27 
23 84 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 445 
50 5 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 21
	 number of use_tables 37
	 number of new_lookups 44
	 number of return_solutions 29
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 31
	 number of variant checks 116

yes
| ?- 
End XSB (Beta) (cputime 1.61s, elapsetime 3.63s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.seek*(B)(*C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^unicorn)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.seek*(G)(*H)(^\I.*I(F))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.seek*(H)(*I)(^\J.*J(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.seek*(D)(*E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.seek*(I)(*J)(^\K.*K(H))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.seek*(F)(*G)(^\H.*H(D))))
CPU Time: 0.59

yes
| ?- getpvar 0 14611 
getpval 1 703 
getstrv 2 10 
gettval 3 208 
getcon 4 391 
getnil 5 499 
getstr 6 1627 
getlist 7 616 
unipvar 8 391 
unipval 9 64 
unitvar a 770 
unitval b 191 
unicon c 39 
uninil d 18 
getnumcon e 265 
putnumcon f 7301 
putpvar 10 6520 
putpval 11 7779 
puttvar 12 94 
putstrv 13 14 
putcon 14 639 
putnil 15 7 
putstr 16 494 
putlist 17 20 
bldpvar 18 69 
bldpval 19 120 
bldtvar 1a 120 
bldtval 1b 500 
bldcon 1c 49 
bldnil 1d 18 
uninumcon 1e 0 
bldnumcon 1f 16 
getlist_tvar_tvar 48 74 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 875 
retrymeelse a1 26 
trustmeelsefail a2 619 
try a3 1821 
retry a4 2412 
trust a5 1407 
getpbreg a6 280 
gettbreg a7 1634 
putpbreg a8 296 
puttbreg a9 391 
jumptbreg aa 196 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 268 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 606 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 21 
tabletry be 39 
addtotable bf 31 
tabletrust c1 9 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 23 
return_solution c8 29 
check_complete c9 9 
return_completion ca 0 
complete_execute cb 0 
use_table cd 28 
movreg d1 1307 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 891 
subreg d8 5522 
mulreg d9 143 
divreg da 2 
idivreg db 262 
putdval e0 15169 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 3165 
allocate e9 6829 
deallocate ea 3616 
proceed eb 2418 
execute ec 2433 
unexeci ed 0 
executev ee 0 
calld ef 857 
jump f0 60 
jumpz f1 18 
jumpnz f2 4313 
jumplt f3 24 
jumple f4 862 
jumpgt f5 117 
jumpge f6 0 
cases f7 0 
fail f8 2630 
noop f9 252 
halt fa 0 
builtin fb 6156 
unifunc fc 0 
userfunc fd 0 
Total insts 112317
_______________builtins_______________
0 0 
1 33 
2 663 
3 21 
4 14 
5 1 
6 4 
7 0 
8 0 
9 0 
10 141 
11 673 
12 2793 
13 53 
14 1 
15 506 
16 0 
17 551 
18 11 
19 7 
20 21 
21 97 
22 27 
23 84 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 396 
50 5 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 21
	 number of use_tables 37
	 number of new_lookups 44
	 number of return_solutions 29
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 31
	 number of variant checks 116

yes
| ?- 
End XSB (Beta) (cputime 1.50s, elapsetime 3.48s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^man)(^\D.\E.try_to*(D)(E)(^\F.walk*(*F)))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^man)(^\D.\E.*E(D)(^\F.\G.try_to*(F)(G)(^\H.walk*(*H))))
CPU Time: 0.23

yes
| ?- getpvar 0 4701 
getpval 1 279 
getstrv 2 10 
gettval 3 158 
getcon 4 370 
getnil 5 181 
getstr 6 617 
getlist 7 264 
unipvar 8 168 
unipval 9 16 
unitvar a 548 
unitval b 184 
unicon c 45 
uninil d 18 
getnumcon e 187 
putnumcon f 2466 
putpvar 10 2326 
putpval 11 3149 
puttvar 12 69 
putstrv 13 2 
putcon 14 279 
putnil 15 7 
putstr 16 439 
putlist 17 20 
bldpvar 18 23 
bldpval 19 56 
bldtvar 1a 109 
bldtval 1b 454 
bldcon 1c 61 
bldnil 1d 18 
uninumcon 1e 0 
bldnumcon 1f 16 
getlist_tvar_tvar 48 29 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 313 
retrymeelse a1 18 
trustmeelsefail a2 188 
try a3 585 
retry a4 693 
trust a5 428 
getpbreg a6 170 
gettbreg a7 455 
putpbreg a8 133 
puttbreg a9 102 
jumptbreg aa 143 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 206 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 355 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 15 
tableretry bd 30 
tabletry be 38 
addtotable bf 11 
tabletrust c1 8 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 3 
return_solution c8 9 
check_complete c9 8 
return_completion ca 0 
complete_execute cb 0 
use_table cd 4 
movreg d1 705 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 407 
subreg d8 1721 
mulreg d9 42 
divreg da 2 
idivreg db 60 
putdval e0 4856 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 1184 
allocate e9 2044 
deallocate ea 1211 
proceed eb 936 
execute ec 830 
unexeci ed 0 
executev ee 0 
calld ef 294 
jump f0 56 
jumpz f1 18 
jumpnz f2 1267 
jumplt f3 24 
jumple f4 270 
jumpgt f5 88 
jumpge f6 0 
cases f7 0 
fail f8 771 
noop f9 172 
halt fa 0 
builtin fb 1999 
unifunc fc 0 
userfunc fd 0 
Total insts 40141
_______________builtins_______________
0 0 
1 17 
2 191 
3 21 
4 14 
5 1 
6 4 
7 0 
8 0 
9 0 
10 35 
11 201 
12 815 
13 8 
14 1 
15 142 
16 0 
17 143 
18 11 
19 7 
20 22 
21 97 
22 28 
23 88 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 94 
50 5 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 23
	 number of use_tables 11
	 number of new_lookups 26
	 number of return_solutions 9
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 11
	 number of variant checks 70

yes
| ?- 
End XSB (Beta) (cputime 1.12s, elapsetime 3.08s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^allegedly(^\D.\E.try_to*(D)(E)(^\F.run*(*F))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.try_to*(D)(E)(^allegedly(^\F.run*(*F))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.*E(D)(^allegedly(^\F.\G.try_to*(F)(G)(^\H.run*(*H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.*E(D)(^\F.\G.try_to*(F)(G)(^allegedly(^\H.run*(*H)))))
CPU Time: 0.34

yes
| ?- getpvar 0 8163 
getpval 1 434 
getstrv 2 12 
gettval 3 218 
getcon 4 485 
getnil 5 316 
getstr 6 1011 
getlist 7 427 
unipvar 8 255 
unipval 9 30 
unitvar a 715 
unitval b 215 
unicon c 51 
uninil d 21 
getnumcon e 229 
putnumcon f 4103 
putpvar 10 3796 
putpval 11 4915 
puttvar 12 83 
putstrv 13 6 
putcon 14 466 
putnil 15 8 
putstr 16 578 
putlist 17 23 
bldpvar 18 59 
bldpval 19 103 
bldtvar 1a 145 
bldtval 1b 589 
bldcon 1c 68 
bldnil 1d 21 
uninumcon 1e 0 
bldnumcon 1f 19 
getlist_tvar_tvar 48 56 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 505 
retrymeelse a1 22 
trustmeelsefail a2 318 
try a3 1036 
retry a4 1300 
trust a5 793 
getpbreg a6 212 
gettbreg a7 827 
putpbreg a8 202 
puttbreg a9 188 
jumptbreg aa 215 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 267 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 526 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 25 
tableretry bd 30 
tabletry be 38 
addtotable bf 25 
tabletrust c1 8 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 21 
return_solution c8 33 
check_complete c9 8 
return_completion ca 0 
complete_execute cb 0 
use_table cd 20 
movreg d1 962 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 605 
subreg d8 2953 
mulreg d9 74 
divreg da 2 
idivreg db 120 
putdval e0 8347 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 1926 
allocate e9 3657 
deallocate ea 2051 
proceed eb 1507 
execute ec 1421 
unexeci ed 0 
executev ee 0 
calld ef 476 
jump f0 63 
jumpz f1 19 
jumpnz f2 2248 
jumplt f3 24 
jumple f4 471 
jumpgt f5 104 
jumpge f6 0 
cases f7 0 
fail f8 1403 
noop f9 258 
halt fa 0 
builtin fb 3386 
unifunc fc 0 
userfunc fd 0 
Total insts 66316
_______________builtins_______________
0 0 
1 19 
2 333 
3 22 
4 15 
5 1 
6 4 
7 0 
8 0 
9 0 
10 67 
11 344 
12 1475 
13 12 
14 1 
15 260 
16 0 
17 281 
18 11 
19 8 
20 27 
21 111 
22 33 
23 102 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 200 
50 6 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 23
	 number of use_tables 27
	 number of new_lookups 44
	 number of return_solutions 33
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 25
	 number of variant checks 88

yes
| ?- 
End XSB (Beta) (cputime 1.25s, elapsetime 3.25s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.*D(^\F.love*(*F)(*E))(^\G.\H.Ex I(*G(I) /\ *H(I))(^woman)))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^woman)(^\H.\I.\J.*I(^\K.love*(*K)(*J))(^\L.*L(H))(D)))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^woman)(^\H.\I.*I(D)(^\J.\K.*J(^\L.love*(*L)(*K))(^\M.*M(H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.\F.Al G(*E(G) -> *F(G))(^man)(^\H.\I.*I(H)(^\J.\K.*J(^\L.love*(*L)(*K))(^\M.*M(D)))))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.*E(D)(^\F.\G.*F(^\H.love*(*H)(*G))(^\I.\J.Ex K(*I(K) /\ *J(K))(^woman))))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^woman)(^\J.\K.\L.*K(^\M.love*(*M)(*L))(^\N.*N(J))(F))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.\F.Al G(*E(G) -> *F(G))(^man)(^\H.\I.*H(^\J.love*(*J)(*I))(^\K.*K(D))))
CPU Time: 0.62

yes
| ?- getpvar 0 19170 
getpval 1 908 
getstrv 2 12 
gettval 3 234 
getcon 4 480 
getnil 5 634 
getstr 6 2101 
getlist 7 769 
unipvar 8 506 
unipval 9 85 
unitvar a 911 
unitval b 199 
unicon c 45 
uninil d 21 
getnumcon e 319 
putnumcon f 9572 
putpvar 10 8478 
putpval 11 9986 
puttvar 12 112 
putstrv 13 14 
putcon 14 778 
putnil 15 8 
putstr 16 513 
putlist 17 23 
bldpvar 18 71 
bldpval 19 129 
bldtvar 1a 121 
bldtval 1b 516 
bldcon 1c 50 
bldnil 1d 21 
uninumcon 1e 0 
bldnumcon 1f 19 
getlist_tvar_tvar 48 75 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 1132 
retrymeelse a1 34 
trustmeelsefail a2 819 
try a3 2348 
retry a4 3148 
trust a5 1818 
getpbreg a6 350 
gettbreg a7 2144 
putpbreg a8 356 
puttbreg a9 525 
jumptbreg aa 205 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 308 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 715 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 22 
tabletry be 42 
addtotable bf 32 
tabletrust c1 10 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 23 
return_solution c8 29 
check_complete c9 10 
return_completion ca 0 
complete_execute cb 0 
use_table cd 28 
movreg d1 1644 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 1159 
subreg d8 7282 
mulreg d9 194 
divreg da 2 
idivreg db 360 
putdval e0 20014 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 4021 
allocate e9 8944 
deallocate ea 4703 
proceed eb 3072 
execute ec 3174 
unexeci ed 0 
executev ee 0 
calld ef 1114 
jump f0 67 
jumpz f1 19 
jumpnz f2 5693 
jumplt f3 24 
jumple f4 1151 
jumpgt f5 144 
jumpge f6 0 
cases f7 0 
fail f8 3372 
noop f9 315 
halt fa 0 
builtin fb 8069 
unifunc fc 0 
userfunc fd 0 
Total insts 145529
_______________builtins_______________
0 0 
1 41 
2 888 
3 22 
4 15 
5 1 
6 4 
7 0 
8 0 
9 0 
10 190 
11 899 
12 3671 
13 64 
14 1 
15 679 
16 0 
17 726 
18 11 
19 8 
20 26 
21 111 
22 32 
23 98 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 522 
50 6 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 23
	 number of use_tables 37
	 number of new_lookups 46
	 number of return_solutions 29
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 32
	 number of variant checks 124

yes
| ?- 
End XSB (Beta) (cputime 1.53s, elapsetime 3.79s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^\D.woman(D) /\ \E.*E(D)(^\F.walk*(*F)))(^\G.run*(*G))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^\D.woman(D) /\ \E.*E(D)(^\F.walk*(*F)))(^\G.\H.*H(G)(^\I.run*(*I)))
CPU Time: 0.24

yes
| ?- getpvar 0 5808 
getpval 1 359 
getstrv 2 14 
gettval 3 219 
getcon 4 506 
getnil 5 219 
getstr 6 770 
getlist 7 336 
unipvar 8 216 
unipval 9 18 
unitvar a 711 
unitval b 244 
unicon c 60 
uninil d 24 
getnumcon e 266 
putnumcon f 3038 
putpvar 10 2911 
putpval 11 3998 
puttvar 12 94 
putstrv 13 4 
putcon 14 331 
putnil 15 9 
putstr 16 571 
putlist 17 27 
bldpvar 18 28 
bldpval 19 80 
bldtvar 1a 138 
bldtval 1b 592 
bldcon 1c 77 
bldnil 1d 24 
uninumcon 1e 0 
bldnumcon 1f 22 
getlist_tvar_tvar 48 37 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 406 
retrymeelse a1 34 
trustmeelsefail a2 240 
try a3 705 
retry a4 816 
trust a5 508 
getpbreg a6 215 
gettbreg a7 557 
putpbreg a8 161 
puttbreg a9 124 
jumptbreg aa 167 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 269 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 444 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 34 
tableretry bd 39 
tabletry be 53 
addtotable bf 13 
tabletrust c1 11 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 6 
return_solution c8 4 
check_complete c9 11 
return_completion ca 0 
complete_execute cb 0 
use_table cd 7 
movreg d1 892 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 523 
subreg d8 2133 
mulreg d9 52 
divreg da 2 
idivreg db 72 
putdval e0 6016 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 1469 
allocate e9 2472 
deallocate ea 1486 
proceed eb 1166 
execute ec 1019 
unexeci ed 0 
executev ee 0 
calld ef 368 
jump f0 72 
jumpz f1 20 
jumpnz f2 1561 
jumplt f3 24 
jumple f4 342 
jumpgt f5 120 
jumpge f6 0 
cases f7 0 
fail f8 899 
noop f9 221 
halt fa 0 
builtin fb 2447 
unifunc fc 0 
userfunc fd 0 
Total insts 49951
_______________builtins_______________
0 0 
1 21 
2 243 
3 23 
4 16 
5 1 
6 4 
7 0 
8 0 
9 0 
10 41 
11 255 
12 993 
13 8 
14 1 
15 178 
16 0 
17 163 
18 11 
19 9 
20 32 
21 125 
22 38 
23 116 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 108 
50 7 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 32
	 number of use_tables 14
	 number of new_lookups 38
	 number of return_solutions 4
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 13
	 number of variant checks 123

yes
| ?- 
End XSB (Beta) (cputime 1.15s, elapsetime 3.16s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D)))) /\ \K.*K(^m)(^\L.\M.seek*(L)(*M)(^\N.*N(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D)))) /\ \K.*K(^m)(^\L.\M.*M(L)(^\N.\O.seek*(N)(*O)(^\P.*P(D)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.seek*(F)(*G)(^\H.*H(D))) /\ \I.*I(^m)(^\J.\K.seek*(J)(*K)(^\L.*L(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.seek*(F)(*G)(^\H.*H(D))) /\ \I.*I(^m)(^\J.\K.*K(J)(^\L.\M.seek*(L)(*M)(^\N.*N(D)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.seek*(J)(*K)(^\L.*L(D)))) /\ \M.*M(F)(^\N.\O.seek*(N)(*O)(^\P.*P(D)))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.seek*(J)(*K)(^\L.*L(F)))) /\ \M.*M(B)(^\N.\O.seek*(N)(*O)(^\P.*P(F)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.*I(B)(^\J.\K.seek*(J)(*K)(^\L.*L(F))) /\ \M.*M(H)(^\N.\O.seek*(N)(*O)(^\P.*P(F))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(F)(^\J.\K.seek*(J)(*K)(^\L.*L(D))) /\ \M.*M(H)(^\N.\O.seek*(N)(*O)(^\P.*P(D))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(B)(^\J.\K.seek*(J)(*K)(^\L.*L(H))) /\ \M.*M(D)(^\N.\O.seek*(N)(*O)(^\P.*P(H))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(D)(^\J.\K.seek*(J)(*K)(^\L.*L(H))) /\ \M.*M(B)(^\N.\O.seek*(N)(*O)(^\P.*P(H))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.seek*(J)(*K)(^\L.*L(D))) /\ \M.*M(F)(^\N.\O.seek*(N)(*O)(^\P.*P(D))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.seek*(J)(*K)(^\L.*L(F))) /\ \M.*M(B)(^\N.\O.seek*(N)(*O)(^\P.*P(F))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.seek*(H)(*I)(^\J.*J(F))) /\ \K.*K(^m)(^\L.\M.*M(L)(^\N.\O.seek*(N)(*O)(^\P.*P(F))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D))) /\ \K.*K(^m)(^\L.\M.*M(L)(^\N.\O.seek*(N)(*O)(^\P.*P(D))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.seek*(H)(*I)(^\J.*J(F))) /\ \K.*K(^m)(^\L.\M.seek*(L)(*M)(^\N.*N(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D))) /\ \K.*K(^m)(^\L.\M.seek*(L)(*M)(^\N.*N(D)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.seek*(H)(*I)(^\J.*J(D))) /\ \K.*K(F)(^\L.\M.seek*(L)(*M)(^\N.*N(D)))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.seek*(H)(*I)(^\J.*J(F))) /\ \K.*K(B)(^\L.\M.seek*(L)(*M)(^\N.*N(F)))))
CPU Time: 2.42

yes
| ?- getpvar 0 63356 
getpval 1 2998 
getstrv 2 18 
gettval 3 552 
getcon 4 1758 
getnil 5 1982 
getstr 6 7210 
getlist 7 2346 
unipvar 8 1470 
unipval 9 274 
unitvar a 3206 
unitval b 904 
unicon c 99 
uninil d 30 
getnumcon e 1344 
putnumcon f 31553 
putpvar 10 28707 
putpval 11 32505 
puttvar 12 333 
putstrv 13 69 
putcon 14 2556 
putnil 15 11 
putstr 16 2082 
putlist 17 32 
bldpvar 18 281 
bldpval 19 418 
bldtvar 1a 550 
bldtval 1b 2141 
bldcon 1c 237 
bldnil 1d 30 
uninumcon 1e 0 
bldnumcon 1f 28 
getlist_tvar_tvar 48 355 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 3995 
retrymeelse a1 202 
trustmeelsefail a2 3028 
try a3 7993 
retry a4 10898 
trust a5 6204 
getpbreg a6 1073 
gettbreg a7 7799 
putpbreg a8 1117 
puttbreg a9 1841 
jumptbreg aa 740 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 846 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 2199 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 80 
tableretry bd 113 
tabletry be 187 
addtotable bf 100 
tabletrust c1 37 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 41 
return_solution c8 155 
check_complete c9 37 
return_completion ca 0 
complete_execute cb 0 
use_table cd 124 
movreg d1 5235 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 3249 
subreg d8 25091 
mulreg d9 600 
divreg da 2 
idivreg db 1160 
putdval e0 66322 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 13530 
allocate e9 30308 
deallocate ea 15435 
proceed eb 9823 
execute ec 10567 
unexeci ed 0 
executev ee 0 
calld ef 3911 
jump f0 112 
jumpz f1 22 
jumpnz f2 19854 
jumplt f3 24 
jumple f4 3785 
jumpgt f5 449 
jumpge f6 0 
cases f7 0 
fail f8 11796 
noop f9 1283 
halt fa 0 
builtin fb 27193 
unifunc fc 0 
userfunc fd 0 
Total insts 487995
_______________builtins_______________
0 0 
1 189 
2 3224 
3 25 
4 18 
5 1 
6 4 
7 0 
8 0 
9 0 
10 601 
11 3238 
12 12576 
13 416 
14 1 
15 2329 
16 0 
17 2357 
18 11 
19 11 
20 42 
21 153 
22 48 
23 144 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 1742 
50 9 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 105
	 number of use_tables 141
	 number of new_lookups 146
	 number of return_solutions 155
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 100
	 number of variant checks 1681

yes
| ?- 
End XSB (Beta) (cputime 3.30s, elapsetime 5.65s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.*B(^\D.date*(*D)(*C))(^\E.*E(^m)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.*E(^\G.date*(*G)(*F))(^\H.*H(D))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.*F(^\H.date*(*H)(*G))(^\I.*I(D)))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.*F(^\H.date*(*H)(*G))(^\I.*I(B)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*D(^\F.date*(*F)(*E))(^\G.*G(^m))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.*G(^\I.date*(*I)(*H))(^\J.*J(F))(D))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*D(^\F.date*(*F)(*E))(^\G.*G(B))))
CPU Time: 0.509

yes
| ?- getpvar 0 13182 
getpval 1 610 
getstrv 2 8 
gettval 3 180 
getcon 4 349 
getnil 5 460 
getstr 6 1516 
getlist 7 559 
unipvar 8 360 
unipval 9 57 
unitvar a 682 
unitval b 182 
unicon c 33 
uninil d 15 
getnumcon e 212 
putnumcon f 6523 
putpvar 10 5815 
putpval 11 6858 
puttvar 12 76 
putstrv 13 14 
putcon 14 588 
putnil 15 6 
putstr 16 471 
putlist 17 17 
bldpvar 18 65 
bldpval 19 109 
bldtvar 1a 118 
bldtval 1b 481 
bldcon 1c 48 
bldnil 1d 15 
uninumcon 1e 0 
bldnumcon 1f 13 
getlist_tvar_tvar 48 71 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 801 
retrymeelse a1 18 
trustmeelsefail a2 559 
try a3 1641 
retry a4 2229 
trust a5 1287 
getpbreg a6 235 
gettbreg a7 1474 
putpbreg a8 264 
puttbreg a9 327 
jumptbreg aa 178 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 226 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 556 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 29 
tableretry bd 19 
tabletry be 33 
addtotable bf 29 
tabletrust c1 7 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 23 
return_solution c8 29 
check_complete c9 7 
return_completion ca 0 
complete_execute cb 0 
use_table cd 28 
movreg d1 1119 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 777 
subreg d8 4925 
mulreg d9 120 
divreg da 2 
idivreg db 220 
putdval e0 13628 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 2834 
allocate e9 6196 
deallocate ea 3257 
proceed eb 2153 
execute ec 2186 
unexeci ed 0 
executev ee 0 
calld ef 768 
jump f0 53 
jumpz f1 17 
jumpnz f2 3872 
jumplt f3 24 
jumple f4 769 
jumpgt f5 90 
jumpge f6 0 
cases f7 0 
fail f8 2388 
noop f9 209 
halt fa 0 
builtin fb 5523 
unifunc fc 0 
userfunc fd 0 
Total insts 100822
_______________builtins_______________
0 0 
1 25 
2 592 
3 20 
4 13 
5 1 
6 4 
7 0 
8 0 
9 0 
10 120 
11 601 
12 2517 
13 42 
14 1 
15 445 
16 0 
17 502 
18 11 
19 6 
20 17 
21 83 
22 23 
23 74 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 368 
50 4 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 17
	 number of use_tables 37
	 number of new_lookups 40
	 number of return_solutions 29
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 29
	 number of variant checks 109

yes
| ?- 
End XSB (Beta) (cputime 1.45s, elapsetime 3.43s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^price)(^rise)
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^price)(^\D.\E.*E(D)(^rise))
CPU Time: 0.21

yes
| ?- getpvar 0 3318 
getpval 1 211 
getstrv 2 8 
gettval 3 130 
getcon 4 247 
getnil 5 134 
getstr 6 389 
getlist 7 201 
unipvar 8 127 
unipval 9 10 
unitvar a 359 
unitval b 117 
unicon c 33 
uninil d 15 
getnumcon e 155 
putnumcon f 1800 
putpvar 10 1697 
putpval 11 2374 
puttvar 12 57 
putstrv 13 2 
putcon 14 190 
putnil 15 6 
putstr 16 272 
putlist 17 17 
bldpvar 18 19 
bldpval 19 45 
bldtvar 1a 65 
bldtval 1b 275 
bldcon 1c 36 
bldnil 1d 15 
uninumcon 1e 0 
bldnumcon 1f 13 
getlist_tvar_tvar 48 26 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 234 
retrymeelse a1 14 
trustmeelsefail a2 136 
try a3 416 
retry a4 446 
trust a5 299 
getpbreg a6 130 
gettbreg a7 321 
putpbreg a8 106 
puttbreg a9 66 
jumptbreg aa 93 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 173 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 254 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 10 
tableretry bd 18 
tabletry be 28 
addtotable bf 9 
tabletrust c1 6 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 3 
return_solution c8 3 
check_complete c9 6 
return_completion ca 0 
complete_execute cb 0 
use_table cd 4 
movreg d1 508 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 307 
subreg d8 1238 
mulreg d9 28 
divreg da 2 
idivreg db 36 
putdval e0 3490 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 891 
allocate e9 1442 
deallocate ea 888 
proceed eb 712 
execute ec 575 
unexeci ed 0 
executev ee 0 
calld ef 220 
jump f0 49 
jumpz f1 17 
jumpnz f2 897 
jumplt f3 24 
jumple f4 189 
jumpgt f5 72 
jumpge f6 0 
cases f7 0 
fail f8 530 
noop f9 112 
halt fa 0 
builtin fb 1454 
unifunc fc 0 
userfunc fd 0 
Total insts 28819
_______________builtins_______________
0 0 
1 15 
2 135 
3 20 
4 13 
5 1 
6 4 
7 0 
8 0 
9 0 
10 23 
11 144 
12 571 
13 8 
14 1 
15 96 
16 0 
17 97 
18 11 
19 6 
20 16 
21 83 
22 22 
23 70 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 60 
50 4 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 15
	 number of use_tables 11
	 number of new_lookups 18
	 number of return_solutions 3
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 9
	 number of variant checks 36

yes
| ?- 
End XSB (Beta) (cputime 1.12s, elapsetime 3.03s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*D(^\F.date*(*F)(*E))(^\G.*G(B))))
CPU Time: 0.23

yes
| ?- getpvar 0 3079 
getpval 1 201 
getstrv 2 8 
gettval 3 126 
getcon 4 260 
getnil 5 124 
getstr 6 390 
getlist 7 193 
unipvar 8 127 
unipval 9 9 
unitvar a 379 
unitval b 149 
unicon c 33 
uninil d 15 
getnumcon e 171 
putnumcon f 1672 
putpvar 10 1599 
putpval 11 2252 
puttvar 12 58 
putstrv 13 2 
putcon 14 178 
putnil 15 6 
putstr 16 315 
putlist 17 17 
bldpvar 18 15 
bldpval 19 45 
bldtvar 1a 76 
bldtval 1b 322 
bldcon 1c 43 
bldnil 1d 15 
uninumcon 1e 0 
bldnumcon 1f 13 
getlist_tvar_tvar 48 32 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 226 
retrymeelse a1 18 
trustmeelsefail a2 129 
try a3 387 
retry a4 394 
trust a5 276 
getpbreg a6 130 
gettbreg a7 293 
putpbreg a8 99 
puttbreg a9 59 
jumptbreg aa 91 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 168 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 255 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 19 
tabletry be 33 
addtotable bf 5 
tabletrust c1 7 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 0 
return_solution c8 3 
check_complete c9 7 
return_completion ca 0 
complete_execute cb 0 
use_table cd 2 
movreg d1 500 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 294 
subreg d8 1146 
mulreg d9 25 
divreg da 2 
idivreg db 30 
putdval e0 3232 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 845 
allocate e9 1321 
deallocate ea 820 
proceed eb 671 
execute ec 539 
unexeci ed 0 
executev ee 0 
calld ef 208 
jump f0 53 
jumpz f1 17 
jumpnz f2 822 
jumplt f3 24 
jumple f4 175 
jumpgt f5 72 
jumpge f6 0 
cases f7 0 
fail f8 469 
noop f9 130 
halt fa 0 
builtin fb 1346 
unifunc fc 0 
userfunc fd 0 
Total insts 27280
_______________builtins_______________
0 0 
1 15 
2 127 
3 20 
4 13 
5 1 
6 4 
7 0 
8 0 
9 0 
10 19 
11 136 
12 516 
13 8 
14 1 
15 87 
16 0 
17 83 
18 11 
19 6 
20 16 
21 83 
22 22 
23 70 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 50 
50 4 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 17
	 number of use_tables 8
	 number of new_lookups 17
	 number of return_solutions 3
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 5
	 number of variant checks 50

yes
| ?- 
End XSB (Beta) (cputime 1.16s, elapsetime 3.06s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.\D.*B(^\E.in*(*E)(C)(D))(^\F.\G.Ex H(*F(H) /\ *G(H))(^park))(^\I.walk*(*I)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.*K(F))(^\L.walk*(*L))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.walk*(*M)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.walk*(*M)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.walk*(*K))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.walk*(*N))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.*J(D))(^\K.walk*(*K))))
CPU Time: 0.751

yes
| ?- getpvar 0 18992 
getpval 1 886 
getstrv 2 12 
gettval 3 252 
getcon 4 467 
getnil 5 650 
getstr 6 2115 
getlist 7 789 
unipvar 8 506 
unipval 9 85 
unitvar a 926 
unitval b 208 
unicon c 45 
uninil d 21 
getnumcon e 307 
putnumcon f 9393 
putpvar 10 8324 
putpval 11 9853 
puttvar 12 106 
putstrv 13 16 
putcon 14 805 
putnil 15 8 
putstr 16 564 
putlist 17 23 
bldpvar 18 85 
bldpval 19 149 
bldtvar 1a 134 
bldtval 1b 566 
bldcon 1c 52 
bldnil 1d 21 
uninumcon 1e 0 
bldnumcon 1f 19 
getlist_tvar_tvar 48 86 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 1104 
retrymeelse a1 34 
trustmeelsefail a2 789 
try a3 2350 
retry a4 3163 
trust a5 1829 
getpbreg a6 334 
gettbreg a7 2103 
putpbreg a8 367 
puttbreg a9 507 
jumptbreg aa 224 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 312 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 743 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 21 
tabletry be 39 
addtotable bf 36 
tabletrust c1 9 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 25 
return_solution c8 44 
check_complete c9 9 
return_completion ca 0 
complete_execute cb 0 
use_table cd 36 
movreg d1 1604 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 1145 
subreg d8 7106 
mulreg d9 187 
divreg da 2 
idivreg db 346 
putdval e0 19671 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 4005 
allocate e9 8869 
deallocate ea 4664 
proceed eb 3077 
execute ec 3141 
unexeci ed 0 
executev ee 0 
calld ef 1086 
jump f0 67 
jumpz f1 19 
jumpnz f2 5571 
jumplt f3 24 
jumple f4 1126 
jumpgt f5 133 
jumpge f6 0 
cases f7 0 
fail f8 3374 
noop f9 312 
halt fa 0 
builtin fb 7921 
unifunc fc 0 
userfunc fd 0 
Total insts 144007
_______________builtins_______________
0 0 
1 35 
2 852 
3 22 
4 15 
5 1 
6 4 
7 0 
8 0 
9 0 
10 183 
11 863 
12 3628 
13 55 
14 1 
15 661 
16 0 
17 726 
18 11 
19 8 
20 26 
21 111 
22 32 
23 98 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 529 
50 6 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 21
	 number of use_tables 45
	 number of new_lookups 46
	 number of return_solutions 44
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 36
	 number of variant checks 117

yes
| ?- 
End XSB (Beta) (cputime 1.62s, elapsetime 3.69s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.*B(^\D.find*(*D)(*C))(^\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.*G(^\I.find*(*I)(*H))(^\J.*J(F))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.*H(^\J.find*(*J)(*I))(^\K.*K(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.*H(^\J.find*(*J)(*I))(^\K.*K(D)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*D(^\F.find*(*F)(*E))(^\G.\H.Ex I(*G(I) /\ *H(I))(^unicorn))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.*I(^\K.find*(*K)(*J))(^\L.*L(H))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*F(^\H.find*(*H)(*G))(^\I.*I(D))))
CPU Time: 0.58

yes
| ?- getpvar 0 16179 
getpval 1 759 
getstrv 2 10 
gettval 3 208 
getcon 4 391 
getnil 5 548 
getstr 6 1809 
getlist 7 665 
unipvar 8 433 
unipval 9 71 
unitvar a 798 
unitval b 191 
unicon c 39 
uninil d 18 
getnumcon e 265 
putnumcon f 8043 
putpvar 10 7150 
putpval 11 8423 
puttvar 12 94 
putstrv 13 14 
putcon 14 688 
putnil 15 7 
putstr 16 494 
putlist 17 20 
bldpvar 18 69 
bldpval 19 120 
bldtvar 1a 120 
bldtval 1b 500 
bldcon 1c 49 
bldnil 1d 18 
uninumcon 1e 0 
bldnumcon 1f 16 
getlist_tvar_tvar 48 74 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 959 
retrymeelse a1 26 
trustmeelsefail a2 689 
try a3 1996 
retry a4 2692 
trust a5 1554 
getpbreg a6 294 
gettbreg a7 1809 
putpbreg a8 310 
puttbreg a9 426 
jumptbreg aa 196 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 268 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 641 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 21 
tabletry be 39 
addtotable bf 31 
tabletrust c1 9 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 23 
return_solution c8 29 
check_complete c9 9 
return_completion ca 0 
complete_execute cb 0 
use_table cd 28 
movreg d1 1391 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 968 
subreg d8 6103 
mulreg d9 157 
divreg da 2 
idivreg db 290 
putdval e0 16821 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 3431 
allocate e9 7571 
deallocate ea 3980 
proceed eb 2614 
execute ec 2685 
unexeci ed 0 
executev ee 0 
calld ef 941 
jump f0 60 
jumpz f1 18 
jumpnz f2 4782 
jumplt f3 24 
jumple f4 960 
jumpgt f5 117 
jumpge f6 0 
cases f7 0 
fail f8 2910 
noop f9 252 
halt fa 0 
builtin fb 6793 
unifunc fc 0 
userfunc fd 0 
Total insts 123216
_______________builtins_______________
0 0 
1 33 
2 740 
3 21 
4 14 
5 1 
6 4 
7 0 
8 0 
9 0 
10 155 
11 750 
12 3094 
13 53 
14 1 
15 562 
16 0 
17 614 
18 11 
19 7 
20 21 
21 97 
22 27 
23 84 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 445 
50 5 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 21
	 number of use_tables 37
	 number of new_lookups 44
	 number of return_solutions 29
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 31
	 number of variant checks 116

yes
| ?- 
End XSB (Beta) (cputime 1.46s, elapsetime 3.66s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.seek*(B)(*C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^unicorn)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.seek*(G)(*H)(^\I.*I(F))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.seek*(H)(*I)(^\J.*J(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.seek*(D)(*E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^unicorn))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.seek*(I)(*J)(^\K.*K(H))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.seek*(F)(*G)(^\H.*H(D))))
CPU Time: 0.649

yes
| ?- getpvar 0 14611 
getpval 1 703 
getstrv 2 10 
gettval 3 208 
getcon 4 391 
getnil 5 499 
getstr 6 1627 
getlist 7 616 
unipvar 8 391 
unipval 9 64 
unitvar a 770 
unitval b 191 
unicon c 39 
uninil d 18 
getnumcon e 265 
putnumcon f 7301 
putpvar 10 6520 
putpval 11 7779 
puttvar 12 94 
putstrv 13 14 
putcon 14 639 
putnil 15 7 
putstr 16 494 
putlist 17 20 
bldpvar 18 69 
bldpval 19 120 
bldtvar 1a 120 
bldtval 1b 500 
bldcon 1c 49 
bldnil 1d 18 
uninumcon 1e 0 
bldnumcon 1f 16 
getlist_tvar_tvar 48 74 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 875 
retrymeelse a1 26 
trustmeelsefail a2 619 
try a3 1821 
retry a4 2412 
trust a5 1407 
getpbreg a6 280 
gettbreg a7 1634 
putpbreg a8 296 
puttbreg a9 391 
jumptbreg aa 196 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 268 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 606 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 21 
tabletry be 39 
addtotable bf 31 
tabletrust c1 9 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 23 
return_solution c8 29 
check_complete c9 9 
return_completion ca 0 
complete_execute cb 0 
use_table cd 28 
movreg d1 1307 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 891 
subreg d8 5522 
mulreg d9 143 
divreg da 2 
idivreg db 262 
putdval e0 15169 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 3165 
allocate e9 6829 
deallocate ea 3616 
proceed eb 2418 
execute ec 2433 
unexeci ed 0 
executev ee 0 
calld ef 857 
jump f0 60 
jumpz f1 18 
jumpnz f2 4313 
jumplt f3 24 
jumple f4 862 
jumpgt f5 117 
jumpge f6 0 
cases f7 0 
fail f8 2630 
noop f9 252 
halt fa 0 
builtin fb 6156 
unifunc fc 0 
userfunc fd 0 
Total insts 112317
_______________builtins_______________
0 0 
1 33 
2 663 
3 21 
4 14 
5 1 
6 4 
7 0 
8 0 
9 0 
10 141 
11 673 
12 2793 
13 53 
14 1 
15 506 
16 0 
17 551 
18 11 
19 7 
20 21 
21 97 
22 27 
23 84 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 396 
50 5 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 21
	 number of use_tables 37
	 number of new_lookups 44
	 number of return_solutions 29
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 31
	 number of variant checks 116

yes
| ?- 
End XSB (Beta) (cputime 1.57s, elapsetime 3.49s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^man)(^\D.\E.try_to*(D)(E)(^\F.walk*(*F)))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^man)(^\D.\E.*E(D)(^\F.\G.try_to*(F)(G)(^\H.walk*(*H))))
CPU Time: 0.24

yes
| ?- getpvar 0 4701 
getpval 1 279 
getstrv 2 10 
gettval 3 158 
getcon 4 370 
getnil 5 181 
getstr 6 617 
getlist 7 264 
unipvar 8 168 
unipval 9 16 
unitvar a 548 
unitval b 184 
unicon c 45 
uninil d 18 
getnumcon e 187 
putnumcon f 2466 
putpvar 10 2326 
putpval 11 3149 
puttvar 12 69 
putstrv 13 2 
putcon 14 279 
putnil 15 7 
putstr 16 439 
putlist 17 20 
bldpvar 18 23 
bldpval 19 56 
bldtvar 1a 109 
bldtval 1b 454 
bldcon 1c 61 
bldnil 1d 18 
uninumcon 1e 0 
bldnumcon 1f 16 
getlist_tvar_tvar 48 29 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 313 
retrymeelse a1 18 
trustmeelsefail a2 188 
try a3 585 
retry a4 693 
trust a5 428 
getpbreg a6 170 
gettbreg a7 455 
putpbreg a8 133 
puttbreg a9 102 
jumptbreg aa 143 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 206 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 355 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 15 
tableretry bd 30 
tabletry be 38 
addtotable bf 11 
tabletrust c1 8 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 3 
return_solution c8 9 
check_complete c9 8 
return_completion ca 0 
complete_execute cb 0 
use_table cd 4 
movreg d1 705 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 407 
subreg d8 1721 
mulreg d9 42 
divreg da 2 
idivreg db 60 
putdval e0 4856 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 1184 
allocate e9 2044 
deallocate ea 1211 
proceed eb 936 
execute ec 830 
unexeci ed 0 
executev ee 0 
calld ef 294 
jump f0 56 
jumpz f1 18 
jumpnz f2 1267 
jumplt f3 24 
jumple f4 270 
jumpgt f5 88 
jumpge f6 0 
cases f7 0 
fail f8 771 
noop f9 172 
halt fa 0 
builtin fb 1999 
unifunc fc 0 
userfunc fd 0 
Total insts 40141
_______________builtins_______________
0 0 
1 17 
2 191 
3 21 
4 14 
5 1 
6 4 
7 0 
8 0 
9 0 
10 35 
11 201 
12 815 
13 8 
14 1 
15 142 
16 0 
17 143 
18 11 
19 7 
20 22 
21 97 
22 28 
23 88 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 94 
50 5 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 23
	 number of use_tables 11
	 number of new_lookups 26
	 number of return_solutions 9
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 11
	 number of variant checks 70

yes
| ?- 
End XSB (Beta) (cputime 1.14s, elapsetime 3.09s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^allegedly(^\D.\E.try_to*(D)(E)(^\F.run*(*F))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.try_to*(D)(E)(^allegedly(^\F.run*(*F))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.*E(D)(^allegedly(^\F.\G.try_to*(F)(G)(^\H.run*(*H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.*E(D)(^\F.\G.try_to*(F)(G)(^allegedly(^\H.run*(*H)))))
CPU Time: 0.381

yes
| ?- getpvar 0 8163 
getpval 1 434 
getstrv 2 12 
gettval 3 218 
getcon 4 485 
getnil 5 316 
getstr 6 1011 
getlist 7 427 
unipvar 8 255 
unipval 9 30 
unitvar a 715 
unitval b 215 
unicon c 51 
uninil d 21 
getnumcon e 229 
putnumcon f 4103 
putpvar 10 3796 
putpval 11 4915 
puttvar 12 83 
putstrv 13 6 
putcon 14 466 
putnil 15 8 
putstr 16 578 
putlist 17 23 
bldpvar 18 59 
bldpval 19 103 
bldtvar 1a 145 
bldtval 1b 589 
bldcon 1c 68 
bldnil 1d 21 
uninumcon 1e 0 
bldnumcon 1f 19 
getlist_tvar_tvar 48 56 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 505 
retrymeelse a1 22 
trustmeelsefail a2 318 
try a3 1036 
retry a4 1300 
trust a5 793 
getpbreg a6 212 
gettbreg a7 827 
putpbreg a8 202 
puttbreg a9 188 
jumptbreg aa 215 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 267 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 526 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 25 
tableretry bd 30 
tabletry be 38 
addtotable bf 25 
tabletrust c1 8 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 21 
return_solution c8 33 
check_complete c9 8 
return_completion ca 0 
complete_execute cb 0 
use_table cd 20 
movreg d1 962 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 605 
subreg d8 2953 
mulreg d9 74 
divreg da 2 
idivreg db 120 
putdval e0 8347 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 1926 
allocate e9 3657 
deallocate ea 2051 
proceed eb 1507 
execute ec 1421 
unexeci ed 0 
executev ee 0 
calld ef 476 
jump f0 63 
jumpz f1 19 
jumpnz f2 2248 
jumplt f3 24 
jumple f4 471 
jumpgt f5 104 
jumpge f6 0 
cases f7 0 
fail f8 1403 
noop f9 258 
halt fa 0 
builtin fb 3386 
unifunc fc 0 
userfunc fd 0 
Total insts 66316
_______________builtins_______________
0 0 
1 19 
2 333 
3 22 
4 15 
5 1 
6 4 
7 0 
8 0 
9 0 
10 67 
11 344 
12 1475 
13 12 
14 1 
15 260 
16 0 
17 281 
18 11 
19 8 
20 27 
21 111 
22 33 
23 102 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 200 
50 6 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 23
	 number of use_tables 27
	 number of new_lookups 44
	 number of return_solutions 33
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 25
	 number of variant checks 88

yes
| ?- 
End XSB (Beta) (cputime 1.23s, elapsetime 3.25s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.*D(^\F.love*(*F)(*E))(^\G.\H.Ex I(*G(I) /\ *H(I))(^woman)))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^woman)(^\H.\I.\J.*I(^\K.love*(*K)(*J))(^\L.*L(H))(D)))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^woman)(^\H.\I.*I(D)(^\J.\K.*J(^\L.love*(*L)(*K))(^\M.*M(H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.\F.Al G(*E(G) -> *F(G))(^man)(^\H.\I.*I(H)(^\J.\K.*J(^\L.love*(*L)(*K))(^\M.*M(D)))))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.*E(D)(^\F.\G.*F(^\H.love*(*H)(*G))(^\I.\J.Ex K(*I(K) /\ *J(K))(^woman))))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^woman)(^\J.\K.\L.*K(^\M.love*(*M)(*L))(^\N.*N(J))(F))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.\F.Al G(*E(G) -> *F(G))(^man)(^\H.\I.*H(^\J.love*(*J)(*I))(^\K.*K(D))))
CPU Time: 0.68

yes
| ?- getpvar 0 19170 
getpval 1 908 
getstrv 2 12 
gettval 3 234 
getcon 4 480 
getnil 5 634 
getstr 6 2101 
getlist 7 769 
unipvar 8 506 
unipval 9 85 
unitvar a 911 
unitval b 199 
unicon c 45 
uninil d 21 
getnumcon e 319 
putnumcon f 9572 
putpvar 10 8478 
putpval 11 9986 
puttvar 12 112 
putstrv 13 14 
putcon 14 778 
putnil 15 8 
putstr 16 513 
putlist 17 23 
bldpvar 18 71 
bldpval 19 129 
bldtvar 1a 121 
bldtval 1b 516 
bldcon 1c 50 
bldnil 1d 21 
uninumcon 1e 0 
bldnumcon 1f 19 
getlist_tvar_tvar 48 75 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 1132 
retrymeelse a1 34 
trustmeelsefail a2 819 
try a3 2348 
retry a4 3148 
trust a5 1818 
getpbreg a6 350 
gettbreg a7 2144 
putpbreg a8 356 
puttbreg a9 525 
jumptbreg aa 205 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 308 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 715 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 14 
tableretry bd 22 
tabletry be 42 
addtotable bf 32 
tabletrust c1 10 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 23 
return_solution c8 29 
check_complete c9 10 
return_completion ca 0 
complete_execute cb 0 
use_table cd 28 
movreg d1 1644 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 1159 
subreg d8 7282 
mulreg d9 194 
divreg da 2 
idivreg db 360 
putdval e0 20014 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 4021 
allocate e9 8944 
deallocate ea 4703 
proceed eb 3072 
execute ec 3174 
unexeci ed 0 
executev ee 0 
calld ef 1114 
jump f0 67 
jumpz f1 19 
jumpnz f2 5693 
jumplt f3 24 
jumple f4 1151 
jumpgt f5 144 
jumpge f6 0 
cases f7 0 
fail f8 3372 
noop f9 315 
halt fa 0 
builtin fb 8069 
unifunc fc 0 
userfunc fd 0 
Total insts 145529
_______________builtins_______________
0 0 
1 41 
2 888 
3 22 
4 15 
5 1 
6 4 
7 0 
8 0 
9 0 
10 190 
11 899 
12 3671 
13 64 
14 1 
15 679 
16 0 
17 726 
18 11 
19 8 
20 26 
21 111 
22 32 
23 98 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 522 
50 6 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 23
	 number of use_tables 37
	 number of new_lookups 46
	 number of return_solutions 29
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 32
	 number of variant checks 124

yes
| ?- 
End XSB (Beta) (cputime 1.53s, elapsetime 3.80s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^\D.woman(D) /\ \E.*E(D)(^\F.walk*(*F)))(^\G.run*(*G))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^\D.woman(D) /\ \E.*E(D)(^\F.walk*(*F)))(^\G.\H.*H(G)(^\I.run*(*I)))
CPU Time: 0.3

yes
| ?- getpvar 0 5808 
getpval 1 359 
getstrv 2 14 
gettval 3 219 
getcon 4 506 
getnil 5 219 
getstr 6 770 
getlist 7 336 
unipvar 8 216 
unipval 9 18 
unitvar a 711 
unitval b 244 
unicon c 60 
uninil d 24 
getnumcon e 266 
putnumcon f 3038 
putpvar 10 2911 
putpval 11 3998 
puttvar 12 94 
putstrv 13 4 
putcon 14 331 
putnil 15 9 
putstr 16 571 
putlist 17 27 
bldpvar 18 28 
bldpval 19 80 
bldtvar 1a 138 
bldtval 1b 592 
bldcon 1c 77 
bldnil 1d 24 
uninumcon 1e 0 
bldnumcon 1f 22 
getlist_tvar_tvar 48 37 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 406 
retrymeelse a1 34 
trustmeelsefail a2 240 
try a3 705 
retry a4 816 
trust a5 508 
getpbreg a6 215 
gettbreg a7 557 
putpbreg a8 161 
puttbreg a9 124 
jumptbreg aa 167 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 269 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 444 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 34 
tableretry bd 39 
tabletry be 53 
addtotable bf 13 
tabletrust c1 11 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 6 
return_solution c8 4 
check_complete c9 11 
return_completion ca 0 
complete_execute cb 0 
use_table cd 7 
movreg d1 892 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 523 
subreg d8 2133 
mulreg d9 52 
divreg da 2 
idivreg db 72 
putdval e0 6016 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 1469 
allocate e9 2472 
deallocate ea 1486 
proceed eb 1166 
execute ec 1019 
unexeci ed 0 
executev ee 0 
calld ef 368 
jump f0 72 
jumpz f1 20 
jumpnz f2 1561 
jumplt f3 24 
jumple f4 342 
jumpgt f5 120 
jumpge f6 0 
cases f7 0 
fail f8 899 
noop f9 221 
halt fa 0 
builtin fb 2447 
unifunc fc 0 
userfunc fd 0 
Total insts 49951
_______________builtins_______________
0 0 
1 21 
2 243 
3 23 
4 16 
5 1 
6 4 
7 0 
8 0 
9 0 
10 41 
11 255 
12 993 
13 8 
14 1 
15 178 
16 0 
17 163 
18 11 
19 9 
20 32 
21 125 
22 38 
23 116 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 108 
50 7 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 32
	 number of use_tables 14
	 number of new_lookups 38
	 number of return_solutions 4
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 13
	 number of variant checks 123

yes
| ?- 
End XSB (Beta) (cputime 1.14s, elapsetime 3.15s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D)))) /\ \K.*K(^m)(^\L.\M.seek*(L)(*M)(^\N.*N(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D)))) /\ \K.*K(^m)(^\L.\M.*M(L)(^\N.\O.seek*(N)(*O)(^\P.*P(D)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.seek*(F)(*G)(^\H.*H(D))) /\ \I.*I(^m)(^\J.\K.seek*(J)(*K)(^\L.*L(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.seek*(F)(*G)(^\H.*H(D))) /\ \I.*I(^m)(^\J.\K.*K(J)(^\L.\M.seek*(L)(*M)(^\N.*N(D)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.seek*(J)(*K)(^\L.*L(D)))) /\ \M.*M(F)(^\N.\O.seek*(N)(*O)(^\P.*P(D)))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.seek*(J)(*K)(^\L.*L(F)))) /\ \M.*M(B)(^\N.\O.seek*(N)(*O)(^\P.*P(F)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^m)(^\H.\I.*I(B)(^\J.\K.seek*(J)(*K)(^\L.*L(F))) /\ \M.*M(H)(^\N.\O.seek*(N)(*O)(^\P.*P(F))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(F)(^\J.\K.seek*(J)(*K)(^\L.*L(D))) /\ \M.*M(H)(^\N.\O.seek*(N)(*O)(^\P.*P(D))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(B)(^\J.\K.seek*(J)(*K)(^\L.*L(H))) /\ \M.*M(D)(^\N.\O.seek*(N)(*O)(^\P.*P(H))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.*I(D)(^\J.\K.seek*(J)(*K)(^\L.*L(H))) /\ \M.*M(B)(^\N.\O.seek*(N)(*O)(^\P.*P(H))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.seek*(J)(*K)(^\L.*L(D))) /\ \M.*M(F)(^\N.\O.seek*(N)(*O)(^\P.*P(D))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.seek*(J)(*K)(^\L.*L(F))) /\ \M.*M(B)(^\N.\O.seek*(N)(*O)(^\P.*P(F))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.seek*(H)(*I)(^\J.*J(F))) /\ \K.*K(^m)(^\L.\M.*M(L)(^\N.\O.seek*(N)(*O)(^\P.*P(F))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D))) /\ \K.*K(^m)(^\L.\M.*M(L)(^\N.\O.seek*(N)(*O)(^\P.*P(D))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.seek*(H)(*I)(^\J.*J(F))) /\ \K.*K(^m)(^\L.\M.seek*(L)(*M)(^\N.*N(F)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.seek*(H)(*I)(^\J.*J(D))) /\ \K.*K(^m)(^\L.\M.seek*(L)(*M)(^\N.*N(D)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.seek*(H)(*I)(^\J.*J(D))) /\ \K.*K(F)(^\L.\M.seek*(L)(*M)(^\N.*N(D)))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(^j)(^\H.\I.seek*(H)(*I)(^\J.*J(F))) /\ \K.*K(B)(^\L.\M.seek*(L)(*M)(^\N.*N(F)))))
CPU Time: 2.409

yes
| ?- getpvar 0 63356 
getpval 1 2998 
getstrv 2 18 
gettval 3 552 
getcon 4 1758 
getnil 5 1982 
getstr 6 7210 
getlist 7 2346 
unipvar 8 1470 
unipval 9 274 
unitvar a 3206 
unitval b 904 
unicon c 99 
uninil d 30 
getnumcon e 1344 
putnumcon f 31553 
putpvar 10 28707 
putpval 11 32505 
puttvar 12 333 
putstrv 13 69 
putcon 14 2556 
putnil 15 11 
putstr 16 2082 
putlist 17 32 
bldpvar 18 281 
bldpval 19 418 
bldtvar 1a 550 
bldtval 1b 2141 
bldcon 1c 237 
bldnil 1d 30 
uninumcon 1e 0 
bldnumcon 1f 28 
getlist_tvar_tvar 48 355 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 3995 
retrymeelse a1 202 
trustmeelsefail a2 3028 
try a3 7993 
retry a4 10898 
trust a5 6204 
getpbreg a6 1073 
gettbreg a7 7799 
putpbreg a8 1117 
puttbreg a9 1841 
jumptbreg aa 740 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 846 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 2199 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 80 
tableretry bd 113 
tabletry be 187 
addtotable bf 100 
tabletrust c1 37 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 41 
return_solution c8 155 
check_complete c9 37 
return_completion ca 0 
complete_execute cb 0 
use_table cd 124 
movreg d1 5235 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 3249 
subreg d8 25091 
mulreg d9 600 
divreg da 2 
idivreg db 1160 
putdval e0 66322 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 13530 
allocate e9 30308 
deallocate ea 15435 
proceed eb 9823 
execute ec 10567 
unexeci ed 0 
executev ee 0 
calld ef 3911 
jump f0 112 
jumpz f1 22 
jumpnz f2 19854 
jumplt f3 24 
jumple f4 3785 
jumpgt f5 449 
jumpge f6 0 
cases f7 0 
fail f8 11796 
noop f9 1283 
halt fa 0 
builtin fb 27193 
unifunc fc 0 
userfunc fd 0 
Total insts 487995
_______________builtins_______________
0 0 
1 189 
2 3224 
3 25 
4 18 
5 1 
6 4 
7 0 
8 0 
9 0 
10 601 
11 3238 
12 12576 
13 416 
14 1 
15 2329 
16 0 
17 2357 
18 11 
19 11 
20 42 
21 153 
22 48 
23 144 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 1742 
50 9 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 105
	 number of use_tables 141
	 number of new_lookups 146
	 number of return_solutions 155
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 100
	 number of variant checks 1681

yes
| ?- 
End XSB (Beta) (cputime 3.39s, elapsetime 5.70s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.\D.*B(^\E.in*(*E)(C)(D))(^\F.\G.Ex H(*F(H) /\ *G(H))(^park))(^\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.walk*(*L)))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.\G.*E(^\H.in*(*H)(F)(G))(^\I.\J.Ex K(*I(K) /\ *J(K))(^park))(^\L.walk*(*L)))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(I))(^\O.walk*(*O))(E)))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.*F(E)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(K))(^\Q.walk*(*Q))(G))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^park)(^\G.\H.*H(^m)(^\I.\J.*J(I)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(G))(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(E)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(I))(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.*F(E)(^\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.\L.Ex M(*K(M) /\ *L(M))(^park))(^\N.walk*(*N))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^park)(^\G.\H.*H(^m)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(G))(^\N.walk*(*N))))))
top level solution\A.*A(^j)(^\B.\C.\D.*B(^\E.in*(*E)(C)(D))(^\F.\G.Ex H(*F(H) /\ *G(H))(^park))(^\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.\M.*M(L)(^\N.walk*(*N))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.*K(F))(^\L.\M.believe_that*(L)(M)(^\N.*N(^m)(^\O.\P.*P(O)(^\Q.walk*(*Q)))))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.*K(D)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(J))(^\Q.walk*(*Q)))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(^m)(^\J.\K.*K(J)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(F))(^\Q.walk*(*Q)))))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.*G(D)(^\H.\I.\J.Ex K(*I(K) /\ *J(K))(^park)(^\L.\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(L))(^\R.walk*(*R))(H))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.*H(^m)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(I)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.walk*(*R))))(G))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(I))(^\R.walk*(*R))))(E))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.*G(D)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.\M.Ex N(*L(N) /\ *M(N))(^park))(^\O.walk*(*O))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.*H(^m)(^\I.\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(F))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(I)(^\R.walk*(*R))))(G))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(I))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(D)(^\R.walk*(*R))))(E))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.\G.*E(^\H.in*(*H)(F)(G))(^\I.\J.Ex K(*I(K) /\ *J(K))(^park))(^\L.\M.believe_that*(L)(M)(^\N.*N(D)(^\O.walk*(*O))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(^m)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(F))(^\O.walk*(*O))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.*K(F))(^\L.\M.believe_that*(L)(M)(^\N.*N(^m)(^\O.walk*(*O))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.*B(^\E.in*(*E)(C)(D))(^\F.\G.Ex H(*F(H) /\ *G(H))(^park))(^\I.\J.*J(^m)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(K)(^\O.walk*(*O)))(I))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.*K(F))(^\L.\M.*M(^m)(^\N.\O.\P.believe_that*(O)(P)(^\Q.*Q(N)(^\R.walk*(*R)))(L)))(B)))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.believe_that*(H)(I)(^\J.*J(B)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(F))(^\P.walk*(*P)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.believe_that*(H)(I)(^\J.*J(F)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(D))(^\P.walk*(*P)))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.\N.believe_that*(M)(N)(^\O.*O(B)(^\P.walk*(*P)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.\N.believe_that*(M)(N)(^\O.*O(F)(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.\N.*N(^m)(^\O.\P.\Q.believe_that*(P)(Q)(^\R.*R(O)(^\S.walk*(*S)))(M))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.\N.*N(^m)(^\O.\P.\Q.believe_that*(P)(Q)(^\R.*R(O)(^\S.walk*(*S)))(M))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(J))(^\P.\Q.believe_that*(P)(Q)(^\R.*R(D)(^\S.walk*(*S))))(F)))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(J))(^\P.\Q.believe_that*(P)(Q)(^\R.*R(B)(^\S.walk*(*S))))(F)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.*I(^m)(^\J.\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(F))(^\P.\Q.believe_that*(P)(Q)(^\R.*R(J)(^\S.walk*(*S))))(H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.*I(^m)(^\J.\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(D))(^\P.\Q.believe_that*(P)(Q)(^\R.*R(J)(^\S.walk*(*S))))(H)))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(D)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(J))(^\S.walk*(*S))))(F)))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(B)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(J))(^\S.walk*(*S))))(F)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.*I(^m)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(F))(^\S.walk*(*S))))(H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.*I(^m)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(D))(^\S.walk*(*S))))(H)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.\N.believe_that*(M)(N)(^\O.*O(^m)(^\P.\Q.*Q(P)(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.\N.believe_that*(M)(N)(^\O.*O(^m)(^\P.\Q.*Q(P)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.*L(D)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(K))(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.*L(B)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(K))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.*L(K)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.*L(K)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(D))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.*H(D)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(M))(^\S.walk*(*S))(I)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.*H(B)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(M))(^\S.walk*(*S))(I)))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(H))(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(D)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(H))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^m)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(F)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(D))(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(F)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(D))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.*H(D)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.\N.Ex O(*M(O) /\ *N(O))(^park))(^\P.walk*(*P)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.*H(B)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.\N.Ex O(*M(O) /\ *N(O))(^park))(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(B)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(H))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(D)(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(D)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(H))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(B)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^m)(^\H.\I.*I(B)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(F))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(H)(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(F)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(D))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(H)(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(F))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(B)(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(D))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(F)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.\K.Ex L(*J(L) /\ *K(L))(^park))(^\M.\N.believe_that*(M)(N)(^\O.*O(D)(^\P.walk*(*P)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.\K.Ex L(*J(L) /\ *K(L))(^park))(^\M.\N.believe_that*(M)(N)(^\O.*O(B)(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(F))(^\P.walk*(*P)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(D))(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.\N.believe_that*(M)(N)(^\O.*O(^m)(^\P.walk*(*P)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.\N.believe_that*(M)(N)(^\O.*O(^m)(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.\L.believe_that*(K)(L)(^\M.*M(^m)(^\N.walk*(*N))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.\L.Ex M(*K(M) /\ *L(M))(^park))(^\N.walk*(*N))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(K))(^\Q.walk*(*Q))(G))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.*H(G)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(M))(^\S.walk*(*S))(I)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(^m)(^\K.\L.*L(K)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(I))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.*L(G)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(K))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.*H(G)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.\N.Ex O(*M(O) /\ *N(O))(^park))(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(^m)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(I))(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.\L.believe_that*(K)(L)(^\M.*M(^m)(^\N.\O.*O(N)(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.\O.believe_that*(N)(O)(^\P.*P(^m)(^\Q.\R.*R(Q)(^\S.walk*(*S)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.\J.Ex K(*I(K) /\ *J(K))(^park)(^\L.\M.*M(F)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(L))(^\S.walk*(*S)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.\M.*M(L)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(H))(^\S.walk*(*S)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(F)(^\J.\K.\L.Ex M(*K(M) /\ *L(M))(^park)(^\N.\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(N))(^\T.walk*(*T))(J))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.*J(^m)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(K)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(H))(^\T.walk*(*T))))(I))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(F)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(K))(^\T.walk*(*T))))(G))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(F)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.\O.Ex P(*N(P) /\ *O(P))(^park))(^\Q.walk*(*Q))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.*J(^m)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(H))(^\Q.\R.believe_that*(Q)(R)(^\S.*S(K)(^\T.walk*(*T))))(I))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(K))(^\Q.\R.believe_that*(Q)(R)(^\S.*S(F)(^\T.walk*(*T))))(G))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.\L.Ex M(*K(M) /\ *L(M))(^park))(^\N.\O.believe_that*(N)(O)(^\P.*P(F)(^\Q.walk*(*Q))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(H))(^\Q.walk*(*Q))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.\O.believe_that*(N)(O)(^\P.*P(^m)(^\Q.walk*(*Q))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.\L.*L(^m)(^\M.\N.\O.believe_that*(N)(O)(^\P.*P(M)(^\Q.walk*(*Q)))(K)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.\O.*O(^m)(^\P.\Q.\R.believe_that*(Q)(R)(^\S.*S(P)(^\T.walk*(*T)))(N)))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.*J(D))(^\K.\L.believe_that*(K)(L)(^\M.*M(^m)(^\N.walk*(*N))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.believe_that*(F)(G)(^\H.*H(^m)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(D))(^\N.walk*(*N))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.\L.believe_that*(K)(L)(^\M.*M(B)(^\N.walk*(*N))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.*F(B)(^\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.\L.Ex M(*K(M) /\ *L(M))(^park))(^\N.walk*(*N))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.*F(B)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(K))(^\Q.walk*(*Q))(G))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.believe_that*(F)(G)(^\H.*H(^m)(^\I.\J.*J(I)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(D))(^\P.walk*(*P)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(B)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(I))(^\P.walk*(*P)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.*J(D))(^\K.\L.believe_that*(K)(L)(^\M.*M(^m)(^\N.\O.*O(N)(^\P.walk*(*P)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(H)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(D))(^\Q.walk*(*Q))))(F))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(B)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(H))(^\Q.walk*(*Q))))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(D))(^\N.\O.believe_that*(N)(O)(^\P.*P(H)(^\Q.walk*(*Q))))(F))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.\O.believe_that*(N)(O)(^\P.*P(B)(^\Q.walk*(*Q))))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.*J(D))(^\K.\L.*L(^m)(^\M.\N.\O.believe_that*(N)(O)(^\P.*P(M)(^\Q.walk*(*Q)))(K)))))
CPU Time: 13.29

yes
| ?- getpvar 0 354672 
getpval 1 14678 
getstrv 2 16 
gettval 3 1424 
getcon 4 2864 
getnil 5 11386 
getstr 6 38450 
getlist 7 12335 
unipvar 8 8021 
unipval 9 1726 
unitvar a 10800 
unitval b 1158 
unicon c 69 
uninil d 27 
getnumcon e 2200 
putnumcon f 171881 
putpvar 10 148877 
putpval 11 163129 
puttvar 12 764 
putstrv 13 274 
putcon 14 12798 
putnil 15 10 
putstr 16 4031 
putlist 17 29 
bldpvar 18 1145 
bldpval 19 1573 
bldtvar 1a 1090 
bldtval 1b 4027 
bldcon 1c 206 
bldnil 1d 27 
uninumcon 1e 0 
bldnumcon 1f 25 
getlist_tvar_tvar 48 1091 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 19825 
retrymeelse a1 259 
trustmeelsefail a2 15005 
try a3 43659 
retry a4 62788 
trust a5 34648 
getpbreg a6 4254 
gettbreg a7 41338 
putpbreg a8 5701 
puttbreg a9 10228 
jumptbreg aa 1970 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 2081 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 8952 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 159 
tableretry bd 55 
tabletry be 105 
addtotable bf 462 
tabletrust c1 21 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 341 
return_solution c8 782 
check_complete c9 21 
return_completion ca 0 
complete_execute cb 0 
use_table cd 516 
movreg d1 22756 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 17669 
subreg d8 134168 
mulreg d9 3567 
divreg da 2 
idivreg db 7098 
putdval e0 366819 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 68775 
allocate e9 170155 
deallocate ea 85236 
proceed eb 51774 
execute ec 57373 
unexeci ed 0 
executev ee 0 
calld ef 19662 
jump f0 97 
jumpz f1 21 
jumpnz f2 107429 
jumplt f3 24 
jumple f4 21110 
jumpgt f5 1001 
jumpge f6 0 
cases f7 0 
fail f8 65436 
noop f9 2375 
halt fa 0 
builtin fb 147472 
unifunc fc 0 
userfunc fd 0 
Total insts 2573992
_______________builtins_______________
0 0 
1 501 
2 16485 
3 24 
4 17 
5 1 
6 4 
7 0 
8 0 
9 0 
10 3653 
11 16498 
12 70199 
13 1281 
14 1 
15 12932 
16 0 
17 14552 
18 11 
19 10 
20 39 
21 139 
22 45 
23 133 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 10885 
50 8 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 55
	 number of use_tables 545
	 number of new_lookups 396
	 number of return_solutions 782
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 462
	 number of variant checks 16361

yes
| ?- 
End XSB (Beta) (cputime 14.15s, elapsetime 18.42s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.\D.*B(^\E.in*(*E)(C)(D))(^\F.\G.Ex H(*F(H) /\ *G(H))(^park))(^\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.\M.wish_to*(L)(M)(^\N.walk*(*N))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.\G.*E(^\H.in*(*H)(F)(G))(^\I.\J.Ex K(*I(K) /\ *J(K))(^park))(^\L.\M.wish_to*(L)(M)(^\N.walk*(*N))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.wish_to*(E)(F)(^\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.\L.Ex M(*K(M) /\ *L(M))(^park))(^\N.walk*(*N))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.wish_to*(E)(F)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(K))(^\Q.walk*(*Q))(G))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.\K.wish_to*(J)(K)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(I))(^\Q.walk*(*Q)))(E)))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(I))(^\O.\P.wish_to*(O)(P)(^\Q.walk*(*Q)))(E)))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.*F(E)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(K))(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))(G))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.*F(E)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.wish_to*(L)(M)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(K))(^\S.walk*(*S)))(G))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.*F(E)(^\G.\H.wish_to*(G)(H)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(M))(^\S.walk*(*S))(I)))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^park)(^\G.\H.*H(^m)(^\I.\J.*J(I)(^\K.\L.wish_to*(K)(L)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(G))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(E)(^\K.\L.wish_to*(K)(L)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(I))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.*F(E)(^\G.\H.wish_to*(G)(H)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.\N.Ex O(*M(O) /\ *N(O))(^park))(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^park)(^\G.\H.*H(^m)(^\I.\J.*J(I)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(G))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(E)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(I))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.*D(^m)(^\E.\F.*F(E)(^\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.\L.Ex M(*K(M) /\ *L(M))(^park))(^\N.\O.wish_to*(N)(O)(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^park)(^\G.\H.*H(^m)(^\I.\J.wish_to*(I)(J)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(G))(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.believe_that*(B)(C)(^\D.\E.Ex F(*D(F) /\ *E(F))(^park)(^\G.\H.*H(^m)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(G))(^\N.\O.wish_to*(N)(O)(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.\D.*B(^\E.in*(*E)(C)(D))(^\F.\G.Ex H(*F(H) /\ *G(H))(^park))(^\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.\M.*M(L)(^\N.\O.wish_to*(N)(O)(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.*K(F))(^\L.\M.believe_that*(L)(M)(^\N.*N(^m)(^\O.\P.*P(O)(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S))))))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.*K(D)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(J))(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S))))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(^m)(^\J.\K.*K(J)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(F))(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S))))))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.*K(D)(^\L.\M.wish_to*(L)(M)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(J))(^\S.walk*(*S))))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(^m)(^\J.\K.*K(J)(^\L.\M.wish_to*(L)(M)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(F))(^\S.walk*(*S))))))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.*G(D)(^\H.\I.\J.Ex K(*I(K) /\ *J(K))(^park)(^\L.\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(L))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))(H))))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.*G(D)(^\H.\I.\J.Ex K(*I(K) /\ *J(K))(^park)(^\L.\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(L))(^\T.walk*(*T)))(H))))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.*G(D)(^\H.\I.wish_to*(H)(I)(^\J.\K.\L.Ex M(*K(M) /\ *L(M))(^park)(^\N.\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(N))(^\T.walk*(*T))(J)))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.*H(^m)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(I)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(F))(^\T.walk*(*T)))))(G))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(I))(^\T.walk*(*T)))))(E))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.*G(D)(^\H.\I.wish_to*(H)(I)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.\O.Ex P(*N(P) /\ *O(P))(^park))(^\Q.walk*(*Q)))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.*H(^m)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(I)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))(G))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(I))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))(E))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.believe_that*(E)(F)(^\G.*G(D)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.\M.Ex N(*L(N) /\ *M(N))(^park))(^\O.\P.wish_to*(O)(P)(^\Q.walk*(*Q)))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.*H(^m)(^\I.\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(F))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(I)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))(G))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(I))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(D)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))(E))(B)))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.\G.*E(^\H.in*(*H)(F)(G))(^\I.\J.Ex K(*I(K) /\ *J(K))(^park))(^\L.\M.believe_that*(L)(M)(^\N.*N(D)(^\O.\P.wish_to*(O)(P)(^\Q.walk*(*Q)))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(^m)(^\J.\K.wish_to*(J)(K)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(F))(^\Q.walk*(*Q)))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(^m)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(F))(^\O.\P.wish_to*(O)(P)(^\Q.walk*(*Q)))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.*K(F))(^\L.\M.believe_that*(L)(M)(^\N.*N(^m)(^\O.\P.wish_to*(O)(P)(^\Q.walk*(*Q)))))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.*B(^\E.in*(*E)(C)(D))(^\F.\G.Ex H(*F(H) /\ *G(H))(^park))(^\I.\J.*J(^m)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(K)(^\O.\P.wish_to*(O)(P)(^\Q.walk*(*Q))))(I))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.*K(F))(^\L.\M.*M(^m)(^\N.\O.\P.believe_that*(O)(P)(^\Q.*Q(N)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T))))(L)))(B)))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.believe_that*(H)(I)(^\J.*J(B)(^\K.\L.wish_to*(K)(L)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.believe_that*(H)(I)(^\J.*J(F)(^\K.\L.wish_to*(K)(L)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(D))(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.believe_that*(H)(I)(^\J.*J(B)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(F))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.believe_that*(H)(I)(^\J.*J(F)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(D))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.\N.believe_that*(M)(N)(^\O.*O(B)(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.\N.believe_that*(M)(N)(^\O.*O(F)(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.\N.*N(^m)(^\O.\P.\Q.believe_that*(P)(Q)(^\R.*R(O)(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U))))(M))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.\N.*N(^m)(^\O.\P.\Q.believe_that*(P)(Q)(^\R.*R(O)(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U))))(M))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(J))(^\P.\Q.believe_that*(P)(Q)(^\R.*R(D)(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))))(F)))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(J))(^\P.\Q.believe_that*(P)(Q)(^\R.*R(B)(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))))(F)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.*I(^m)(^\J.\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(F))(^\P.\Q.believe_that*(P)(Q)(^\R.*R(J)(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))))(H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.*I(^m)(^\J.\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(D))(^\P.\Q.believe_that*(P)(Q)(^\R.*R(J)(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))))(H)))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(D)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(J))(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))))(F)))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(B)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(J))(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))))(F)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.*I(^m)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(F))(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))))(H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.*I(^m)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(D))(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))))(H)))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(D)(^\N.\O.wish_to*(N)(O)(^\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(J))(^\U.walk*(*U)))))(F)))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^park)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(B)(^\N.\O.wish_to*(N)(O)(^\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(J))(^\U.walk*(*U)))))(F)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.*I(^m)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.wish_to*(N)(O)(^\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(F))(^\U.walk*(*U)))))(H)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.*I(^m)(^\J.\K.\L.believe_that*(K)(L)(^\M.*M(J)(^\N.\O.wish_to*(N)(O)(^\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(D))(^\U.walk*(*U)))))(H)))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.\N.believe_that*(M)(N)(^\O.*O(^m)(^\P.\Q.*Q(P)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.\N.believe_that*(M)(N)(^\O.*O(^m)(^\P.\Q.*Q(P)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.*L(D)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(K))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.*L(B)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(K))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.*L(K)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.*L(K)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(D))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.*L(D)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(K))(^\T.walk*(*T)))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.*L(B)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(K))(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.*L(K)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(F))(^\T.walk*(*T)))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.*L(K)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(D))(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.*H(D)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(M))(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))(I)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.*H(B)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(M))(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))(I)))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.*H(D)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.wish_to*(N)(O)(^\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(M))(^\U.walk*(*U)))(I)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.*H(B)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.wish_to*(N)(O)(^\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(M))(^\U.walk*(*U)))(I)))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.*H(D)(^\I.\J.wish_to*(I)(J)(^\K.\L.\M.Ex N(*L(N) /\ *M(N))(^park)(^\O.\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(O))(^\U.walk*(*U))(K))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.*H(B)(^\I.\J.wish_to*(I)(J)(^\K.\L.\M.Ex N(*L(N) /\ *M(N))(^park)(^\O.\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(O))(^\U.walk*(*U))(K))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(H))(^\T.walk*(*T)))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(D)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(H))(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^m)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(F))(^\T.walk*(*T)))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(F)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(D))(^\T.walk*(*T)))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(F))(^\T.walk*(*T)))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(F)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(D))(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.*H(D)(^\I.\J.wish_to*(I)(J)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.\P.Ex Q(*O(Q) /\ *P(Q))(^park))(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.*H(B)(^\I.\J.wish_to*(I)(J)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.\P.Ex Q(*O(Q) /\ *P(Q))(^park))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(D)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(H))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(D)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(H))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^m)(^\H.\I.*I(B)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(F)(^\J.\K.believe_that*(J)(K)(^\L.*L(H)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(D))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(B)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.believe_that*(J)(K)(^\L.*L(F)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(D))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.believe_that*(F)(G)(^\H.*H(D)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.\N.Ex O(*M(O) /\ *N(O))(^park))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.believe_that*(F)(G)(^\H.*H(B)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.\N.Ex O(*M(O) /\ *N(O))(^park))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(B)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(H))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(D)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.*I(D)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(H))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(B)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^m)(^\H.\I.*I(B)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(F))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(H)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.*I(F)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(D))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(H)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^m)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(F))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(B)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^m)(^\F.\G.*G(^j)(^\H.\I.*I(H)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.*N(D))(^\O.\P.believe_that*(O)(P)(^\Q.*Q(F)(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(^m)(^\D.\E.*E(B)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.\K.Ex L(*J(L) /\ *K(L))(^park))(^\M.\N.believe_that*(M)(N)(^\O.*O(D)(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.*E(D)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.\K.Ex L(*J(L) /\ *K(L))(^park))(^\M.\N.believe_that*(M)(N)(^\O.*O(B)(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.wish_to*(K)(L)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(F))(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.wish_to*(K)(L)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(D))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(F))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.believe_that*(H)(I)(^\J.*J(^m)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(D))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^park)(^\F.\G.*G(B)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(F))(^\M.\N.believe_that*(M)(N)(^\O.*O(^m)(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.\J.*H(^\K.in*(*K)(I)(J))(^\L.*L(D))(^\M.\N.believe_that*(M)(N)(^\O.*O(^m)(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.\L.believe_that*(K)(L)(^\M.*M(^m)(^\N.\O.wish_to*(N)(O)(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.\L.Ex M(*K(M) /\ *L(M))(^park))(^\N.\O.wish_to*(N)(O)(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.wish_to*(G)(H)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.\N.Ex O(*M(O) /\ *N(O))(^park))(^\P.walk*(*P)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.wish_to*(G)(H)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(M))(^\S.walk*(*S))(I)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.wish_to*(L)(M)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(K))(^\S.walk*(*S)))(G))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(K))(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))(G))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.*H(G)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(M))(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U)))(I)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.*H(G)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.wish_to*(N)(O)(^\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(M))(^\U.walk*(*U)))(I)))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.*H(G)(^\I.\J.wish_to*(I)(J)(^\K.\L.\M.Ex N(*L(N) /\ *M(N))(^park)(^\O.\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(O))(^\U.walk*(*U))(K))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(^m)(^\K.\L.*L(K)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(I))(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.*L(G)(^\M.\N.wish_to*(M)(N)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(K))(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.*H(G)(^\I.\J.wish_to*(I)(J)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.\P.Ex Q(*O(Q) /\ *P(Q))(^park))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(^m)(^\K.\L.*L(K)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(I))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.*L(G)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(K))(^\R.\S.wish_to*(R)(S)(^\T.walk*(*T)))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.*F(^m)(^\G.\H.*H(G)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.\N.Ex O(*M(O) /\ *N(O))(^park))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(^m)(^\K.\L.wish_to*(K)(L)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(I))(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(^m)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(I))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.\L.believe_that*(K)(L)(^\M.*M(^m)(^\N.\O.*O(N)(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.\O.believe_that*(N)(O)(^\P.*P(^m)(^\Q.\R.*R(Q)(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U))))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.\J.Ex K(*I(K) /\ *J(K))(^park)(^\L.\M.*M(F)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(L))(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U))))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.\M.*M(L)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(H))(^\S.\T.wish_to*(S)(T)(^\U.walk*(*U))))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.\J.Ex K(*I(K) /\ *J(K))(^park)(^\L.\M.*M(F)(^\N.\O.wish_to*(N)(O)(^\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(L))(^\U.walk*(*U))))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.\M.*M(L)(^\N.\O.wish_to*(N)(O)(^\P.\Q.\R.*P(^\S.in*(*S)(Q)(R))(^\T.*T(H))(^\U.walk*(*U))))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(F)(^\J.\K.\L.Ex M(*K(M) /\ *L(M))(^park)(^\N.\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(N))(^\T.\U.wish_to*(T)(U)(^\V.walk*(*V)))(J))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(F)(^\J.\K.\L.Ex M(*K(M) /\ *L(M))(^park)(^\N.\O.\P.wish_to*(O)(P)(^\Q.\R.\S.*Q(^\T.in*(*T)(R)(S))(^\U.*U(N))(^\V.walk*(*V)))(J))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(F)(^\J.\K.wish_to*(J)(K)(^\L.\M.\N.Ex O(*M(O) /\ *N(O))(^park)(^\P.\Q.\R.\S.*Q(^\T.in*(*T)(R)(S))(^\U.*U(P))(^\V.walk*(*V))(L)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.*J(^m)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(K)(^\O.\P.wish_to*(O)(P)(^\Q.\R.\S.*Q(^\T.in*(*T)(R)(S))(^\U.*U(H))(^\V.walk*(*V)))))(I))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(F)(^\O.\P.wish_to*(O)(P)(^\Q.\R.\S.*Q(^\T.in*(*T)(R)(S))(^\U.*U(K))(^\V.walk*(*V)))))(G))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(F)(^\J.\K.wish_to*(J)(K)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.\Q.Ex R(*P(R) /\ *Q(R))(^park))(^\S.walk*(*S)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.*J(^m)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(K)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(H))(^\T.\U.wish_to*(T)(U)(^\V.walk*(*V)))))(I))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.believe_that*(L)(M)(^\N.*N(F)(^\O.\P.\Q.*O(^\R.in*(*R)(P)(Q))(^\S.*S(K))(^\T.\U.wish_to*(T)(U)(^\V.walk*(*V)))))(G))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.believe_that*(G)(H)(^\I.*I(F)(^\J.\K.\L.*J(^\M.in*(*M)(K)(L))(^\N.\O.Ex P(*N(P) /\ *O(P))(^park))(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.*J(^m)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(H))(^\Q.\R.believe_that*(Q)(R)(^\S.*S(K)(^\T.\U.wish_to*(T)(U)(^\V.walk*(*V)))))(I))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(K))(^\Q.\R.believe_that*(Q)(R)(^\S.*S(F)(^\T.\U.wish_to*(T)(U)(^\V.walk*(*V)))))(G))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.*E(^m)(^\F.\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.\L.Ex M(*K(M) /\ *L(M))(^park))(^\N.\O.believe_that*(N)(O)(^\P.*P(F)(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.\M.wish_to*(L)(M)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(H))(^\S.walk*(*S)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(^m)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(H))(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.\O.believe_that*(N)(O)(^\P.*P(^m)(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))))(D))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.\L.*L(^m)(^\M.\N.\O.believe_that*(N)(O)(^\P.*P(M)(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S))))(K)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.\O.*O(^m)(^\P.\Q.\R.believe_that*(Q)(R)(^\S.*S(P)(^\T.\U.wish_to*(T)(U)(^\V.walk*(*V))))(N)))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.*J(D))(^\K.\L.believe_that*(K)(L)(^\M.*M(^m)(^\N.\O.wish_to*(N)(O)(^\P.walk*(*P)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.believe_that*(F)(G)(^\H.*H(^m)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(D))(^\N.\O.wish_to*(N)(O)(^\P.walk*(*P)))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.believe_that*(F)(G)(^\H.*H(^m)(^\I.\J.wish_to*(I)(J)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(D))(^\P.walk*(*P)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.*D(^\G.in*(*G)(E)(F))(^\H.\I.Ex J(*H(J) /\ *I(J))(^park))(^\K.\L.believe_that*(K)(L)(^\M.*M(B)(^\N.\O.wish_to*(N)(O)(^\P.walk*(*P)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.*F(B)(^\G.\H.\I.*G(^\J.in*(*J)(H)(I))(^\K.\L.Ex M(*K(M) /\ *L(M))(^park))(^\N.\O.wish_to*(N)(O)(^\P.walk*(*P)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.*F(B)(^\G.\H.wish_to*(G)(H)(^\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.\N.Ex O(*M(O) /\ *N(O))(^park))(^\P.walk*(*P)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.*F(B)(^\G.\H.wish_to*(G)(H)(^\I.\J.\K.Ex L(*J(L) /\ *K(L))(^park)(^\M.\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(M))(^\S.walk*(*S))(I)))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.*F(B)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.wish_to*(L)(M)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(K))(^\S.walk*(*S)))(G))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.*F(B)(^\G.\H.\I.Ex J(*H(J) /\ *I(J))(^park)(^\K.\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(K))(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))(G))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.believe_that*(F)(G)(^\H.*H(^m)(^\I.\J.*J(I)(^\K.\L.wish_to*(K)(L)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(D))(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(B)(^\K.\L.wish_to*(K)(L)(^\M.\N.\O.*M(^\P.in*(*P)(N)(O))(^\Q.*Q(I))(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.believe_that*(F)(G)(^\H.*H(^m)(^\I.\J.*J(I)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(D))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.believe_that*(D)(E)(^\F.\G.Ex H(*F(H) /\ *G(H))(^park)(^\I.\J.*J(B)(^\K.\L.\M.*K(^\N.in*(*N)(L)(M))(^\O.*O(I))(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.*J(D))(^\K.\L.believe_that*(K)(L)(^\M.*M(^m)(^\N.\O.*O(N)(^\P.\Q.wish_to*(P)(Q)(^\R.walk*(*R))))))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(H)(^\L.\M.wish_to*(L)(M)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(D))(^\S.walk*(*S)))))(F))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(B)(^\L.\M.wish_to*(L)(M)(^\N.\O.\P.*N(^\Q.in*(*Q)(O)(P))(^\R.*R(H))(^\S.walk*(*S)))))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(H)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(D))(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))))(F))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.believe_that*(I)(J)(^\K.*K(B)(^\L.\M.\N.*L(^\O.in*(*O)(M)(N))(^\P.*P(H))(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.*G(^m)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(D))(^\N.\O.believe_that*(N)(O)(^\P.*P(H)(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))))(F))))
top level solution\A.*A(^m)(^\B.\C.*C(^j)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^park)(^\H.\I.\J.\K.*I(^\L.in*(*L)(J)(K))(^\M.*M(H))(^\N.\O.believe_that*(N)(O)(^\P.*P(B)(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S)))))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^park)(^\D.\E.*E(^j)(^\F.\G.\H.*F(^\I.in*(*I)(G)(H))(^\J.*J(D))(^\K.\L.*L(^m)(^\M.\N.\O.believe_that*(N)(O)(^\P.*P(M)(^\Q.\R.wish_to*(Q)(R)(^\S.walk*(*S))))(K)))))
CPU Time: 24.849

yes
| ?- getpvar 0 644737 
getpval 1 26145 
getstrv 2 18 
gettval 3 2214 
getcon 4 4848 
getnil 5 20819 
getstr 6 70082 
getlist 7 22301 
unipvar 8 14530 
unipval 9 3194 
unitvar a 19181 
unitval b 1840 
unicon c 87 
uninil d 30 
getnumcon e 3268 
putnumcon f 310810 
putpvar 10 267690 
putpval 11 292197 
puttvar 12 1146 
putstrv 13 443 
putcon 14 23032 
putnil 15 11 
putstr 16 6617 
putlist 17 32 
bldpvar 18 1889 
bldpval 19 2554 
bldtvar 1a 1818 
bldtval 1b 6632 
bldcon 1c 335 
bldnil 1d 30 
uninumcon 1e 0 
bldnumcon 1f 28 
getlist_tvar_tvar 48 1781 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 35448 
retrymeelse a1 387 
trustmeelsefail a2 26513 
try a3 79088 
retry a4 114615 
trust a5 62843 
getpbreg a6 7562 
gettbreg a7 74170 
putpbreg a8 10330 
puttbreg a9 18675 
jumptbreg aa 3290 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 3216 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 15739 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 456 
tableretry bd 79 
tabletry be 133 
addtotable bf 772 
tabletrust c1 25 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 597 
return_solution c8 1338 
check_complete c9 25 
return_completion ca 0 
complete_execute cb 0 
use_table cd 824 
movreg d1 40691 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 32236 
subreg d8 241540 
mulreg d9 6571 
divreg da 2 
idivreg db 13102 
putdval e0 664221 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 123279 
allocate e9 308855 
deallocate ea 154453 
proceed eb 93518 
execute ec 103983 
unexeci ed 0 
executev ee 0 
calld ef 34988 
jump f0 108 
jumpz f1 22 
jumpnz f2 193579 
jumplt f3 24 
jumple f4 38286 
jumpgt f5 1491 
jumpge f6 0 
cases f7 0 
fail f8 118093 
noop f9 3733 
halt fa 0 
builtin fb 266214 
unifunc fc 0 
userfunc fd 0 
Total insts 4645453
_______________builtins_______________
0 0 
1 765 
2 29333 
3 25 
4 18 
5 1 
6 4 
7 0 
8 0 
9 0 
10 6721 
11 29347 
12 127246 
13 2000 
14 1 
15 23467 
16 0 
17 26768 
18 11 
19 11 
20 45 
21 153 
22 51 
23 151 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 20033 
50 9 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 71
	 number of use_tables 861
	 number of new_lookups 668
	 number of return_solutions 1338
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 772
	 number of variant checks 44108

yes
| ?- 
End XSB (Beta) (cputime 25.75s, elapsetime 32.08s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.wish_to*(B)(C)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.\K.*J(^\L.find*(*L)(*K))(^\M.*M(H))(I) /\ \N.\O.*N(^\P.eat*(*P)(*O))(^\Q.*Q(H))(I)(D))))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.wish_to*(G)(H)(^\I.\J.\K.*J(^\L.find*(*L)(*K))(^\M.*M(F))(I) /\ \N.\O.*N(^\P.eat*(*P)(*O))(^\Q.*Q(F))(I))(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.wish_to*(H)(I)(^\J.\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(F))(J) /\ \O.\P.*O(^\Q.eat*(*Q)(*P))(^\R.*R(F))(J)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.wish_to*(H)(I)(^\J.\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(D))(J) /\ \O.\P.*O(^\Q.eat*(*Q)(*P))(^\R.*R(D))(J)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.wish_to*(D)(E)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^unicorn)(^\J.\K.\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(J))(K) /\ \P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(J))(K)(F)))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.wish_to*(I)(J)(^\K.\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(H))(K) /\ \P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(H))(K))(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.wish_to*(F)(G)(^\H.\I.\J.*I(^\K.find*(*K)(*J))(^\L.*L(D))(H) /\ \M.\N.*M(^\O.eat*(*O)(*N))(^\P.*P(D))(H))))
CPU Time: 1.279

yes
| ?- getpvar 0 29249 
getpval 1 1376 
getstrv 2 18 
gettval 3 458 
getcon 4 1540 
getnil 5 1046 
getstr 6 3735 
getlist 7 1237 
unipvar 8 763 
unipval 9 126 
unitvar a 2172 
unitval b 729 
unicon c 93 
uninil d 30 
getnumcon e 758 
putnumcon f 14229 
putpvar 10 13226 
putpval 11 15484 
puttvar 12 168 
putstrv 13 34 
putcon 14 1533 
putnil 15 11 
putstr 16 1815 
putlist 17 32 
bldpvar 18 181 
bldpval 19 286 
bldtvar 1a 480 
bldtval 1b 1903 
bldcon 1c 215 
bldnil 1d 30 
uninumcon 1e 0 
bldnumcon 1f 28 
getlist_tvar_tvar 48 205 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 1724 
retrymeelse a1 154 
trustmeelsefail a2 1219 
try a3 3708 
retry a4 5024 
trust a5 2895 
getpbreg a6 602 
gettbreg a7 3231 
putpbreg a8 554 
puttbreg a9 795 
jumptbreg aa 664 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 562 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 1525 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 55 
tableretry bd 97 
tabletry be 171 
addtotable bf 67 
tabletrust c1 31 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 61 
return_solution c8 109 
check_complete c9 31 
return_completion ca 0 
complete_execute cb 0 
use_table cd 68 
movreg d1 2923 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 1721 
subreg d8 10875 
mulreg d9 289 
divreg da 2 
idivreg db 538 
putdval e0 29882 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 6428 
allocate e9 13525 
deallocate ea 7049 
proceed eb 4781 
execute ec 5117 
unexeci ed 0 
executev ee 0 
calld ef 1665 
jump f0 104 
jumpz f1 22 
jumpnz f2 8521 
jumplt f3 24 
jumple f4 1727 
jumpgt f5 210 
jumpge f6 0 
cases f7 0 
fail f8 5201 
noop f9 1138 
halt fa 0 
builtin fb 11989 
unifunc fc 0 
userfunc fd 0 
Total insts 230268
_______________builtins_______________
0 0 
1 57 
2 1324 
3 25 
4 18 
5 1 
6 4 
7 0 
8 0 
9 0 
10 279 
11 1338 
12 5488 
13 106 
14 1 
15 1021 
16 0 
17 1074 
18 11 
19 11 
20 42 
21 153 
22 48 
23 144 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 781 
50 9 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 89
	 number of use_tables 77
	 number of new_lookups 150
	 number of return_solutions 109
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 67
	 number of variant checks 1015

yes
| ?- 
End XSB (Beta) (cputime 2.30s, elapsetime 4.29s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.\H.\I.try_to*(H)(I)(^\J.\K.*J(^\L.find*(*L)(*K))(^\M.*M(F)))(G) /\ \N.\O.wish_to*(N)(O)(^\P.\Q.*P(^\R.eat*(*R)(*Q))(^\S.*S(F)))(G)(B)))
top level solution\A.*A(^j)(^\B.\C.\D.Ex E(*C(E) /\ *D(E))(^unicorn)(^\F.\G.*G(B)(^\H.\I.\J.try_to*(I)(J)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(F)))(H) /\ \O.\P.wish_to*(O)(P)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(F)))(H))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.*G(F)(^\H.\I.\J.try_to*(I)(J)(^\K.\L.*K(^\M.find*(*M)(*L))(^\N.*N(D)))(H) /\ \O.\P.wish_to*(O)(P)(^\Q.\R.*Q(^\S.eat*(*S)(*R))(^\T.*T(D)))(H))))
top level solution\A.*A(^j)(^\B.\C.*C(B)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^unicorn)(^\H.\I.\J.\K.try_to*(J)(K)(^\L.\M.*L(^\N.find*(*N)(*M))(^\O.*O(H)))(I) /\ \P.\Q.wish_to*(P)(Q)(^\R.\S.*R(^\T.eat*(*T)(*S))(^\U.*U(H)))(I)(D))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^unicorn)(^\D.\E.*E(^j)(^\F.\G.\H.try_to*(G)(H)(^\I.\J.*I(^\K.find*(*K)(*J))(^\L.*L(D)))(F) /\ \M.\N.wish_to*(M)(N)(^\O.\P.*O(^\Q.eat*(*Q)(*P))(^\R.*R(D)))(F)))
CPU Time: 1.081

yes
| ?- getpvar 0 24360 
getpval 1 1201 
getstrv 2 20 
gettval 3 462 
getcon 4 1729 
getnil 5 882 
getstr 6 3333 
getlist 7 1080 
unipvar 8 656 
unipval 9 100 
unitvar a 2279 
unitval b 829 
unicon c 111 
uninil d 33 
getnumcon e 814 
putnumcon f 11887 
putpvar 10 11350 
putpval 11 13528 
puttvar 12 178 
putstrv 13 30 
putcon 14 1396 
putnil 15 12 
putstr 16 2001 
putlist 17 35 
bldpvar 18 161 
bldpval 19 267 
bldtvar 1a 528 
bldtval 1b 2107 
bldcon 1c 256 
bldnil 1d 33 
uninumcon 1e 0 
bldnumcon 1f 31 
getlist_tvar_tvar 48 190 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 1491 
retrymeelse a1 178 
trustmeelsefail a2 1037 
try a3 3112 
retry a4 4199 
trust a5 2408 
getpbreg a6 588 
gettbreg a7 2689 
putpbreg a8 489 
puttbreg a9 652 
jumptbreg aa 688 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 573 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 1475 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 63 
tableretry bd 121 
tabletry be 191 
addtotable bf 58 
tabletrust c1 35 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 47 
return_solution c8 96 
check_complete c9 35 
return_completion ca 0 
complete_execute cb 0 
use_table cd 60 
movreg d1 2796 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 1490 
subreg d8 9072 
mulreg d9 233 
divreg da 2 
idivreg db 422 
putdval e0 24752 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 5568 
allocate e9 11163 
deallocate ea 5873 
proceed eb 4106 
execute ec 4350 
unexeci ed 0 
executev ee 0 
calld ef 1424 
jump f0 111 
jumpz f1 23 
jumpnz f2 7058 
jumplt f3 24 
jumple f4 1425 
jumpgt f5 226 
jumpge f6 0 
cases f7 0 
fail f8 4302 
noop f9 1209 
halt fa 0 
builtin fb 10005 
unifunc fc 0 
userfunc fd 0 
Total insts 197798
_______________builtins_______________
0 0 
1 59 
2 1110 
3 26 
4 19 
5 1 
6 4 
7 0 
8 0 
9 0 
10 219 
11 1125 
12 4522 
13 102 
14 1 
15 838 
16 0 
17 850 
18 11 
19 12 
20 47 
21 167 
22 53 
23 158 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 617 
50 10 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 105
	 number of use_tables 69
	 number of new_lookups 152
	 number of return_solutions 96
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 58
	 number of variant checks 1284

yes
| ?- 
End XSB (Beta) (cputime 2.00s, elapsetime 4.08s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^\H.woman(H) /\ \I.*I(H)(^\J.\K.*J(^\L.love*(*L)(*K))(^\M.*M(D))))(^\N.\O.*O(D)(^\P.\Q.*P(^\R.love*(*R)(*Q))(^\S.*S(N)))))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.*E(D)(^\F.\G.*F(^\H.love*(*H)(*G))(^\I.\J.Ex K(*I(K) /\ *J(K))(^\L.woman(L) /\ \M.*M(L)(^\N.\O.*N(^\P.love*(*P)(*O))(^\Q.*Q(D)))))))
top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.*E(D)(^\F.\G.\H.Ex I(*G(I) /\ *H(I))(^\J.woman(J) /\ \K.*K(J)(^\L.\M.*L(^\N.love*(*N)(*M))(^\O.*O(D))))(^\P.\Q.\R.*Q(^\S.love*(*S)(*R))(^\T.*T(P))(F))))
CPU Time: 0.719

yes
| ?- getpvar 0 15910 
getpval 1 933 
getstrv 2 20 
gettval 3 381 
getcon 4 980 
getnil 5 522 
getstr 6 1791 
getlist 7 774 
unipvar 8 462 
unipval 9 58 
unitvar a 1206 
unitval b 397 
unicon c 75 
uninil d 33 
getnumcon e 600 
putnumcon f 8265 
putpvar 10 7851 
putpval 11 9904 
puttvar 12 184 
putstrv 13 25 
putcon 14 790 
putnil 15 12 
putstr 16 953 
putlist 17 37 
bldpvar 18 121 
bldpval 19 225 
bldtvar 1a 230 
bldtval 1b 967 
bldcon 1c 96 
bldnil 1d 33 
uninumcon 1e 0 
bldnumcon 1f 31 
getlist_tvar_tvar 48 148 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 1187 
retrymeelse a1 122 
trustmeelsefail a2 807 
try a3 2043 
retry a4 2403 
trust a5 1536 
getpbreg a6 400 
gettbreg a7 1887 
putpbreg a8 351 
puttbreg a9 421 
jumptbreg aa 343 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 496 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 897 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 102 
tableretry bd 42 
tabletry be 76 
addtotable bf 42 
tabletrust c1 18 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 43 
return_solution c8 46 
check_complete c9 18 
return_completion ca 0 
complete_execute cb 0 
use_table cd 46 
movreg d1 1779 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 1069 
subreg d8 6383 
mulreg d9 146 
divreg da 2 
idivreg db 248 
putdval e0 16845 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 3887 
allocate e9 7312 
deallocate ea 3995 
proceed eb 2842 
execute ec 2761 
unexeci ed 0 
executev ee 0 
calld ef 1081 
jump f0 103 
jumpz f1 23 
jumpnz f2 4904 
jumplt f3 24 
jumple f4 959 
jumpgt f5 241 
jumpge f6 0 
cases f7 0 
fail f8 2817 
noop f9 561 
halt fa 0 
builtin fb 6993 
unifunc fc 0 
userfunc fd 0 
Total insts 132315
_______________builtins_______________
0 0 
1 71 
2 828 
3 26 
4 19 
5 1 
6 4 
7 0 
8 0 
9 0 
10 130 
11 843 
12 3033 
13 110 
14 1 
15 561 
16 0 
17 496 
18 11 
19 12 
20 48 
21 167 
22 54 
23 162 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 352 
50 10 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 45
	 number of use_tables 55
	 number of new_lookups 88
	 number of return_solutions 46
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 42
	 number of variant checks 264

yes
| ?- 
End XSB (Beta) (cputime 1.65s, elapsetime 3.66s)
XSB (Beta) Version 1.0 (92/10/8)
[sequential, single word, debug mode]
| ?- [ptq loaded]
[tables loaded]

yes
| ?- 
yes
| ?- top level solution\A.\B.Al C(*A(C) -> *B(C))(^man)(^\D.\E.\F.Ex G(*E(G) /\ *F(G))(^woman)(^\H.\I.*I(D)(^\J.\K.*J(^\L.love*(*L)(*K))(^\M.*M(H))) /\ \N.*N(H)(^\O.\P.*O(^\Q.love*(*Q)(*P))(^\R.*R(D)))))
top level solution\A.\B.Ex C(*A(C) /\ *B(C))(^woman)(^\D.\E.\F.Al G(*E(G) -> *F(G))(^man)(^\H.\I.*I(H)(^\J.\K.*J(^\L.love*(*L)(*K))(^\M.*M(D))) /\ \N.*N(D)(^\O.\P.*O(^\Q.love*(*Q)(*P))(^\R.*R(H)))))
CPU Time: 0.679

yes
| ?- getpvar 0 12343 
getpval 1 789 
getstrv 2 20 
gettval 3 393 
getcon 4 1181 
getnil 5 434 
getstr 6 1567 
getlist 7 643 
unipvar 8 377 
unipval 9 38 
unitvar a 1348 
unitval b 526 
unicon c 87 
uninil d 33 
getnumcon e 741 
putnumcon f 6486 
putpvar 10 6598 
putpval 11 8501 
puttvar 12 185 
putstrv 13 20 
putcon 14 713 
putnil 15 12 
putstr 16 1190 
putlist 17 35 
bldpvar 18 107 
bldpval 19 199 
bldtvar 1a 298 
bldtval 1b 1223 
bldcon 1c 145 
bldnil 1d 33 
uninumcon 1e 0 
bldnumcon 1f 31 
getlist_tvar_tvar 48 144 
getcomma 49 0 
getcomma_tvar_tvar 4a 0 
getfloat 80 0 
putfloat 81 0 
unifloat 82 0 
bldfloat 83 0 
trys 9a 0 
retrys 9b 0 
trusts 9c 0 
neck 9d 0 
neck_putpbreg 9e 0 
neck_puttbreg 9f 0 
trymeelse a0 1003 
retrymeelse a1 150 
trustmeelsefail a2 668 
try a3 1630 
retry a4 1844 
trust a5 1197 
getpbreg a6 402 
gettbreg a7 1505 
putpbreg a8 294 
puttbreg a9 328 
jumptbreg aa 394 
getarg_proceed ab 0 
getstring ac 0 
putstring ad 0 
unistring ae 0 
bldstring af 0 
switchonterm b0 519 
switchoncon b1 0 
switchonstr b2 0 
switchonbound b3 890 
suspend b6 0 
partry b7 0 
terminate b8 0 
dyntrustmeelsefail ba 107 
tableretry bd 72 
tabletry be 136 
addtotable bf 34 
tabletrust c1 26 
tabconfig c2 0 
complete_call c3 0 
comptabletry c4 0 
tabletryfail c5 0 
comptabletryfail c6 0 
new_lookup c7 25 
return_solution c8 42 
check_complete c9 26 
return_completion ca 0 
complete_execute cb 0 
use_table cd 38 
movreg d1 1735 
negate d2 0 
and d3 0 
or d4 0 
lshiftl d5 0 
lshiftr d6 0 
addreg d7 865 
subreg d8 5050 
mulreg d9 102 
divreg da 2 
idivreg db 160 
putdval e0 13004 
putuval e1 0 
getival e2 0 
unexec e7 0 
call e8 3312 
allocate e9 5587 
deallocate ea 3107 
proceed eb 2379 
execute ec 2229 
unexeci ed 0 
executev ee 0 
calld ef 892 
jump f0 107 
jumpz f1 23 
jumpnz f2 3815 
jumplt f3 24 
jumple f4 733 
jumpgt f5 248 
jumpge f6 0 
cases f7 0 
fail f8 2184 
noop f9 672 
halt fa 0 
builtin fb 5504 
unifunc fc 0 
userfunc fd 0 
Total insts 109504
_______________builtins_______________
0 0 
1 71 
2 673 
3 26 
4 19 
5 1 
6 4 
7 0 
8 0 
9 0 
10 85 
11 688 
12 2313 
13 114 
14 1 
15 428 
16 0 
17 331 
18 11 
19 12 
20 48 
21 167 
22 54 
23 162 
24 9 
25 0 
26 0 
27 20 
28 0 
29 0 
30 2 
31 0 
32 0 
33 2 
34 7 
35 0 
36 0 
37 0 
38 0 
39 0 
40 0 
41 0 
42 4 
43 0 
44 0 
45 0 
46 0 
47 0 
48 2 
49 232 
50 10 
51 0 
52 0 
53 3 
54 0 
55 0 
56 0 
57 0 
58 0 
59 0 
60 0 
61 0 
62 0 
63 0 
64 0 
65 0 
66 0 
67 0 
68 0 
69 0 
70 0 
71 0 
72 0 
73 0 
74 0 
75 0 
76 0 
77 0 
78 0 
79 0 
80 0 
81 0 
82 0 
83 0 
84 0 
85 0 
86 0 
87 0 
88 0 
89 0 
90 0 
91 0 
92 0 
93 0 
94 0 
95 0 
96 0 
97 0 
98 0 
99 0 
100 3 
101 0 
102 0 
103 0 
104 0 
105 0 
106 0 
107 0 
108 0 
109 0 
110 0 
111 0 
112 0 
113 0 
114 0 
115 0 
116 0 
117 0 
118 0 
119 0 
120 0 
121 0 
122 0 
123 0 
124 0 
125 0 
126 1 
127 0 
128 1 
129 0 
130 0 
131 0 
132 0 
133 0 
134 0 
135 0 
136 0 
137 0 
138 0 
139 0 
140 0 
141 0 
142 0 
143 0 
144 0 
145 0 
146 0 
147 0 
148 0 
149 0 
150 0 
151 0 
152 0 
153 0 
154 0 
155 0 
156 0 
157 0 
158 0 
159 0 
160 0 
161 0 
162 0 
163 0 
164 0 
165 0 
166 0 
167 0 
168 0 
169 0 
170 0 
171 0 
172 0 
173 0 
174 0 
175 0 
176 0 
177 0 
178 0 
179 0 
180 0 
181 0 
182 0 
183 0 
184 0 
185 0 
186 0 
187 0 
188 0 
189 0 
190 0 
191 0 
192 0 
193 0 
194 0 
195 0 
196 0 
197 0 
198 0 
199 0 
200 0 
201 0 
202 0 
203 0 
204 0 
205 0 
206 0 
207 0 
208 0 
209 0 
210 0 
211 0 
212 0 
213 0 
214 0 
215 0 
216 0 
217 0 
218 0 
219 0 
220 0 
221 0 
222 0 
223 0 
224 0 
225 0 
226 0 
227 0 
228 0 
229 0 
230 0 
231 0 
232 0 
233 0 
234 0 
235 0 
236 0 
237 0 
238 0 
239 0 
240 0 
241 0 
242 0 
243 0 
244 0 
245 0 
246 0 
247 0 
248 0 
249 0 
250 0 
251 0 
252 0 
253 0 
254 0 
255 0 
====GLOBAL INFO====
	 number of suspensions 71
	 number of use_tables 48
	 number of new_lookups 96
	 number of return_solutions 42
	 number of return_completions 0
	 number of (poss duplicate) solutions entered 34
	 number of variant checks 590

yes
| ?- 
End XSB (Beta) (cputime 1.56s, elapsetime 3.68s)
