/* File:      trie_intern_attv.P
** Author(s): Baoqiu Cui
**
** $Id: trie_intern_attv.P,v 1.1 1999-11-06 04:36:10 cbaoqiu Exp $
*/

:- import put_attributes/2, get_attributes/3 from machine.
:- import attv_unify/2 from machine.
:- import new_trie/1, trie_intern/4, trie_interned/4 from intern.

test :-
	test1,
	test2.

test1 :-
	put_attributes(X, v(1)),
	new_trie(R),
	trie_intern(f(X,X), R, _Leaf1, _Ret),

	% Call trie_interned/4 with Leaf as a variable, _Leaf2.  So
	% function trie_interned() will be used.
	
	trie_interned(f(X1, X2), R, _Leaf2, _),
	get_attributes(X1, V1, _),
	nonvar(V1), V1 = v(1),
	get_attributes(X2, V2, _),
	nonvar(V2), V1 = v(1),

	% Now update the attr of X2
	put_attributes(X2, v(111)),
	get_attributes(X1, NewV1, _),
	NewV1 = v(111),
	writeln('Passed trie_intern_attv test1!').

test2 :-
	put_attributes(X, v(1)),
	new_trie(R),
	trie_intern(f(X,X), R, Leaf, _Ret),

	% Call trie_interned/4 with Leaf as an integer, Leaf.  So
	% function bottom_up_unify() will be used.
	
	trie_interned(TT, R, Leaf, _),
	TT = f(X1, X2),
	get_attributes(X1, V1, _),
	nonvar(V1), V1 = v(1),
	get_attributes(X2, V2, _),
	nonvar(V2), V1 = v(1),

	% Now update the attr of X2
	put_attributes(X2, v(111)),
	get_attributes(X1, NewV1, _),
	NewV1 = v(111),
	writeln('Passed trie_intern_attv test2!').
