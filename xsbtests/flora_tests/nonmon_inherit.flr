/* This demo shows various cases of non-monotonic inheritance */
q.q[].

    a[b *-> c].
    a[b1 *-> c1].
    aa:a.
    aa[b->d].

    tst1 :- aa[b->X], writeln(X), fail.      % X=d
    tst1.

    aaa::a.
    tst2 :- aaa[@U*->Y], @U=..UUU, write(UUU), write('  '), writeln(Y), fail.
    tst2.

    a1[b *-> d].
    aaaa:a1.
    aaaa:a.
    tst3 :- aaaa[@U->Y], @U=..UUU, write(UUU), write('  '), writeln(Y), fail.
    tst3.

%%------------------


    ab[b *->> {cc,dd}].
    ab[b2 *->> {cc2,dd2}].

    abb:ab.
    abb[b ->> tt].
    tst4 :- abb[@M ->> K], @M=..MM, write(MM), write('  '), writeln(K), fail.
    tst4.

    aabb:ab.
    tst5 :- aabb[@M ->> K], @M=..MM, write(MM), write('  '), writeln(K), fail.
    tst5.

    abbb::ab.
    abbb[b *->> e].
    tst6 :- abbb[@M *->> K], @M=..MM, write(MM), write('  '), writeln(K), fail.
    tst6.

    ab1[b *->> ttt].
    ab1::ab.
    bbb[b2 *->> {e}].
    aabb1:bbb.
    aabb1:ab1.

    tst7 :- aabb1[@M ->> K], @M=..MM,write(MM),write('  '),writeln(K),fail.
    tst7.

    test :- tst1, tst2, tst3, tst4, tst5, tst6, tst7.
