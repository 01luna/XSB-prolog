:- import get_calls_for_table/3, get_returns_for_call/2 from tables.
:- import subsumes_chk/2 from subsumes.

:- table(sp/3). 

old_testcombo:- 
	sp(a,b,F),Term = sp(a,b,F),writeln(Term),fail
	;  sp(a,c,F),Term = sp(a,c,F),writeln(Term),fail
	;  sp(a,d,F),Term = sp(a,d,F),writeln(Term),fail
	;  sp(a,e,F),Term = sp(a,e,F),writeln(Term),fail
	;  sp(a,a,F),Term = sp(a,a,F),writeln(Term),fail
	;  sp(b,b,F),Term = sp(b,b,F),writeln(Term),fail
	;  sp(b,c,F),Term = sp(b,c,F),writeln(Term),fail
	;  sp(b,d,F),Term = sp(b,d,F),writeln(Term),fail
	;  sp(b,e,F),Term = sp(b,e,F),writeln(Term),fail
	;  sp(b,a,F),Term = sp(b,a,F),writeln(Term).

testcombo:- 
	mysp(a,b,F),Term = sp(a,b,F),writeln(Term),fail
	;  mysp(a,c,F),Term = sp(a,c,F),writeln(Term),fail
	;  mysp(a,d,F),Term = sp(a,d,F),writeln(Term),fail
	;  mysp(a,e,F),Term = sp(a,e,F),writeln(Term),fail
	;  mysp(a,a,F),Term = sp(a,a,F),writeln(Term),fail
	;  mysp(b,b,F),Term = sp(b,b,F),writeln(Term),fail
	;  mysp(b,c,F),Term = sp(b,c,F),writeln(Term),fail
	;  mysp(b,d,F),Term = sp(b,d,F),writeln(Term),fail
	;  mysp(b,e,F),Term = sp(b,e,F),writeln(Term),fail
	;  mysp(b,a,F),Term = sp(b,a,F),writeln(Term).


min(MinVal,MinVal,[]).
min(MinValIn,MinValOut,[H|T]) :-
	( MinValIn > H
          -> min(H, MinValOut, T)
          ; min(MinValIn,MinValOut, T)
        ).

mysp(X,Y,C) :-
	tfindall(Dist,sp(X,Y,Dist),DistList),
	(DistList == [] -> fail
         ; min(1000,C,DistList)).

sp(X,Y,C) :-  
        dist(X,Y,C), 
        none_better(X,Y,C). 
sp(X,Y,C) :- 
        sp(X,Z,C1), 
        none_better(X,Z,C1), 
        dist(Z,Y,C2), 
%        writeln(add(C1,C2)), 
        C is C1+C2, 
        none_better(X,Y,C). 
 
 
none_better(X,Y,C) :- 
        get_calls_for_table(sp(X,_,_),Call,_Empty), 
        subsumes_chk(Call,sp(X,Y,_)), 
%        writeln(call(Call)), 
       !, 
        \+ (    get_returns_for_call(Call,Ret), 
                Ret = sp(X,Y,C1), 
%                writeln(compare(C1,C)), 
                C1 < C 
        ). 

dist(a,d,2).

dist(a,b,5).
dist(a,c,3).
dist(c,b,1).
dist(b,e,3).
dist(b,d,4).
dist(e,d,2).

dist(d,b,1).

